import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as n,t as m,e as a,n as t,g as e,d as o,f as p,r as c,o as h}from"./app-BgNevrm5.js";const d={},k={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},f=n("nav",{class:"table-of-contents"},[n("ul")],-1),g=n("hr",null,null,-1),b=p(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in iOS 17</strong></p><p>SwiftUI’s <code>withAnimation()</code> function can optionally be given a completion callback with code to run when the animation finishes. This might be where you adjust some program state, but you can also use it as a simple way to chain animations together – to animate one thing, then animate something else afterwards.</p><p>For example, this makes a button scale up then fade out:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scaleUp <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> fadeOut <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Tap Me!&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            withAnimation <span class="token punctuation">{</span></span>
<span class="line">                scaleUp <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">            <span class="token punctuation">}</span> completion<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">                withAnimation <span class="token punctuation">{</span></span>
<span class="line">                    fadeOut <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scaleUp <span class="token operator">?</span> <span class="token number">3</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span>fadeOut <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),v={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes-1.zip",target:"_blank",rel:"noopener noreferrer"},y=p(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes-1~dark@2x.gif" alt="A button that scales up then disappears when pressed." tabindex="0" loading="lazy"><figcaption>A button that scales up then disappears when pressed.</figcaption></figure><p>There is one little subtlety here that might hit you: if you’re using a spring animation it’s possible there’s a very long tail of movement at the end, where your animation is moving small fractions of a point that are imperceptible to the user.</p><p>The default behavior of <code>withAnimation()</code> is to consider the animation complete even with that long tail of tiny movement still happening, but if you wanted it to be 100% finished you can override the default like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scaleUp <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> fadeOut <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Tap Me!&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span>bouncy<span class="token punctuation">,</span> completionCriteria<span class="token punctuation">:</span> <span class="token punctuation">.</span>removed<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                scaleUp <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">            <span class="token punctuation">}</span> completion<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">                withAnimation <span class="token punctuation">{</span></span>
<span class="line">                    fadeOut <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scaleUp <span class="token operator">?</span> <span class="token number">3</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span>fadeOut <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),_={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes-2.zip",target:"_blank",rel:"noopener noreferrer"},x=n("figure",null,[n("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes-2~dark@2x.gif",alt:"A button that scales up then disappears when pressed.",tabindex:"0",loading:"lazy"}),n("figcaption",null,"A button that scales up then disappears when pressed.")],-1),H=n("p",null,"I probably wouldn’t recommend that unless you had a very specific use case – the default setting ought to be fine.",-1),A=n("div",{class:"hint-container tip"},[n("p",{class:"hint-container-title"},"Tips"),n("p",null,"For more complex effects, consider using a phase animator instead of animation completion closures.")],-1),S={class:"hint-container details"},U=n("summary",null,"Similar solutions…",-1);function q(l,E){const s=c("VPCard"),i=c("FontIcon");return h(),u("div",null,[n("h1",k,[n("a",w,[n("span",null,m(l.$frontmatter.title)+" 관련",1)])]),a(s,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,g,a(s,t(e({title:"How to run a completion callback when an animation finishes | SwiftUI by Example",desc:"How to run a completion callback when an animation finishes",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("blockquote",null,[n("p",null,[n("a",v,[a(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),y,n("blockquote",null,[n("p",null,[n("a",_,[a(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),x,H,A,n("details",S,[U,a(s,t(e({title:"How to start an animation immediately after a view appears | SwiftUI by Example",desc:"How to start an animation immediately after a view appears",link:"/hackingwithswift.com/swiftui/how-to-start-an-animation-immediately-after-a-view-appears.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to create an explicit animation | SwiftUI by Example",desc:"How to create an explicit animation",link:"/hackingwithswift.com/swiftui/how-to-create-an-explicit-animation.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to create a spring animation | SwiftUI by Example",desc:"How to create a spring animation",link:"/hackingwithswift.com/swiftui/how-to-create-a-spring-animation.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to delay an animation | SwiftUI by Example",desc:"How to delay an animation",link:"/hackingwithswift.com/swiftui/how-to-delay-an-animation.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to run some code when state changes using onChange() | SwiftUI by Example",desc:"How to run some code when state changes using onChange()",link:"/hackingwithswift.com/swiftui/how-to-run-some-code-when-state-changes-using-onchange.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const C=r(d,[["render",q],["__file","how-to-run-a-completion-callback-when-an-animation-finishes.html.vue"]]),T=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes.html","title":"How to run a completion callback when an animation finishes","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to run a completion callback when an animation finishes","description":"Article(s) > How to run a completion callback when an animation finishes","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to run a completion callback when an animation finishes"},{"property":"og:description","content":"How to run a completion callback when an animation finishes"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to run a completion callback when an animation finishes"}],["meta",{"property":"og:description","content":"Article(s) > How to run a completion callback when an animation finishes"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes-1~dark@2x.gif"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to run a completion callback when an animation finishes\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes-1~dark@2x.gif\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes-2~dark@2x.gif\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.4,"words":719},"filePathRelative":"hackingwithswift.com/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes.md","excerpt":"\\n"}');export{C as comp,T as data};
