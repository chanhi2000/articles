import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,t as u,e as s,n as e,g as i,d as a,f as k,r as p,o as d}from"./app-BgNevrm5.js";const m={},w={id:"frontmatter-title-관련",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-관련"},h=n("nav",{class:"table-of-contents"},[n("ul")],-1),f=n("hr",null,null,-1),v=k(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI&#39;s <code>SpriteView</code> lets us render any <code>SKScene</code> subclass right inside SwiftUI, and it will even resize the scene if you request it.</p><p>To try it out, first add <code>import SpriteKit</code> to your Swift file. Second, create some sort of game scene you want to render. For example, this will create falling boxes wherever you tap, adding a physics effect so they interact neatly:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token comment">// A simple game scene with falling boxes</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">GameScene</span><span class="token punctuation">:</span> <span class="token class-name">SKScene</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">didMove</span><span class="token punctuation">(</span>to view<span class="token punctuation">:</span> <span class="token class-name">SKView</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        physicsBody <span class="token operator">=</span> <span class="token class-name">SKPhysicsBody</span><span class="token punctuation">(</span>edgeLoopFrom<span class="token punctuation">:</span> frame<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">touchesBegan</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> touches<span class="token punctuation">:</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token class-name">UITouch</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> with event<span class="token punctuation">:</span> <span class="token class-name">UIEvent</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">guard</span> <span class="token keyword">let</span> touch <span class="token operator">=</span> touches<span class="token punctuation">.</span>first <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">let</span> location <span class="token operator">=</span> touch<span class="token punctuation">.</span><span class="token function">location</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">let</span> box <span class="token operator">=</span> <span class="token class-name">SKSpriteNode</span><span class="token punctuation">(</span>color<span class="token punctuation">:</span> <span class="token punctuation">.</span>red<span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        box<span class="token punctuation">.</span>position <span class="token operator">=</span> location</span>
<span class="line">        box<span class="token punctuation">.</span>physicsBody <span class="token operator">=</span> <span class="token class-name">SKPhysicsBody</span><span class="token punctuation">(</span>rectangleOf<span class="token punctuation">:</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">addChild</span><span class="token punctuation">(</span>box<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// A sample SwiftUI creating a GameScene and sizing it</span></span>
<span class="line"><span class="token comment">// at 300x400 points</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> scene<span class="token punctuation">:</span> <span class="token class-name">SKScene</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> scene <span class="token operator">=</span> <span class="token class-name">GameScene</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        scene<span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token class-name">CGSize</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">)</span></span>
<span class="line">        scene<span class="token punctuation">.</span>scaleMode <span class="token operator">=</span> <span class="token punctuation">.</span>fill</span>
<span class="line">        <span class="token keyword">return</span> scene</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">SpriteView</span><span class="token punctuation">(</span>scene<span class="token punctuation">:</span> scene<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),b={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-integrate-spritekit-using-spriteview-1.zip",target:"_blank",rel:"noopener noreferrer"},y=n("figure",null,[n("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-integrate-spritekit-using-spriteview-1~dark.png",alt:"A lot of red squares piled up at the bottom of the screen.",tabindex:"0",loading:"lazy"}),n("figcaption",null,"A lot of red squares piled up at the bottom of the screen.")],-1),S=n("p",null,[a("The game scene you create is fully interactive, so it works just like a regular "),n("code",null,"SKView"),a(" would do in UIKit.")],-1);function _(o,K){const t=p("VPCard"),c=p("FontIcon");return d(),r("div",null,[n("h1",w,[n("a",g,[n("span",null,u(o.$frontmatter.title)+" 관련",1)])]),s(t,e(i({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),h,f,s(t,e(i({title:"How to integrate SpriteKit using SpriteView | SwiftUI by Example",desc:"How to integrate SpriteKit using SpriteView",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-integrate-spritekit-using-spriteview",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,n("blockquote",null,[n("p",null,[n("a",b,[s(c,{icon:"fas fa-file-zipper"}),a("Download this as an Xcode project")])])]),y,S])}const I=l(m,[["render",_],["__file","how-to-integrate-spritekit-using-spriteview.html.vue"]]),z=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-integrate-spritekit-using-spriteview.html","title":"How to integrate SpriteKit using SpriteView","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to integrate SpriteKit using SpriteView","description":"Article(s) > How to integrate SpriteKit using SpriteView","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to integrate SpriteKit using SpriteView"},{"property":"og:description","content":"How to integrate SpriteKit using SpriteView"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-integrate-spritekit-using-spriteview.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-integrate-spritekit-using-spriteview.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to integrate SpriteKit using SpriteView"}],["meta",{"property":"og:description","content":"Article(s) > How to integrate SpriteKit using SpriteView"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-integrate-spritekit-using-spriteview-1~dark.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to integrate SpriteKit using SpriteView\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-integrate-spritekit-using-spriteview-1~dark.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.24,"words":371},"filePathRelative":"hackingwithswift.com/swiftui/how-to-integrate-spritekit-using-spriteview.md","excerpt":"\\n"}');export{I as comp,z as data};
