import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as n,t as m,e as a,n as t,g as e,d as i,f as p,r as c,o as h}from"./app-BgNevrm5.js";const g={},w={id:"frontmatter-title-관련",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-관련"},f=n("nav",{class:"table-of-contents"},[n("ul")],-1),v=n("hr",null,null,-1),b=p(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI’s two-way bindings let us adjust the state of our program, and we can respond to that by adjusting our view hierarchy. For example, we might make some text appear or disappear, or adjust the opacity of a view.</p><p>Rather than having a state change happen immediately, we can <em>animate</em> changes caused by a binding being modified by adding <code>animation()</code> to our binding. For example, this view has a toggle that shows or hides a text view depending on the stage of the toggle:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> showingWelcome <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Toggle label&quot;</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> $showingWelcome<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">if</span> showingWelcome <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello World&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-animate-changes-in-binding-values-1.zip",target:"_blank",rel:"noopener noreferrer"},_=p(`<p>Without animation, the text view will just appear or disappear immediately, which causes a visual jump. If we modify the toggle so it was bound to <code>$showingWelcome.animation()</code> then the text view will slide in smoothly:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> showingWelcome <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Toggle label&quot;</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> $showingWelcome<span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">if</span> showingWelcome <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello World&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-animate-changes-in-binding-values-2.zip",target:"_blank",rel:"noopener noreferrer"},S=n("p",null,[i("If you want more control over the animation, you can pass parameters to "),n("code",null,"animation()"),i(" that affect how the transition happens. For example, this will bring the text in with a simple spring animation: "),n("code",null,"$showingWelcome.animation(.spring())"),i(".")],-1),H={class:"hint-container details"},V=n("summary",null,"Similar solutions…",-1);function q(r,I){const s=c("VPCard"),l=c("FontIcon"),o=c("VidStack");return h(),d("div",null,[n("h1",w,[n("a",k,[n("span",null,m(r.$frontmatter.title)+" 관련",1)])]),a(s,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,v,a(s,t(e({title:"How to animate changes in binding values | SwiftUI by Example",desc:"How to animate changes in binding values",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-animate-changes-in-binding-values",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("blockquote",null,[n("p",null,[n("a",y,[a(l,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),a(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-animate-changes-in-binding-values-1~dark.mp4"}),_,n("blockquote",null,[n("p",null,[n("a",x,[a(l,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),a(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-animate-changes-in-binding-values-2~dark.mp4"}),S,a(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-animate-changes-in-binding-values-3~dark.mp4"}),n("details",H,[V,a(s,t(e({title:"How to create a List or a ForEach from a binding | SwiftUI by Example",desc:"How to create a List or a ForEach from a binding",link:"/hackingwithswift.com/swiftui/how-to-create-a-list-or-a-foreach-from-a-binding.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"What is the @Binding property wrapper? | SwiftUI by Example",desc:"What is the @Binding property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-binding-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to fix “Cannot convert value of type 'String' to expected argument type 'Binding<String>'” | SwiftUI by Example",desc:"How to fix “Cannot convert value of type 'String' to expected argument type 'Binding<String>'”",link:"/hackingwithswift.com/swiftui/how-to-fix-cannot-convert-value-of-type-string-to-expected-argument-type-binding-string.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to animate the size of text | SwiftUI by Example",desc:"How to animate the size of text",link:"/hackingwithswift.com/swiftui/how-to-animate-the-size-of-text.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to animate SF Symbols | SwiftUI by Example",desc:"How to animate SF Symbols",link:"/hackingwithswift.com/swiftui/how-to-animate-sf-symbols.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const E=u(g,[["render",q],["__file","how-to-animate-changes-in-binding-values.html.vue"]]),B=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-animate-changes-in-binding-values.html","title":"How to animate changes in binding values","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to animate changes in binding values","description":"Article(s) > How to animate changes in binding values","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to animate changes in binding values"},{"property":"og:description","content":"How to animate changes in binding values"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-animate-changes-in-binding-values.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-animate-changes-in-binding-values.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to animate changes in binding values"}],["meta",{"property":"og:description","content":"Article(s) > How to animate changes in binding values"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to animate changes in binding values\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.17,"words":650},"filePathRelative":"hackingwithswift.com/swiftui/how-to-animate-changes-in-binding-values.md","excerpt":"\\n"}');export{E as comp,B as data};
