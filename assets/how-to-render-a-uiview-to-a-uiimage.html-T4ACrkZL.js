import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as e,t as s,e as o,n as i,g as r,a as t,r as m,o as d}from"./app-BgNevrm5.js";const g={},p={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},w=e("nav",{class:"table-of-contents"},[e("ul")],-1),u=e("hr",null,null,-1),f=e("blockquote",null,[e("p",null,"Available from iOS 10.0")],-1),I=e("details",{class:"hint-container details"},[e("summary",null,"Similar solutions‚Ä¶"),t(`
/example-code/uikit/how-to-mask-one-uiview-using-another-uiview">How to mask one UIView using another UIView 
/example-code/media/how-to-read-the-average-color-of-a-uiimage-using-ciareaaverage">How to read the average color of a UIImage using CIAreaAverage 
/example-code/core-graphics/how-to-use-core-graphics-blend-modes-to-draw-a-uiimage-differently">How to use Core Graphics blend modes to draw a UIImage differently 
/example-code/media/how-to-save-a-uiimage-to-a-file-using-jpegdata-and-pngdata">How to save a UIImage to a file using jpegData() and pngData() 
/example-code/media/how-to-pixellate-a-uiimage">How to pixellate a UIImage</a>
`)],-1);function v(n,y){const a=m("VPCard");return d(),l("div",null,[e("h1",p,[e("a",h,[e("span",null,s(n.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),o(a,i(r({title:"Media - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/media/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,u,o(a,i(r({title:"How to render a UIView to a UIImage | Media - free Swift example code",desc:"How to render a UIView to a UIImage",link:"https://hackingwithswift.com/example-code/media/how-to-render-a-uiview-to-a-uiimage",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,t(" TODO: ÏûëÏÑ± "),t(` 
You can render any \`UIView\` into a \`UIImage\` in just four lines of code, and that even handles drawing all the subviews automatically. Here's the code:

\`\`\`swift
let renderer = UIGraphicsImageRenderer(size: view.bounds.size)
let image = renderer.image { ctx in
    view.drawHierarchy(in: view.bounds, afterScreenUpdates: true)
}
\`\`\`

Helpfully, that code works equally well no matter what the view contains - if you're using UIKit, SpriteKit, Metal or whatever, it all works.

`),I])}const _=c(g,[["render",v],["__file","how-to-render-a-uiview-to-a-uiimage.html.vue"]]),b=JSON.parse('{"path":"/hackingwithswift.com/example-code/media/how-to-render-a-uiview-to-a-uiimage.html","title":"How to render a UIView to a UIImage","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to render a UIView to a UIImage","description":"Article(s) > How to render a UIView to a UIImage","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-10.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to render a UIView to a UIImage"},{"property":"og:description","content":"How to render a UIView to a UIImage"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/media/how-to-render-a-uiview-to-a-uiimage.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/media/how-to-render-a-uiview-to-a-uiimage.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to render a UIView to a UIImage"}],["meta",{"property":"og:description","content":"Article(s) > How to render a UIView to a UIImage"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-10.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to render a UIView to a UIImage\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.16,"words":348},"filePathRelative":"hackingwithswift.com/example-code/media/how-to-render-a-uiview-to-a-uiimage.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{_ as comp,b as data};
