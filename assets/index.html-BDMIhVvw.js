import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as a,t as s,e as t,n as o,g as i,r as w,o as l}from"./app-BgNevrm5.js";const d={},h={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},p=a("blockquote",null,[a("p",null,"Found 7 articles in the Swift Knowledge Base for this category.")],-1);function f(n,m){const e=w("VPCard");return l(),r("div",null,[a("h1",h,[a("a",g,[a("span",null,s(n.$frontmatter.title)+" ê´€ë ¨",1)])]),t(e,o(i({title:"WKWebView - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials â€“ learn Swift, iOS, and Xcode",link:"https://hackingwithswift.com/example-code/wkwebview",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),p,t(e,o(i({title:"How to control the sites a WKWebView can visit using WKNavigationDelegate",desc:"By default a <code>WKWebView</code> can navigate to any links the user selects, but itâ€™s common to want to restrict that. It only takes three steps to accomplish this:...",link:"/hackingwithswift.com/example-code/wkwebview/how-to-control-the-sites-a-wkwebview-can-visit-using-wknavigationdelegate.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),t(e,o(i({title:"How to control the user interface of a WKWebView using WKUIDelegate",desc:"By default <code>WKWebView</code> works sort of like Safari, albeit in a single view rather than having tabs. If you want something more advanced â€“Â being able to monitor opening and closing windows, override behavior for JavaScript user interface, and so on â€“ then the <code>WKUIDelegate</code> protocol is for you....",link:"/hackingwithswift.com/example-code/wkwebview/how-to-control-the-user-interface-of-a-wkwebview-using-wkuidelegate.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),t(e,o(i({title:"How to enable back and forward swiping gestures in WKWebView",desc:"One of the many advantages of <code>WKWebView</code> over <code>UIWebView</code> is its ability to draw on some of the native user interface of Safari. It's a long way from the <code>SFSafariViewController</code> that was introduced in iOS 9.0, but you can enable the built-in gestures that let users go back and forward by swiping left and right....",link:"/hackingwithswift.com/example-code/wkwebview/how-to-enable-back-and-forward-swiping-gestures-in-wkwebview.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),t(e,o(i({title:"How to load HTTP content in WKWebView and UIWebView",desc:"App Transport Security (ATS) normally doesnâ€™t allow our apps to connect to HTTP servers, but thereâ€™s a special exception you can add to allow <code>UIWebView</code> and <code>WKWebView</code> to load insecure content....",link:"/hackingwithswift.com/example-code/wkwebview/how-to-load-http-content-in-wkwebview-and-uiwebview.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),t(e,o(i({title:"How to monitor WKWebView page load progress using key-value observing",desc:"iOS often uses a delegate system to report important changes, such as when a table view cell has been tapped or when a web page has finished loading. But the delegate system only goes so far, and if you want fine-grained detailed information sometimes you need to turn to KVO, or 'key-value observing.'...",link:"/hackingwithswift.com/example-code/wkwebview/how-to-monitor-wkwebview-page-load-progress-using-key-value-observing.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),t(e,o(i({title:"How to run JavaScript on a WKWebView with evaluateJavaScript",desc:"Using <code>evaluateJavaScript()</code> you can run any JavaScript in a <code>WKWebView</code> and read the result in Swift. This can be any JavaScript you want, which effectively means you can dig right into a page and pull out any kind of information you want....",link:"/hackingwithswift.com/example-code/wkwebview/how-to-run-javascript-on-a-wkwebview-with-evaluatejavascript.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),t(e,o(i({title:"What's the difference between UIWebView and WKWebView",desc:"The <code>UIWebView</code> class has been around since iOS 2.0 as a way to show HTML content inside your app, but iOS 8.0 introduced <code>WKWebView</code> as an alternative - what's the difference?...",link:"/hackingwithswift.com/example-code/wkwebview/whats-the-difference-between-uiwebview-and-wkwebview.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16)])}const k=c(d,[["render",f],["__file","index.html.vue"]]),v=JSON.parse('{"path":"/hackingwithswift.com/example-code/wkwebview/","title":"WKWebView - free Swift example code","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"WKWebView - free Swift example code","description":"Article(s) > WKWebView - free Swift example code","icon":"fa-brands fa-swift","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > WKWebView - free Swift example code"},{"property":"og:description","content":"WKWebView - free Swift example code"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/wkwebview/"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/wkwebview/"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"WKWebView - free Swift example code"}],["meta",{"property":"og:description","content":"Article(s) > WKWebView - free Swift example code"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"WKWebView - free Swift example code\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.25,"words":674},"filePathRelative":"hackingwithswift.com/example-code/wkwebview/README.md","excerpt":"\\n"}');export{k as comp,v as data};
