import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as s,t as k,e as n,n as t,g as e,d as i,f as l,r as p,o as m}from"./app-BgNevrm5.js";const w={},h={id:"frontmatter-title-관련",tabindex:"-1"},v={class:"header-anchor",href:"#frontmatter-title-관련"},g=s("nav",{class:"table-of-contents"},[s("ul")],-1),f=s("hr",null,null,-1),b=l(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI provides two ways to let us move items in a list: a simple way supported on iOS 16.0 or later, and a more advanced way that works on older iOS versions too. Regardless of which approach you choose, you can also selectively disable moving a row using the <code>moveDisabled()</code> modifier.</p><p>The simple approach to moving works great if you&#39;re just moving your item around in an array, without adding any additional logic. To use it, use a data binding with your list and pass in the <code>editActions</code> parameter, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> users <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;Glenn&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Malcolm&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Nicola&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Terri&quot;</span></span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">List</span><span class="token punctuation">(</span>$users<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> editActions<span class="token punctuation">:</span> <span class="token punctuation">.</span>move<span class="token punctuation">)</span> <span class="token punctuation">{</span> $user <span class="token keyword">in</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-let-users-move-rows-in-a-list-1.zip",target:"_blank",rel:"noopener noreferrer"},_=l(`<p>That immediately lets users drag the list rows around, and the <code>users</code> array will be updated as they do so. If you want to add swipe to delete as well, use <code>.all</code> rather than just <code>.move</code>.</p><p>If you want to disable movement for one row, use <code>moveDisabled()</code> with whatever criteria you have. For example, we could say that Glenn must always appear first in our list like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> users <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;Glenn&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Malcolm&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Nicola&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Terri&quot;</span></span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">List</span><span class="token punctuation">(</span>$users<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> editActions<span class="token punctuation">:</span> <span class="token punctuation">.</span>move<span class="token punctuation">)</span> <span class="token punctuation">{</span> $user <span class="token keyword">in</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">moveDisabled</span><span class="token punctuation">(</span>user <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;Glenn&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),q={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-let-users-move-rows-in-a-list-2.zip",target:"_blank",rel:"noopener noreferrer"},S=l(`<p>For the more complex approach to moving, we can attach an <code>onMove(perform:)</code> modifier to a <code>ForEach</code> inside a list, and have it call a method of our choosing when a move operation happens. That method needs to accept a source <code>IndexSet</code> and a destination <code>Int</code>, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token function-definition function">move</span><span class="token punctuation">(</span>from source<span class="token punctuation">:</span> <span class="token class-name">IndexSet</span><span class="token punctuation">,</span> to destination<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// move the data here</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When moving several items it&#39;s always a good idea to move the later ones first so that you avoid moving other items and getting your indexes confused. Fortunately, Swift&#39;s sequences have a built-in way to move index sets for us, so we can just pass the parameters along and have it work correctly.</p><p>As an example, we could create a <code>ContentView</code> struct that sets up an array of three username strings, and asks SwiftUI to move them around calling a <code>move()</code> method. In order to activate moving – i.e., to make the drag handles appear – it also adds an edit button to the navigation stack so the user can toggle editing mode.</p><p>Here&#39;s the code:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> users <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;Paul&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Taylor&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Adele&quot;</span></span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">List</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>users<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> user <span class="token keyword">in</span></span>
<span class="line">                    <span class="token class-name">Text</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">onMove</span><span class="token punctuation">(</span>perform<span class="token punctuation">:</span> move<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span>toolbar <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">EditButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">move</span><span class="token punctuation">(</span>from source<span class="token punctuation">:</span> <span class="token class-name">IndexSet</span><span class="token punctuation">,</span> to destination<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        users<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>fromOffsets<span class="token punctuation">:</span> source<span class="token punctuation">,</span> toOffset<span class="token punctuation">:</span> destination<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-let-users-move-rows-in-a-list-3.zip",target:"_blank",rel:"noopener noreferrer"},I={class:"hint-container details"},H=s("summary",null,"Similar solutions…",-1);function V(c,T){const a=p("VPCard"),o=p("FontIcon"),r=p("VidStack");return m(),d("div",null,[s("h1",h,[s("a",v,[s("span",null,k(c.$frontmatter.title)+" 관련",1)])]),n(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,f,n(a,t(e({title:"How to let users move rows in a list | SwiftUI by Example",desc:"How to let users move rows in a list",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-let-users-move-rows-in-a-list",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,s("blockquote",null,[s("p",null,[s("a",y,[n(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),_,s("blockquote",null,[s("p",null,[s("a",q,[n(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),S,s("blockquote",null,[s("p",null,[s("a",x,[n(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),n(r,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-let-users-move-rows-in-a-list-1~dark.mp4"}),s("details",I,[H,n(a,t(e({title:"How to let users delete rows from a list | SwiftUI by Example",desc:"How to let users delete rows from a list",link:"/hackingwithswift.com/swiftui/how-to-let-users-delete-rows-from-a-list.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to change the tint color for individual list rows | SwiftUI by Example",desc:"How to change the tint color for individual list rows",link:"/hackingwithswift.com/swiftui/how-to-change-the-tint-color-for-individual-list-rows.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to add a badge to TabView items and List rows | SwiftUI by Example",desc:"How to add a badge to TabView items and List rows",link:"/hackingwithswift.com/swiftui/how-to-add-a-badge-to-tabview-items-and-list-rows.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to set the background color of list rows using listRowBackground() | SwiftUI by Example",desc:"How to set the background color of list rows using listRowBackground()",link:"/hackingwithswift.com/swiftui/how-to-set-the-background-color-of-list-rows-using-listrowbackground.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"Showing and hiding form rows | SwiftUI by Example",desc:"Showing and hiding form rows",link:"/hackingwithswift.com/swiftui/showing-and-hiding-form-rows.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const A=u(w,[["render",V],["__file","how-to-let-users-move-rows-in-a-list.html.vue"]]),U=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-let-users-move-rows-in-a-list.html","title":"How to let users move rows in a list","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to let users move rows in a list","description":"Article(s) > How to let users move rows in a list","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to let users move rows in a list"},{"property":"og:description","content":"How to let users move rows in a list"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-let-users-move-rows-in-a-list.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-let-users-move-rows-in-a-list.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to let users move rows in a list"}],["meta",{"property":"og:description","content":"Article(s) > How to let users move rows in a list"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to let users move rows in a list\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.03,"words":910},"filePathRelative":"hackingwithswift.com/swiftui/how-to-let-users-move-rows-in-a-list.md","excerpt":"\\n"}');export{A as comp,U as data};
