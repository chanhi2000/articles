import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as s,t as d,e as a,n,g as o,w as h,f as u,r as e,o as m,d as g}from"./app-BgNevrm5.js";const w={},k={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},b={class:"table-of-contents"},v=s("hr",null,null,-1),y=u(`<p>Operators are those little symbols you learned in your very first math classes: <code>+</code> to add, <code>-</code> to subtract, <code>*</code> to multiply, <code>/</code> to divide, <code>=</code> to assign value, and so on. They all exist in Swift, along with a few extras.</p><p>Let&#39;s try a few basics – please type this into your playground:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">10</span></span>
<span class="line">a <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">1</span></span>
<span class="line">a <span class="token operator">=</span> a <span class="token operator">-</span> <span class="token number">1</span></span>
<span class="line">a <span class="token operator">=</span> a <span class="token operator">*</span> a</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://hackingwithswift.com/img/books/hws/operators-1@2x.png" alt="Math operations using the plus, minus, and times operators." tabindex="0" loading="lazy"><figcaption>Math operations using the plus, minus, and times operators.</figcaption></figure><p>In the results pane, you&#39;ll see 10, 11, 10 and 100 respectively. Now try this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">10</span></span>
<span class="line">b <span class="token operator">+=</span> <span class="token number">10</span></span>
<span class="line">b <span class="token operator">-=</span> <span class="token number">10</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://hackingwithswift.com/img/books/hws/operators-2@2x.png" alt="Math operations using the plus-equals, minus-equals, and times-equals operators." tabindex="0" loading="lazy"><figcaption>Math operations using the plus-equals, minus-equals, and times-equals operators.</figcaption></figure><p><code>+=</code> is an operator that means &quot;add then assign to.&quot; In our case it means &quot;take the current value of <code>b</code>, add 10 to it, then put the result back into <code>b</code>.&quot; As you might imagine, <code>-=</code> does the same but subtracts rather than adds. So, that code will show 10, 20, 10 in the results pane.</p><p>Some of these operators apply to other data types. As you might imagine, you can add two doubles together like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1.1</span></span>
<span class="line"><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">2.2</span></span>
<span class="line"><span class="token keyword">var</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://hackingwithswift.com/img/books/hws/operators-3@2x.png" alt="Adding two Doubles with the plus operator." tabindex="0" loading="lazy"><figcaption>Adding two Doubles with the plus operator.</figcaption></figure><p>When it comes to strings, <code>+</code> will join them together. For example:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">var</span> name1 <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Tim McGraw&quot;</span></span></span>
<span class="line"><span class="token keyword">var</span> name2 <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Romeo&quot;</span></span></span>
<span class="line"><span class="token keyword">var</span> both <span class="token operator">=</span> name1 <span class="token operator">+</span> <span class="token string-literal"><span class="token string">&quot; and &quot;</span></span> <span class="token operator">+</span> name2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://hackingwithswift.com/img/books/hws/operators-4@2x.png" alt="Joining two Strings with the plus operator." tabindex="0" loading="lazy"><figcaption>Joining two Strings with the plus operator.</figcaption></figure><p>That will write &quot;Tim McGraw and Romeo&quot; into the results pane.</p><p>One more common operator you’ll see is called modulus, and is written using a percent symbol: <code>%</code>. It means “divide the left hand number evenly by the right, and return the remainder.” So, <code>9 % 3</code> returns 0 because 3 divides evenly into 9, whereas <code>10 % 3</code> returns 1, because 10 divides by 3 three times, with remainder 1.</p><figure><img src="https://hackingwithswift.com/img/books/hws/operators-5@2x.png" alt="Finding remainders using the modulo operator." tabindex="0" loading="lazy"><figcaption>Finding remainders using the modulo operator.</figcaption></figure><div class="hint-container note"><p class="hint-container-title">Note</p><p>If you bought Hacking with Swift and are using the exclusive guide book accompaniment to the course, you’ll find the modulus operator useful later on.</p></div><hr><h2 id="comparison-operators" tabindex="-1"><a class="header-anchor" href="#comparison-operators"><span>Comparison operators</span></a></h2><p>Swift has a set of operators that perform comparisons on values. For example:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1.1</span></span>
<span class="line"><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">2.2</span></span>
<span class="line"><span class="token keyword">var</span> c <span class="token operator">=</span> a <span class="token operator">+</span> b</span>
<span class="line"></span>
<span class="line">c <span class="token operator">&gt;</span> <span class="token number">3</span></span>
<span class="line">c <span class="token operator">&gt;=</span> <span class="token number">3</span></span>
<span class="line">c <span class="token operator">&gt;</span> <span class="token number">4</span></span>
<span class="line">c <span class="token operator">&lt;</span> <span class="token number">4</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://hackingwithswift.com/img/books/hws/operators-6@2x.png" alt="Comparing Doubles with various operators." tabindex="0" loading="lazy"><figcaption>Comparing Doubles with various operators.</figcaption></figure><p>That shows off greater than (<code>&gt;</code>), greater than or equal (<code>&gt;=</code>), and less than (<code>&lt;</code>). In the results window you&#39;ll see true, true, false, true – these are Booleans, because the answer to each of these statements can only ever be true or false.</p><p>If you want to check for equality, you can&#39;t use = because it already has a meaning: it&#39;s used to give a variable a value. So, Swift has an alternative in the form of <code>==</code>, meaning &quot;is equal to.&quot; For example:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Tim McGraw&quot;</span></span></span>
<span class="line">name <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;Tim McGraw&quot;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://hackingwithswift.com/img/books/hws/operators-7@2x.png" alt="Comparing Strings with the equality operator." tabindex="0" loading="lazy"><figcaption>Comparing Strings with the equality operator.</figcaption></figure><p>That will show &quot;true&quot; in the results pane. Now, one thing that might catch you out is that in Swift strings are case-sensitive, which means &quot;Tim McGraw&quot;, &quot;TIM MCGRAW&quot; and &quot;TiM mCgRaW&quot; are all considered different. If you use <code>==</code> to compare two strings, you need to make sure they have the same letter case.</p><figure><img src="https://hackingwithswift.com/img/books/hws/operators-8@2x.png" alt="Comparing strings of different cases returns false." tabindex="0" loading="lazy"><figcaption>Comparing strings of different cases returns false.</figcaption></figure><p>There&#39;s one more operator I want to introduce you to, and it&#39;s called the &quot;not&quot; operator: <code>!</code>. Yes, it&#39;s just an exclamation mark. This makes your statement mean the opposite of what it did. For example:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">var</span> stayOutTooLate <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">stayOutTooLate</span>
<span class="line"><span class="token operator">!</span>stayOutTooLate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://hackingwithswift.com/img/books/hws/operators-9@2x.png" alt="Flipping a Boolean with the not operator." tabindex="0" loading="lazy"><figcaption>Flipping a Boolean with the not operator.</figcaption></figure><p>That will print out true, true, false – with the last value there because it flipped the previous true.</p><p>You can also use <code>!</code> with <code>=</code> to make <code>!=</code> or &quot;not equal&quot;. For example:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Tim McGraw&quot;</span></span></span>
<span class="line">name <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;Tim McGraw&quot;</span></span></span>
<span class="line">name <span class="token operator">!=</span> <span class="token string-literal"><span class="token string">&quot;Tim McGraw&quot;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://hackingwithswift.com/img/books/hws/operators-10@2x.png" alt="Comparing Strings with the inequality operator." tabindex="0" loading="lazy"><figcaption>Comparing Strings with the inequality operator.</figcaption></figure>`,36);function x(i,q){const t=e("VPCard"),r=e("router-link"),p=e("VidStack");return m(),c("div",null,[s("h1",k,[s("a",f,[s("span",null,d(i.$frontmatter.title)+" 관련",1)])]),a(t,n(o({title:"Hacking with iOS – learn to code iPhone and iPad apps with free Swift tutorials",desc:"Learn Swift coding for iOS with these free tutorials – learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/read/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),s("nav",b,[s("ul",null,[s("li",null,[a(r,{to:"#comparison-operators"},{default:h(()=>[g("Comparison operators")]),_:1})])])]),v,a(t,n(o({title:"Operators | Hacking with iOS",desc:"Operators",link:"https://hackingwithswift.com/read/0/4/operators",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),a(p,{src:"youtube/Svaq3jVy8sU"}),y])}const O=l(w,[["render",x],["__file","04-operators.html.vue"]]),T=JSON.parse('{"path":"/hackingwithswift.com/read/00/04-operators.html","title":"Operators","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Operators","description":"Article(s) > Operators","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","xcode","appstore","ios"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Operators"},{"property":"og:description","content":"Operators"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/read/00/04-operators.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/read/00/04-operators.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Operators"}],["meta",{"property":"og:description","content":"Article(s) > Operators"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/hws/operators-1@2x.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:tag","content":"ios"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Operators\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/hws/operators-1@2x.png\\",\\"https://hackingwithswift.com/img/books/hws/operators-2@2x.png\\",\\"https://hackingwithswift.com/img/books/hws/operators-3@2x.png\\",\\"https://hackingwithswift.com/img/books/hws/operators-4@2x.png\\",\\"https://hackingwithswift.com/img/books/hws/operators-5@2x.png\\",\\"https://hackingwithswift.com/img/books/hws/operators-6@2x.png\\",\\"https://hackingwithswift.com/img/books/hws/operators-7@2x.png\\",\\"https://hackingwithswift.com/img/books/hws/operators-8@2x.png\\",\\"https://hackingwithswift.com/img/books/hws/operators-9@2x.png\\",\\"https://hackingwithswift.com/img/books/hws/operators-10@2x.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[{"level":2,"title":"Comparison operators","slug":"comparison-operators","link":"#comparison-operators","children":[]}],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.6,"words":780},"filePathRelative":"hackingwithswift.com/read/00/04-operators.md","excerpt":"\\n"}');export{O as comp,T as data};
