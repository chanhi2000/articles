import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as n,t as r,e as s,n as t,g as e,d as i,a as d,f as k,r as p,o as m}from"./app-BgNevrm5.js";const f={},g={id:"frontmatter-title-관련",tabindex:"-1"},v={class:"header-anchor",href:"#frontmatter-title-관련"},h=n("nav",{class:"table-of-contents"},[n("ul")],-1),w=n("hr",null,null,-1),b=n("blockquote",null,[n("p",null,"Available from Swift 5.4")],-1),y={href:"https://bugs.swift.org/browse/SR-10069",target:"_blank",rel:"noopener noreferrer"},_=k(`<p>For example, if we wanted to make some simple cookies we might write code like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">Butter</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">Flour</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">Sugar</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function-definition function">makeCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token class-name">Butter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Adding butter…&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token class-name">Flour</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Adding flour…&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token class-name">Sugar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Adding sugar…&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token class-name">Butter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token class-name">Flour</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token class-name">Sugar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Come and get some cookies!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">makeCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Prior to Swift 5.4, the three <code>add()</code> methods could be overloaded only if they were not nested inside <code>makeCookies()</code>, but from Swift 5.4 onwards function overloading is supported in this case as well.</p><p>Swift 5.4 also lets us call local functions before they are declared, meaning that we can now write code like this if needed:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token function-definition function">makeCookies2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>   </span>
<span class="line">    <span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token class-name">Butter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token class-name">Flour</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token class-name">Sugar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token class-name">Butter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Adding butter…&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token class-name">Flour</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Adding flour…&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">add</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token class-name">Sugar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Adding sugar…&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">makeCookies2</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),S={class:"hint-container details"},C=n("summary",null,"Other Changes in Swift 5.4",-1),q={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-5-3-to-5-4.playground.zip",target:"_blank",rel:"noopener noreferrer"};function x(c,A){const a=p("VPCard"),o=p("FontIcon");return m(),u("div",null,[n("h1",g,[n("a",v,[n("span",null,r(c.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),h,w,s(a,t(e({title:"Local functions now support overloading | Changes in Swift 5.4",desc:"Local functions now support overloading",link:"https://hackingwithswift.com/swift/5.4/local-functions-now-support-overloading",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("p",null,[n("a",y,[s(o,{icon:"fa-brands fa-swift"}),i("SR-10069")]),i(" requested the ability to overload functions in local contexts, which in practice means nested functions can now be overloaded so that Swift chooses which one to run based on the types that are used.")]),_,n("details",S,[C,s(a,t(e({title:"Improved implicit member syntax | Changes in Swift 5.4",desc:"Improved implicit member syntax",link:"/hackingwithswift.com/swift/5.4/improved-implicit-member-syntax.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Multiple variadic parameters in functions | Changes in Swift 5.4",desc:"Multiple variadic parameters in functions",link:"/hackingwithswift.com/swift/5.4/multiple-variadic-parameters-in-functions.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),d(` 
\`\`\`component VPCard
{
  "title": "Local functions now support overloading | Changes in Swift 5.4",
  "desc": "Local functions now support overloading",
  "link": "/hackingwithswift.com/swift/5.4/local-functions-now-support-overloading.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),s(a,t(e({title:"Creating variables that call a function of the same name | Changes in Swift 5.4",desc:"Creating variables that call a function of the same name",link:"/hackingwithswift.com/swift/5.4/local-variables-same-name.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Result builders | Changes in Swift 5.4",desc:"Result builders",link:"/hackingwithswift.com/swift/5.4/result-builders.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Property wrappers are now supported for local variables | Changes in Swift 5.4",desc:"Property wrappers are now supported for local variables",link:"/hackingwithswift.com/swift/5.4/local-property-wrappers.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Packages can now declare executable targets | Changes in Swift 5.4",desc:"Packages can now declare executable targets",link:"/hackingwithswift.com/swift/5.4/spm-executable-targets.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n("p",null,[n("a",q,[s(o,{icon:"fas fa-file-zipper"}),i("Download Swift 5.4 playground")])])])])}const F=l(f,[["render",x],["__file","local-functions-now-support-overloading.html.vue"]]),R=JSON.parse('{"path":"/hackingwithswift.com/swift/5.4/local-functions-now-support-overloading.html","title":"Local functions now support overloading","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Local functions now support overloading","description":"Article(s) > Local functions now support overloading","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-5.4"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Local functions now support overloading"},{"property":"og:description","content":"Local functions now support overloading"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.4/local-functions-now-support-overloading.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.4/local-functions-now-support-overloading.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Local functions now support overloading"}],["meta",{"property":"og:description","content":"Article(s) > Local functions now support overloading"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.4"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Local functions now support overloading\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.93,"words":578},"filePathRelative":"hackingwithswift.com/swift/5.4/local-functions-now-support-overloading.md","excerpt":"\\n"}');export{F as comp,R as data};
