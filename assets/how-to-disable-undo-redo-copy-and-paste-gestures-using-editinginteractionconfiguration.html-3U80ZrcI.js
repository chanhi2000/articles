import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as t,t as d,e as i,n,g as a,a as e,r as p,o as l}from"./app-BgNevrm5.js";const g={},u={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},f=t("nav",{class:"table-of-contents"},[t("ul")],-1),m=t("hr",null,null,-1),w=t("blockquote",null,[t("p",null,"Available from iOS 13.0")],-1),y=t("details",{class:"hint-container details"},[t("summary",null,"Similar solutions‚Ä¶"),e(`
/example-code/system/how-to-copy-objects-in-swift-using-copy">How to copy objects in Swift using copy() 
/quick-start/swiftui/swiftui-tips-and-tricks">SwiftUI tips and tricks 
/quick-start/swiftui/all-swiftui-property-wrappers-explained-and-compared">All SwiftUI property wrappers explained and compared 
/quick-start/swiftui/how-to-let-the-user-paste-data-into-your-app">How to let the user paste data into your app 
/example-code/uikit/how-to-create-live-playgrounds-in-xcode">How to create live playgrounds in Xcode</a>
`)],-1);function b(r,k){const o=p("VPCard");return l(),c("div",null,[t("h1",u,[t("a",h,[t("span",null,d(r.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),i(o,n(a({title:"UIKit - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/uikit/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,m,i(o,n(a({title:"How to disable undo, redo, copy, and paste gestures using editingInteractionConfiguration | UIKit - free Swift example code",desc:"How to disable undo, redo, copy, and paste gestures using editingInteractionConfiguration",link:"https://hackingwithswift.com/example-code/uikit/how-to-disable-undo-redo-copy-and-paste-gestures-using-editinginteractionconfiguration",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,e(" TODO: ÏûëÏÑ± "),e("\niOS provides built-in gestures for undo, redo, copy, and paste in text views, triggered using a variety of three-finger moves ‚Äì swiping left and right, or pinching in or out respectively. If you have existing gestures that collide with these, you can disable the system gestures by overriding the `editingInteractionConfiguration` property to return `.none`.\n\nFor example, if you have a `UITextView` as a property inside a `UIViewController` and you wanted to disable three-finger gesture support inside that view controller, you would override `editingInteractionConfiguration` like this:\n\n```swift\noverride var editingInteractionConfiguration: UIEditingInteractionConfiguration {\n    return .none\n}\n```\n\nThis property exists on `UIResponder`, which means you can override it at a number of other levels if you prefer.\n\n"),y])}const x=s(g,[["render",b],["__file","how-to-disable-undo-redo-copy-and-paste-gestures-using-editinginteractionconfiguration.html.vue"]]),I=JSON.parse('{"path":"/hackingwithswift.com/example-code/uikit/how-to-disable-undo-redo-copy-and-paste-gestures-using-editinginteractionconfiguration.html","title":"How to disable undo, redo, copy, and paste gestures using editingInteractionConfiguration","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to disable undo, redo, copy, and paste gestures using editingInteractionConfiguration","description":"Article(s) > How to disable undo, redo, copy, and paste gestures using editingInteractionConfiguration","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-13.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to disable undo, redo, copy, and paste gestures using editingInteractionConfiguration"},{"property":"og:description","content":"How to disable undo, redo, copy, and paste gestures using editingInteractionConfiguration"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uikit/how-to-disable-undo-redo-copy-and-paste-gestures-using-editinginteractionconfiguration.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uikit/how-to-disable-undo-redo-copy-and-paste-gestures-using-editinginteractionconfiguration.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to disable undo, redo, copy, and paste gestures using editingInteractionConfiguration"}],["meta",{"property":"og:description","content":"Article(s) > How to disable undo, redo, copy, and paste gestures using editingInteractionConfiguration"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-13.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-10-21T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to disable undo, redo, copy, and paste gestures using editingInteractionConfiguration\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-10-21T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-10-21T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.32,"words":395},"filePathRelative":"hackingwithswift.com/example-code/uikit/how-to-disable-undo-redo-copy-and-paste-gestures-using-editinginteractionconfiguration.md","localizedDate":"2019ÎÖÑ 10Ïõî 21Ïùº","excerpt":"\\n"}');export{x as comp,I as data};
