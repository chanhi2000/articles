import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as e,t as l,e as a,n as r,g as n,a as t,r as h,o as u}from"./app-BgNevrm5.js";const d={},p={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},g=e("nav",{class:"table-of-contents"},[e("ul")],-1),w=e("hr",null,null,-1),f=e("blockquote",null,[e("p",null,"Available from iOS 2.0")],-1),b=e("details",{class:"hint-container details"},[e("summary",null,"Similar solutions‚Ä¶"),t(`
/quick-start/swiftui/swiftui-tips-and-tricks">SwiftUI tips and tricks 
/quick-start/swiftui/all-swiftui-property-wrappers-explained-and-compared">All SwiftUI property wrappers explained and compared 
/example-code/uikit/how-to-create-live-playgrounds-in-xcode">How to create live playgrounds in Xcode 
/quick-start/swiftui/how-to-create-new-colors-by-blending-two-other-swiftui-colors">How to create new colors by blending two other SwiftUI colors 
/example-code/games/how-to-create-a-random-terrain-tile-map-using-sktilemapnode-and-gkperlinnoisesource">How to create a random terrain tile map using SKTileMapNode and GKPerlinNoiseSource</a>
`)],-1);function y(i,k){const o=h("VPCard");return u(),c("div",null,[e("h1",p,[e("a",m,[e("span",null,l(i.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),a(o,r(n({title:"UIClolr - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/uicolor/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,w,a(o,r(n({title:"How to create custom colors using UIColor RGB and hues | UIClolr - free Swift example code",desc:"How to create custom colors using UIColor RGB and hues",link:"https://hackingwithswift.com/example-code/uicolor/how-to-create-custom-colors-using-uicolor-rgb-and-hues",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,t(" TODO: ÏûëÏÑ± "),t(` 
Although there are quite a few built-in UIColors, you'll want to create your own very frequently. This can be done in a number of ways, but the most common is specifying individual values for red, green, blue and alpha, like this:

\`\`\`swift
let col1 = UIColor(red: 1, green: 0, blue: 0, alpha: 1)
\`\`\`

Each of those numbers need to be between 0 and 1.

An alternative way is to specify color values as hue, saturation and brightness, or HSB. Hue is a value between 0 and 1 on a color wheel, where 0 and 1 are both red. Saturation is how deep the color should be (so 0 is just gray) and brightness is how light the shade should be.

Here's how it's done:

\`\`\`swift
let col2 = UIColor(hue: 0, saturation: 0.66, brightness: 0.66, alpha: 1)
let col3 = UIColor(hue: 0.25, saturation: 0.66, brightness: 0.66, alpha: 1)
let col4 = UIColor(hue: 0.5, saturation: 0.66, brightness: 0.66, alpha: 1)
let col5 = UIColor(hue: 0.75, saturation: 0.66, brightness: 0.66, alpha: 1)
\`\`\`

The advantage to using HSB rather than RGB is that you can generate very similar colors by keeping the saturation and brightness constant and changing only the hue ‚Äì the code above generates some nice pastel shades of red, green, cyan and magenta, for example.

`),b])}const U=s(d,[["render",y],["__file","how-to-create-custom-colors-using-uicolor-rgb-and-hues.html.vue"]]),v=JSON.parse('{"path":"/hackingwithswift.com/example-code/uicolor/how-to-create-custom-colors-using-uicolor-rgb-and-hues.html","title":"How to create custom colors using UIColor RGB and hues","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to create custom colors using UIColor RGB and hues","description":"Article(s) > How to create custom colors using UIColor RGB and hues","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-2.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to create custom colors using UIColor RGB and hues"},{"property":"og:description","content":"How to create custom colors using UIColor RGB and hues"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uicolor/how-to-create-custom-colors-using-uicolor-rgb-and-hues.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uicolor/how-to-create-custom-colors-using-uicolor-rgb-and-hues.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to create custom colors using UIColor RGB and hues"}],["meta",{"property":"og:description","content":"Article(s) > How to create custom colors using UIColor RGB and hues"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-2.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to create custom colors using UIColor RGB and hues\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.66,"words":499},"filePathRelative":"hackingwithswift.com/example-code/uicolor/how-to-create-custom-colors-using-uicolor-rgb-and-hues.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{U as comp,v as data};
