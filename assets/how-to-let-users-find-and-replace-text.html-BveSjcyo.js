import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as s,t as d,e as n,n as t,g as e,d as o,f as l,r as c,o as k}from"./app-BgNevrm5.js";const h={},m={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},f=s("nav",{class:"table-of-contents"},[s("ul")],-1),v=s("hr",null,null,-1),g=l(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in iOS 16</strong></p><p>SwiftUI&#39;s <code>TextEditor</code> comes with built-in support to let the user search for text, or search and replace depending on their needs. It works out of the box for users who have a keyboard attached, so a view like this will work immediately:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> bio <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Describe yourself.&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">TextEditor</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $bio<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Edit Bio&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),b={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-let-users-find-and-replace-text-1.zip",target:"_blank",rel:"noopener noreferrer"},y=l(`<p>To try that out, tap to activate the <code>TextEditor</code>, then press <kbd>Cmd</kbd>+<kbd>F</kbd> to active search, or press <kbd>Option</kbd>+<kbd>Cmd</kbd>+<kbd>F</kbd> to activate search and replace.</p><div class="hint-container note"><p class="hint-container-title">Note</p><p>Find and replace works only with <code>TextEditor</code>, not with <code>TextField</code>.</p></div><p>For users without a hardware keyboard, you can programmatically show the find interface using the <code>findNavigator()</code> modifier. For example, this toggles search using a toolbar button:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> bio <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Describe yourself.&quot;</span></span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isShowingFindNavigator <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">TextEditor</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $bio<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">findNavigator</span><span class="token punctuation">(</span>isPresented<span class="token punctuation">:</span> $isShowingFindNavigator<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span>toolbar <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Toggle Search&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        isShowingFindNavigator<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Edit Bio&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-let-users-find-and-replace-text-2.zip",target:"_blank",rel:"noopener noreferrer"},_=l(`<div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Passing true to <code>findNavigator()</code> when no <code>TextEditor</code> is currently accepting input will make the system attempt to find and activate one automatically. If there is more than one to choose from the system will pick one for you.</p></div><p>If you explicitly want a view to opt out of search and/or replace, use one or both of <code>findDisabled()</code> and <code>replaceDisabled()</code>, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> bio <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Describe yourself.&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">TextEditor</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $bio<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">replaceDisabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Edit Bio&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-let-users-find-and-replace-text-1.zip",target:"_blank",rel:"noopener noreferrer"},H={class:"hint-container details"},q=s("summary",null,"Similar solutions…",-1);function E(p,T){const a=c("VPCard"),i=c("FontIcon");return k(),u("div",null,[s("h1",m,[s("a",w,[s("span",null,d(p.$frontmatter.title)+" 관련",1)])]),n(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,v,n(a,t(e({title:"How to let users find and replace text | SwiftUI by Example",desc:"How to let users find and replace text",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-let-users-find-and-replace-text",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),g,s("blockquote",null,[s("p",null,[s("a",b,[n(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),y,s("blockquote",null,[s("p",null,[s("a",x,[n(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),_,s("blockquote",null,[s("p",null,[s("a",S,[n(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),s("details",H,[q,n(a,t(e({title:"How to let users select text | SwiftUI by Example",desc:"How to let users select text",link:"/hackingwithswift.com/swiftui/how-to-let-users-select-text.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to let users move rows in a list | SwiftUI by Example",desc:"How to let users move rows in a list",link:"/hackingwithswift.com/swiftui/how-to-let-users-move-rows-in-a-list.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to let users import videos using PhotosPicker | SwiftUI by Example",desc:"How to let users import videos using PhotosPicker",link:"/hackingwithswift.com/swiftui/how-to-let-users-import-videos-using-photospicker.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to let users delete rows from a list | SwiftUI by Example",desc:"How to let users delete rows from a list",link:"/hackingwithswift.com/swiftui/how-to-let-users-delete-rows-from-a-list.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to let users share content using the system share sheet | SwiftUI by Example",desc:"How to let users share content using the system share sheet",link:"/hackingwithswift.com/swiftui/how-to-let-users-share-content-using-the-system-share-sheet.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const I=r(h,[["render",E],["__file","how-to-let-users-find-and-replace-text.html.vue"]]),F=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-let-users-find-and-replace-text.html","title":"How to let users find and replace text","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to let users find and replace text","description":"Article(s) > How to let users find and replace text","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to let users find and replace text"},{"property":"og:description","content":"How to let users find and replace text"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-let-users-find-and-replace-text.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-let-users-find-and-replace-text.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to let users find and replace text"}],["meta",{"property":"og:description","content":"Article(s) > How to let users find and replace text"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to let users find and replace text\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.31,"words":694},"filePathRelative":"hackingwithswift.com/swiftui/how-to-let-users-find-and-replace-text.md","excerpt":"\\n"}');export{I as comp,F as data};
