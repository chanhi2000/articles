import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as t,t as d,e as n,n as s,g as o,d as e,f as r,r as l,o as h}from"./app-BgNevrm5.js";const g={},w={id:"frontmatter-title-관련",tabindex:"-1"},y={class:"header-anchor",href:"#frontmatter-title-관련"},m=t("nav",{class:"table-of-contents"},[t("ul")],-1),k=t("hr",null,null,-1),f=r(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI&#39;s <code>layoutPriority()</code> modifier lets us request that certain views should be given more room on the screen when space is limited. All views have a layout priority of 0 by default, but if you&#39;re finding one particular view is squashed you can ask it to be given a higher priority using <code>layoutPriority()</code>.</p><p>As an example, here are two pieces of text laid out side by side:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">HStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;The rain Spain falls mainly on the Spaniards.&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Knowledge is power, France is bacon.&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),v={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-control-layout-priority-using-layoutpriority-1.zip",target:"_blank",rel:"noopener noreferrer"},b=r(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-control-layout-priority-using-layoutpriority-1~dark.png" alt="Two sentences, both wrapped onto a second line, arranged side by side." tabindex="0" loading="lazy"><figcaption>Two sentences, both wrapped onto a second line, arranged side by side.</figcaption></figure><p>Both text strings are long enough that they will wrap across two lines on an iPhone, and SwiftUI will try to size them fairly so they each get a fair amount of space depending on their length.</p><p>We can use the <code>layoutPriority()</code> modifier to change this by making one of the two strings more important. SwiftUI will calculate the minimum amount of space required for the low-priority text view, then offer the remaining space to the higher-priority text so it can take up as much as it wants.</p><p>Here&#39;s how that looks:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">HStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;The rain Spain falls mainly on the Spaniards.&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Knowledge is power, France is bacon.&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">layoutPriority</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),_={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-control-layout-priority-using-layoutpriority-2.zip",target:"_blank",rel:"noopener noreferrer"},x=t("figure",null,[t("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-control-layout-priority-using-layoutpriority-2~dark.png",alt:"Two sentences arranged side by side. The left sentence is wrapped over four lines, the right sentence is displayed in one long line.",tabindex:"0",loading:"lazy"}),t("figcaption",null,"Two sentences arranged side by side. The left sentence is wrapped over four lines, the right sentence is displayed in one long line.")],-1),H=t("p",null,"Obviously the result of that depends on what size screen you're using, but it's likely the higher-priority text view won't use all the available space it was offered, and so the remainder will be given to the lower-priority text view to use.",-1),S={class:"hint-container details"},q=t("summary",null,"Similar solutions…",-1);function P(c,T){const a=l("VPCard"),i=l("FontIcon");return h(),u("div",null,[t("h1",w,[t("a",y,[t("span",null,d(c.$frontmatter.title)+" 관련",1)])]),n(a,s(o({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),m,k,n(a,s(o({title:"How to control layout priority using layoutPriority() | SwiftUI by Example",desc:"How to control layout priority using layoutPriority()",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-control-layout-priority-using-layoutpriority",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f,t("blockquote",null,[t("p",null,[t("a",v,[n(i,{icon:"fas fa-file-zipper"}),e("Download this as an Xcode project")])])]),b,t("blockquote",null,[t("p",null,[t("a",_,[n(i,{icon:"fas fa-file-zipper"}),e("Download this as an Xcode project")])])]),x,H,t("details",S,[q,n(a,s(o({title:"How to create a custom layout using the Layout protocol | SwiftUI by Example",desc:"How to create a custom layout using the Layout protocol",link:"/hackingwithswift.com/swiftui/how-to-create-a-custom-layout-using-the-layout-protocol.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,s(o({title:"How to control spacing around individual views using padding | SwiftUI by Example",desc:"How to control spacing around individual views using padding",link:"/hackingwithswift.com/swiftui/how-to-control-spacing-around-individual-views-using-padding.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,s(o({title:"How to create a segmented control and read values from it | SwiftUI by Example",desc:"How to create a segmented control and read values from it",link:"/hackingwithswift.com/swiftui/how-to-create-a-segmented-control-and-read-values-from-it.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,s(o({title:"How to control the tappable area of a view using contentShape() | SwiftUI by Example",desc:"How to control the tappable area of a view using contentShape()",link:"/hackingwithswift.com/swiftui/how-to-control-the-tappable-area-of-a-view-using-contentshape.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,s(o({title:"How to add custom activation commands for Voice Control | SwiftUI by Example",desc:"How to add custom activation commands for Voice Control",link:"/hackingwithswift.com/swiftui/how-to-make-voiceover-read-characters-individually.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const U=p(g,[["render",P],["__file","how-to-control-layout-priority-using-layoutpriority.html.vue"]]),E=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-control-layout-priority-using-layoutpriority.html","title":"How to control layout priority using layoutPriority()","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to control layout priority using layoutPriority()","description":"Article(s) > How to control layout priority using layoutPriority()","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to control layout priority using layoutPriority()"},{"property":"og:description","content":"How to control layout priority using layoutPriority()"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-control-layout-priority-using-layoutpriority.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-control-layout-priority-using-layoutpriority.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to control layout priority using layoutPriority()"}],["meta",{"property":"og:description","content":"Article(s) > How to control layout priority using layoutPriority()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-control-layout-priority-using-layoutpriority-1~dark.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to control layout priority using layoutPriority()\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-control-layout-priority-using-layoutpriority-1~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-control-layout-priority-using-layoutpriority-2~dark.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.48,"words":743},"filePathRelative":"hackingwithswift.com/swiftui/how-to-control-layout-priority-using-layoutpriority.md","excerpt":"\\n"}');export{U as comp,E as data};
