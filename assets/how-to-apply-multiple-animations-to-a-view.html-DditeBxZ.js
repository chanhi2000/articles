import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as n,t as m,e as a,n as t,g as e,d as p,f as c,r as o,o as k}from"./app-BgNevrm5.js";const h={},w={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},v=n("nav",{class:"table-of-contents"},[n("ul")],-1),g=n("hr",null,null,-1),b=c(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>Improved in iOS 17</strong></p><p>The order in which we use SwiftUI’s <code>animation()</code> modifier affects which modifiers get animated, and it’s also possible to add multiple <code>animation()</code> modifiers in order to get <em>different</em> animations.</p><p><strong>There are two ways of doing this:</strong> A newer, clearer approach that’s available from iOS 17 and later, and an older alternative that also works in iOS 16 and earlier.</p><p>First, the new approach. In this code we animate the background color over one second, and the clip shape over two seconds:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isEnabled <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Press Me&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            isEnabled<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> content <span class="token keyword">in</span></span>
<span class="line">            content</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>isEnabled <span class="token operator">?</span> <span class="token punctuation">.</span>green <span class="token punctuation">:</span> <span class="token punctuation">.</span>red<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> content <span class="token keyword">in</span></span>
<span class="line">            content</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">rect</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> isEnabled <span class="token operator">?</span> <span class="token number">100</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-apply-multiple-animations-to-a-view-1.zip",target:"_blank",rel:"noopener noreferrer"},_=c(`<p>You don’t need to specify a value to watch when using this new code, because you’re only ever animating the things specified in your close.</p><p>When using the older approach, you add multiple <code>animation()</code> modifiers wherever you want to adjust the animation stack for previous modifiers. For example, we could write code to create a button that animates between enabled and disabled states, making the corner rounding and background color changes. If we wanted the corner rounding to animate but not the color change, we’d use an animation such as <code>animation(.default)</code> after the clip shape, then <code>animation(nil)</code> after the background, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isEnabled <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Press Me&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            isEnabled<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span>isEnabled <span class="token operator">?</span> <span class="token punctuation">.</span>green <span class="token punctuation">:</span> <span class="token punctuation">.</span>red<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token nil constant">nil</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> isEnabled<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span><span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> isEnabled <span class="token operator">?</span> <span class="token number">100</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> isEnabled<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-apply-multiple-animations-to-a-view-2.zip",target:"_blank",rel:"noopener noreferrer"},E=n("p",null,"Using these techniques it’s possible to animate every modifier differently if you need to.",-1),x={class:"hint-container details"},I=n("summary",null,"Similar solutions…",-1);function H(l,V){const s=o("VPCard"),i=o("FontIcon"),u=o("VidStack");return k(),d("div",null,[n("h1",w,[n("a",f,[n("span",null,m(l.$frontmatter.title)+" 관련",1)])]),a(s,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),v,g,a(s,t(e({title:"How to apply multiple animations to a view | SwiftUI by Example",desc:"How to apply multiple animations to a view",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-apply-multiple-animations-to-a-view",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("blockquote",null,[n("p",null,[n("a",y,[a(i,{icon:"fas fa-file-zipper"}),p("Download this as an Xcode project")])])]),_,n("blockquote",null,[n("p",null,[n("a",S,[a(i,{icon:"fas fa-file-zipper"}),p("Download this as an Xcode project")])])]),a(u,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-apply-multiple-animations-to-a-view-1~dark.mp4"}),E,n("details",x,[I,a(s,t(e({title:"Learn once, apply anywhere | SwiftUI by Example",desc:"Learn once, apply anywhere",link:"/hackingwithswift.com/swiftui/learn-once-apply-anywhere.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to synchronize animations from one view to another with matchedGeometryEffect() | SwiftUI by Example",desc:"How to synchronize animations from one view to another with matchedGeometryEffect()",link:"/hackingwithswift.com/swiftui/how-to-synchronize-animations-from-one-view-to-another-with-matchedgeometryeffect.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to create multi-step animations using phase animators | SwiftUI by Example",desc:"How to create multi-step animations using phase animators",link:"/hackingwithswift.com/swiftui/how-to-create-multi-step-animations-using-phase-animators.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to override animations with transactions | SwiftUI by Example",desc:"How to override animations with transactions",link:"/hackingwithswift.com/swiftui/how-to-override-animations-with-transactions.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const A=r(h,[["render",H],["__file","how-to-apply-multiple-animations-to-a-view.html.vue"]]),R=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-apply-multiple-animations-to-a-view.html","title":"How to apply multiple animations to a view","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to apply multiple animations to a view","description":"Article(s) > How to apply multiple animations to a view","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to apply multiple animations to a view"},{"property":"og:description","content":"How to apply multiple animations to a view"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-apply-multiple-animations-to-a-view.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-apply-multiple-animations-to-a-view.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to apply multiple animations to a view"}],["meta",{"property":"og:description","content":"Article(s) > How to apply multiple animations to a view"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to apply multiple animations to a view\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.33,"words":698},"filePathRelative":"hackingwithswift.com/swiftui/how-to-apply-multiple-animations-to-a-view.md","excerpt":"\\n"}');export{A as comp,R as data};
