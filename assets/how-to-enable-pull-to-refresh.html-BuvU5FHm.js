import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as n,t as k,e as s,n as t,g as e,d as l,f as c,r as o,o as m}from"./app-BgNevrm5.js";const h={},w={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},g=n("nav",{class:"table-of-contents"},[n("ul")],-1),b=n("hr",null,null,-1),v=c(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in iOS 15</strong></p><p>SwiftUI&#39;s <code>refreshable()</code> modifier lets you attach functionality to a <code>List</code> to be triggered when the user drags down far enough. iOS will automatically show an activity indicator for as long as it takes for your code to finish running.</p><p>To get started, simply add a <code>refreshable()</code> modifier to your list where you do your work, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">List</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">..&lt;</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> row <span class="token keyword">in</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Row </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">row</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span>refreshable <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Do your refresh work here&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-enable-pull-to-refresh-1.zip",target:"_blank",rel:"noopener noreferrer"},_=c(`<p>The code you place inside <code>refreshable()</code> is already running in an async context, so it&#39;s the perfect place to put something like networking. For example, here&#39;s a complete example that uses pull to refresh to download some news stories into a <code>List</code>:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">NewsItem</span><span class="token punctuation">:</span> <span class="token class-name">Decodable</span><span class="token punctuation">,</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> id<span class="token punctuation">:</span> <span class="token class-name">Int</span></span>
<span class="line">    <span class="token keyword">let</span> title<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">let</span> strap<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> news <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token class-name">NewsItem</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> title<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Want the latest news?&quot;</span></span><span class="token punctuation">,</span> strap<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Pull to refresh!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">List</span><span class="token punctuation">(</span>news<span class="token punctuation">)</span> <span class="token punctuation">{</span> item <span class="token keyword">in</span></span>
<span class="line">                <span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>title<span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token class-name">Text</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>strap<span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>secondary<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span>refreshable <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">do</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token comment">// Fetch and decode JSON into news items</span></span>
<span class="line">                    <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;https://hackingwithswift.com/samples/news-1.json&quot;</span></span><span class="token punctuation">)</span><span class="token operator">!</span></span>
<span class="line">                    <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;https://hackingwithswift.com/samples/news-1.json&quot;</span></span><span class="token punctuation">)</span><span class="token operator">!</span></span>
<span class="line">                    <span class="token keyword">let</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token omit keyword">_</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token keyword">await</span> <span class="token class-name">URLSession</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> url<span class="token punctuation">)</span></span>
<span class="line">                    news <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">JSONDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">NewsItem</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> data<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token comment">// Something went wrong; clear the news</span></span>
<span class="line">                    news <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-enable-pull-to-refresh-2.zip",target:"_blank",rel:"noopener noreferrer"},x={class:"hint-container details"},q=n("summary",null,"Similar solutions…",-1);function j(r,I){const a=o("VPCard"),p=o("FontIcon"),i=o("VidStack");return m(),d("div",null,[n("h1",w,[n("a",f,[n("span",null,k(r.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,b,s(a,t(e({title:"How to enable pull to refresh | SwiftUI by Example",desc:"How to enable pull to refresh",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-enable-pull-to-refresh",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,n("blockquote",null,[n("p",null,[n("a",y,[s(p,{icon:"fas fa-file-zipper"}),l("Download this as an Xcode project")])])]),s(i,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-enable-pull-to-refresh-1~dark.mp4"}),_,n("blockquote",null,[n("p",null,[n("a",S,[s(p,{icon:"fas fa-file-zipper"}),l("Download this as an Xcode project")])])]),s(i,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-enable-pull-to-refresh-2~dark.mp4"}),n("details",x,[q,s(a,t(e({title:"How to enable editing on a list using EditButton | SwiftUI by Example",desc:"How to enable editing on a list using EditButton",link:"/hackingwithswift.com/swiftui/how-to-enable-editing-on-a-list-using-editbutton.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to enable vertical page scrolling | SwiftUI by Example",desc:"How to enable vertical page scrolling",link:"/hackingwithswift.com/swiftui/how-to-enable-vertical-page-scrolling.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"What's the difference between @ObservedObject, @State, and @EnvironmentObject? | SwiftUI by Example",desc:"What's the difference between @ObservedObject, @State, and @EnvironmentObject?",link:"/hackingwithswift.com/swiftui/whats-the-difference-between-observedobject-state-and-environmentobject.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to send state updates manually using objectWillChange | SwiftUI by Example",desc:"How to send state updates manually using objectWillChange",link:"/hackingwithswift.com/swiftui/how-to-send-state-updates-manually-using-objectwillchange.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const U=u(h,[["render",j],["__file","how-to-enable-pull-to-refresh.html.vue"]]),V=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-enable-pull-to-refresh.html","title":"How to enable pull to refresh","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to enable pull to refresh","description":"Article(s) > How to enable pull to refresh","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to enable pull to refresh"},{"property":"og:description","content":"How to enable pull to refresh"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-enable-pull-to-refresh.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-enable-pull-to-refresh.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to enable pull to refresh"}],["meta",{"property":"og:description","content":"Article(s) > How to enable pull to refresh"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to enable pull to refresh\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.09,"words":626},"filePathRelative":"hackingwithswift.com/swiftui/how-to-enable-pull-to-refresh.md","excerpt":"\\n"}');export{U as comp,V as data};
