import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as n,t as u,e as s,n as e,g as t,f as r,r as p,o as d}from"./app-BgNevrm5.js";const k={},m={id:"frontmatter-title-관련",tabindex:"-1"},v={class:"header-anchor",href:"#frontmatter-title-관련"},h=n("nav",{class:"table-of-contents"},[n("ul")],-1),b=n("hr",null,null,-1),f=r(`<p>We need to modify <code>touchesMoved()</code> to detect when users slice penguins and bombs. The code isn&#39;t complicated, but it <em>is</em> long, so I&#39;m going to split it into three. First, here&#39;s the structure – place this just before the end of <code>touchesMoved()</code>:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">let</span> nodesAtPoint <span class="token operator">=</span> <span class="token function">nodes</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> location<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">for</span> <span class="token keyword">case</span> <span class="token keyword">let</span> node <span class="token keyword">as</span> <span class="token class-name">SKSpriteNode</span> <span class="token keyword">in</span> nodesAtPoint <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> node<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;enemy&quot;</span></span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// destroy penguin</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> node<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;bomb&quot;</span></span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// destroy bomb</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, let&#39;s take a look at what destroying a penguin should do. It should:</p><ol><li>Create a particle effect over the penguin.</li><li>Clear its node name so that it can&#39;t be swiped repeatedly.</li><li>Disable the <code>isDynamic</code> of its physics body so that it doesn&#39;t carry on falling.</li><li>Make the penguin scale out and fade out at the same time.</li><li>After making the penguin scale out and fade out, we should remove it from the scene.</li><li>Add one to the player&#39;s score.</li><li>Remove the enemy from our <code>activeEnemies</code> array.</li><li>Play a sound so the player knows they hit the penguin.</li></ol><p>Replace the <code>// destroy penguin</code> with this, following along with my numbered comments:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token comment">// 1</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token keyword">let</span> emitter <span class="token operator">=</span> <span class="token class-name">SKEmitterNode</span><span class="token punctuation">(</span>fileNamed<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;sliceHitEnemy&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    emitter<span class="token punctuation">.</span>position <span class="token operator">=</span> node<span class="token punctuation">.</span>position</span>
<span class="line">    <span class="token function">addChild</span><span class="token punctuation">(</span>emitter<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 2</span></span>
<span class="line">node<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 3</span></span>
<span class="line">node<span class="token punctuation">.</span>physicsBody<span class="token operator">?</span><span class="token punctuation">.</span>isDynamic <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 4</span></span>
<span class="line"><span class="token keyword">let</span> scaleOut <span class="token operator">=</span> <span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> <span class="token number">0.001</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span><span class="token number">0.2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">let</span> fadeOut <span class="token operator">=</span> <span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span>withDuration<span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">let</span> group <span class="token operator">=</span> <span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">[</span>scaleOut<span class="token punctuation">,</span> fadeOut<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 5</span></span>
<span class="line"><span class="token keyword">let</span> seq <span class="token operator">=</span> <span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">sequence</span><span class="token punctuation">(</span><span class="token punctuation">[</span>group<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">removeFromParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">node<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>seq<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 6</span></span>
<span class="line">score <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 7</span></span>
<span class="line"><span class="token keyword">if</span> <span class="token keyword">let</span> index <span class="token operator">=</span> activeEnemies<span class="token punctuation">.</span><span class="token function">firstIndex</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> node<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    activeEnemies<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> index<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 8</span></span>
<span class="line"><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">playSoundFileNamed</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;whack.caf&quot;</span></span><span class="token punctuation">,</span> waitForCompletion<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You&#39;ve now seen the two ways of collecting SpriteKit actions together: groups and sequences. An action <em>group</em> specifies that all actions inside it should execute simultaneously, whereas an action <code>sequence</code> runs them all one at a time. In the code above we have a group inside a sequence, which is common.</p><p>If the player swipes a bomb by accident, they lose the game immediately. This uses much the same code as destroying a penguin, but with a few differences:</p><ul><li>The node called &quot;bomb&quot; is the bomb image, which is inside the bomb container. So, we need to reference the node&#39;s parent when looking up our position, changing the physics body, removing the node from the scene, and removing the node from our <code>activeEnemies</code> array..</li><li>I&#39;m going to create a different particle effect for bombs than for penguins.</li><li>We end by calling the (as yet unwritten) method <code>endGame()</code>.</li></ul><p>Replace the <code>// destroy bomb</code> comment with this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">guard</span> <span class="token keyword">let</span> bombContainer <span class="token operator">=</span> node<span class="token punctuation">.</span>parent <span class="token keyword">as</span><span class="token operator">?</span> <span class="token class-name">SKSpriteNode</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">continue</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token keyword">let</span> emitter <span class="token operator">=</span> <span class="token class-name">SKEmitterNode</span><span class="token punctuation">(</span>fileNamed<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;sliceHitBomb&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    emitter<span class="token punctuation">.</span>position <span class="token operator">=</span> bombContainer<span class="token punctuation">.</span>position</span>
<span class="line">    <span class="token function">addChild</span><span class="token punctuation">(</span>emitter<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">node<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line">bombContainer<span class="token punctuation">.</span>physicsBody<span class="token operator">?</span><span class="token punctuation">.</span>isDynamic <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> scaleOut <span class="token operator">=</span> <span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> <span class="token number">0.001</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span><span class="token number">0.2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">let</span> fadeOut <span class="token operator">=</span> <span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span>withDuration<span class="token punctuation">:</span> <span class="token number">0.2</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">let</span> group <span class="token operator">=</span> <span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">group</span><span class="token punctuation">(</span><span class="token punctuation">[</span>scaleOut<span class="token punctuation">,</span> fadeOut<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> seq <span class="token operator">=</span> <span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">sequence</span><span class="token punctuation">(</span><span class="token punctuation">[</span>group<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token function">removeFromParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">bombContainer<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>seq<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token keyword">let</span> index <span class="token operator">=</span> activeEnemies<span class="token punctuation">.</span><span class="token function">firstIndex</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> bombContainer<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    activeEnemies<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> index<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">playSoundFileNamed</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;explosion.caf&quot;</span></span><span class="token punctuation">,</span> waitForCompletion<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token function">endGame</span><span class="token punctuation">(</span>triggeredByBomb<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Before I walk you through the <code>endGame()</code> method, we need to adjust the <code>update()</code> method a little. Right now, if a penguin or a bomb falls below -140, we remove it from the scene. We&#39;re going to modify that so that if the player misses slicing a penguin, they lose a life. We&#39;re also going to delete the node&#39;s name just in case any further checks for enemies or bombs happen – clearing the node name will avoid any problems.</p><p>In the <code>update()</code> method, replace this code:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">if</span> node<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">140</span> <span class="token punctuation">{</span></span>
<span class="line">    node<span class="token punctuation">.</span><span class="token function">removeFromParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    activeEnemies<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> index<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>…with this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">if</span> node<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">140</span> <span class="token punctuation">{</span></span>
<span class="line">    node<span class="token punctuation">.</span><span class="token function">removeAllActions</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> node<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;enemy&quot;</span></span> <span class="token punctuation">{</span></span>
<span class="line">        node<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line">        <span class="token function">subtractLife</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        node<span class="token punctuation">.</span><span class="token function">removeFromParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        activeEnemies<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> index<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> node<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string-literal"><span class="token string">&quot;bombContainer&quot;</span></span> <span class="token punctuation">{</span></span>
<span class="line">        node<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line">        node<span class="token punctuation">.</span><span class="token function">removeFromParent</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        activeEnemies<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>at<span class="token punctuation">:</span> index<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That&#39;s mostly the same, except now we call <code>subtractLife()</code> when the player lets any penguins through. So, if you miss a penguin you lose one life; if you swipe a bomb, you lose all your lives. Or at least you would if our code actually compiled, which it won&#39;t: you&#39;re missing the <code>subtractLife()</code> and <code>endGame()</code> methods!</p>`,17);function g(o,w){const a=p("VPCard"),i=p("VidStack");return d(),l("div",null,[n("h1",m,[n("a",v,[n("span",null,u(o.$frontmatter.title)+" 관련",1)])]),s(a,e(t({title:"Hacking with iOS – learn to code iPhone and iPad apps with free Swift tutorials",desc:"Learn Swift coding for iOS with these free tutorials – learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/read/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),h,b,s(a,e(t({title:"Slice to win | Hacking with iOS",desc:"Slice to win",link:"https://hackingwithswift.com/read/23/6/slice-to-win",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),s(i,{src:"youtube/kzGSiGXbxWo"}),f])}const q=c(k,[["render",g],["__file","06-slice-to-win.html.vue"]]),_=JSON.parse('{"path":"/hackingwithswift.com/read/23/06-slice-to-win.html","title":"Slice to win","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Slice to win","description":"Article(s) > Slice to win","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","xcode","appstore","ios"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Slice to win"},{"property":"og:description","content":"Slice to win"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/read/23/06-slice-to-win.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/read/23/06-slice-to-win.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Slice to win"}],["meta",{"property":"og:description","content":"Article(s) > Slice to win"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:tag","content":"ios"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Slice to win\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.67,"words":800},"filePathRelative":"hackingwithswift.com/read/23/06-slice-to-win.md","excerpt":"\\n"}');export{q as comp,_ as data};
