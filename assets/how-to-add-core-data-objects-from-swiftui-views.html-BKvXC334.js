import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as t,t as m,e,n as s,g as n,d as o,w,f as c,r as i,o as h}from"./app-BgNevrm5.js";const f={},g={id:"frontmatter-title-관련",tabindex:"-1"},b={class:"header-anchor",href:"#frontmatter-title-관련"},k=t("nav",{class:"table-of-contents"},[t("ul")],-1),v=t("hr",null,null,-1),y=t("blockquote",null,[t("p",null,"Updated for Xcode 15")],-1),j=t("p",null,"Saving Core Data objects in SwiftUI works in exactly the same way it works outside of SwiftUI: get access to the managed object context, create an instance of your type inside that context, then save the context when you’re ready.",-1),x=c(`<p>Anywhere you need to create Core Data objects you should add an <code>@Environment</code> property to <code>ContentView</code> to read the managed object context right out:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token punctuation">.</span>managedObjectContext<span class="token punctuation">)</span> <span class="token keyword">var</span> managedObjectContext</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Next, go ahead and create an instance of your Core Data entity class wherever you need, referencing that <code>managedObjectContext</code>. In my example setup, we have a ProgrammingLanguage entity with <code>name</code> and <code>creator</code> properties, so we could create one of those inside a SwiftUI button action like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Insert example language&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> language <span class="token operator">=</span> <span class="token class-name">ProgrammingLanguage</span><span class="token punctuation">(</span>context<span class="token punctuation">:</span> managedObjectContext<span class="token punctuation">)</span></span>
<span class="line">    language<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Python&quot;</span></span></span>
<span class="line">    language<span class="token punctuation">.</span>creator <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Guido van Rossum&quot;</span></span></span>
<span class="line">    <span class="token comment">// more code here</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),_=c(`<p>Finally, save the context whenever is appropriate – that might be immediately, after a group of objects have been added, when the state of your app changes, and so on.</p><p>If you’re using my <code>PersistenceController</code> setup code from earlier, replace <code>// more code here</code> with this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">PersistenceController</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If you’re not, use this code instead:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">do</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">try</span> managedObjectContext<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// handle the Core Data error</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Remember, for general saves that don’t directly follow creating a new object, it’s usually worth adding a check to see whether your managed object context has any changes:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">if</span> managedObjectContext<span class="token punctuation">.</span>hasChanges <span class="token punctuation">{</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,7),S={class:"hint-container details"},C=t("summary",null,"Similar solutions…",-1);function I(r,U){const a=i("VPCard"),l=i("RouteLink"),p=i("VidStack");return h(),u("div",null,[t("h1",g,[t("a",b,[t("span",null,m(r.$frontmatter.title)+" 관련",1)])]),e(a,s(n({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),k,v,e(a,s(n({title:"How to add Core Data objects from SwiftUI views | SwiftUI by Example",desc:"How to add Core Data objects from SwiftUI views",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-add-core-data-objects-from-swiftui-views",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),y,j,t("p",null,[o("If you followed my "),e(l,{to:"/hackingwithswift.com/swiftui/how-to-configure-core-data-to-work-with-swiftui.html"},{default:w(()=>[o("Core Data and SwiftUI set up instructions")]),_:1}),o(", you’ve already injected your managed object context into the SwiftUI environment.")]),x,e(p,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-core-data-objects-from-swiftui-views-1~dark.mp4"}),_,t("details",S,[C,e(a,s(n({title:"How to delete Core Data objects from SwiftUI views | SwiftUI by Example",desc:"How to delete Core Data objects from SwiftUI views",link:"/hackingwithswift.com/swiftui/how-to-delete-core-data-objects-from-swiftui-views.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(a,s(n({title:"Observable objects, environment objects, and @Published | SwiftUI by Example",desc:"Observable objects, environment objects, and @Published",link:"/hackingwithswift.com/swiftui/observable-objects-environment-objects-and-published.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(a,s(n({title:"All SwiftUI property wrappers explained and compared | SwiftUI by Example",desc:"All SwiftUI property wrappers explained and compared",link:"/hackingwithswift.com/swiftui/all-swiftui-property-wrappers-explained-and-compared.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(a,s(n({title:"How to use @StateObject to create and monitor external objects | SwiftUI by Example",desc:"How to use @StateObject to create and monitor external objects",link:"/hackingwithswift.com/swiftui/how-to-use-stateobject-to-create-and-monitor-external-objects.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(a,s(n({title:"How to use @ObservedObject to manage state from external objects | SwiftUI by Example",desc:"How to use @ObservedObject to manage state from external objects",link:"/hackingwithswift.com/swiftui/how-to-use-observedobject-to-manage-state-from-external-objects.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const O=d(f,[["render",I],["__file","how-to-add-core-data-objects-from-swiftui-views.html.vue"]]),E=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-add-core-data-objects-from-swiftui-views.html","title":"How to add Core Data objects from SwiftUI views","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to add Core Data objects from SwiftUI views","description":"Article(s) > How to add Core Data objects from SwiftUI views","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to add Core Data objects from SwiftUI views"},{"property":"og:description","content":"How to add Core Data objects from SwiftUI views"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-core-data-objects-from-swiftui-views.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-core-data-objects-from-swiftui-views.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to add Core Data objects from SwiftUI views"}],["meta",{"property":"og:description","content":"Article(s) > How to add Core Data objects from SwiftUI views"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to add Core Data objects from SwiftUI views\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.18,"words":655},"filePathRelative":"hackingwithswift.com/swiftui/how-to-add-core-data-objects-from-swiftui-views.md","excerpt":"\\n"}');export{O as comp,E as data};
