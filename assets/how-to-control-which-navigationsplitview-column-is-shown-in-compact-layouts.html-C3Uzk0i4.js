import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as n,t as d,e as s,n as a,g as i,d as e,f as p,r as c,o as w}from"./app-BgNevrm5.js";const h={},m={id:"frontmatter-title-관련",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-관련"},g=n("nav",{class:"table-of-contents"},[n("ul")],-1),f=n("hr",null,null,-1),v=p(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in iOS 17</strong></p><p>SwiftUI&#39;s <code>inspector()</code> modifier lets us add an inspector view anywhere we need it. This works just like Xcode: the inspector slides in on the trailing edge of your UI, and can work alongside <code>NavigationStack</code> or <code>NavigationSplitView</code> as needed.</p><p>As a simple example, this brings up an inspector view when a button is pressed:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isShowingInspector <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, world!&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            isShowingInspector<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">inspector</span><span class="token punctuation">(</span>isPresented<span class="token punctuation">:</span> $isShowingInspector<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Inspector View&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),b={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-an-inspector-to-any-view-1.zip",target:"_blank",rel:"noopener noreferrer"},y=p(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-an-inspector-to-any-view-1@2x.gif" alt="A button that opens then closes an inspector window when pressed." tabindex="0" loading="lazy"><figcaption>A button that opens then closes an inspector window when pressed.</figcaption></figure><p>When there&#39;s lots of space, such as with full-screen iPad apps or macOS, the inspector sits alongside the button. However, when space is restricted such as on iPhone, the inspector slides up as a sheet.</p><p>On platforms that support it, you can adjust how much space the inspector occupies by providing it with a fixed size (<code>.inspectorColumnWidth(500)</code>) – or by providing it with a range of sizes (<code>.inspectorColumnWidth(min: 50, ideal: 150, max: 200)</code>). This modifier should be applied to the contents of the inspector, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isShowingInspector <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, world!&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            isShowingInspector<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">inspector</span><span class="token punctuation">(</span>isPresented<span class="token punctuation">:</span> $isShowingInspector<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Inspector View&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">inspectorColumnWidth</span><span class="token punctuation">(</span>min<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> ideal<span class="token punctuation">:</span> <span class="token number">150</span><span class="token punctuation">,</span> max<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-an-inspector-to-any-view-2.zip",target:"_blank",rel:"noopener noreferrer"},_=n("figure",null,[n("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-an-inspector-to-any-view-2~dark@2x.gif",alt:"A button that opens then closes an inspector window when pressed, but this time the inspector starts small.",tabindex:"0",loading:"lazy"}),n("figcaption",null,"A button that opens then closes an inspector window when pressed, but this time the inspector starts small.")],-1),x=n("p",null,"The ideal size will be used for your inspector's size when it's first shown, but the system will remember changes from the user.",-1),I=n("p",null,"You can add multiple inspectors if you want, although I'm not sure it's a good idea.",-1),V={class:"hint-container details"},H=n("summary",null,"Similar solutions…",-1);function N(l,q){const t=c("VPCard"),o=c("FontIcon");return w(),u("div",null,[n("h1",m,[n("a",k,[n("span",null,d(l.$frontmatter.title)+" 관련",1)])]),s(t,a(i({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,f,s(t,a(i({title:"How to control which NavigationSplitView column is shown in compact layouts | SwiftUI by Example",desc:"How to control which NavigationSplitView column is shown in compact layouts",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-add-an-inspector-to-any-view",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,n("blockquote",null,[n("p",null,[n("a",b,[s(o,{icon:"fas fa-file-zipper"}),e("Download this as an Xcode project")])])]),y,n("blockquote",null,[n("p",null,[n("a",S,[s(o,{icon:"fas fa-file-zipper"}),e("Download this as an Xcode project")])])]),_,x,I,n("details",V,[H,s(t,a(i({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,a(i({title:"How to convert a SwiftUI view to an image | SwiftUI by Example",desc:"How to convert a SwiftUI view to an image",link:"/hackingwithswift.com/swiftui/how-to-convert-a-swiftui-view-to-an-image.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,a(i({title:"How to add Metal shaders to SwiftUI views using layer effects | SwiftUI by Example",desc:"How to add Metal shaders to SwiftUI views using layer effects",link:"/hackingwithswift.com/swiftui/how-to-add-metal-shaders-to-swiftui-views-using-layer-effects.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,a(i({title:"How to add advanced text styling using AttributedString | SwiftUI by Example",desc:"How to add advanced text styling using AttributedString",link:"/hackingwithswift.com/swiftui/how-to-add-advanced-text-styling-using-attributedstring.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,a(i({title:"How to make a view dismiss itself | SwiftUI by Example",desc:"How to make a view dismiss itself",link:"/hackingwithswift.com/swiftui/how-to-make-a-view-dismiss-itself.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const z=r(h,[["render",N],["__file","how-to-control-which-navigationsplitview-column-is-shown-in-compact-layouts.html.vue"]]),C=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-control-which-navigationsplitview-column-is-shown-in-compact-layouts.html","title":"How to control which NavigationSplitView column is shown in compact layouts","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to control which NavigationSplitView column is shown in compact layouts","description":"Article(s) > How to control which NavigationSplitView column is shown in compact layouts","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to control which NavigationSplitView column is shown in compact layouts"},{"property":"og:description","content":"How to control which NavigationSplitView column is shown in compact layouts"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-an-inspector-to-any-view.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-control-which-navigationsplitview-column-is-shown-in-compact-layouts.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to control which NavigationSplitView column is shown in compact layouts"}],["meta",{"property":"og:description","content":"Article(s) > How to control which NavigationSplitView column is shown in compact layouts"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-an-inspector-to-any-view-1@2x.gif"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to control which NavigationSplitView column is shown in compact layouts\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-an-inspector-to-any-view-1@2x.gif\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-an-inspector-to-any-view-2~dark@2x.gif\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.39,"words":716},"filePathRelative":"hackingwithswift.com/swiftui/how-to-control-which-navigationsplitview-column-is-shown-in-compact-layouts.md","excerpt":"\\n"}');export{z as comp,C as data};
