import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as t,t as u,e as s,n as i,g as o,d as n,f as c,r as l,o as h}from"./app-BgNevrm5.js";const m={},w={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},g=t("nav",{class:"table-of-contents"},[t("ul")],-1),k=t("hr",null,null,-1),b=t("blockquote",null,[t("p",null,"Updated for Xcode 15")],-1),v=t("div",{class:"hint-container tip"},[t("p",{class:"hint-container-title"},"Tips"),t("p",null,"You might think this chapter is totally skippable, but unless you're a Swift genius chances are you should read to the end just to be sure.")],-1),y=t("p",null,"The basic App template gives you the following:",-1),_=t("code",null,"YourProjectName.swift",-1),V=t("code",null,"ContentView.swift",-1),S=t("code",null,"Assets.xcassets",-1),I=t("li",null,"A group called Preview Content, which contains another asset catalog called Preview Assets. And that's it – it's a pleasingly small amount of code and resources, which means we can build on it.",-1),x=t("code",null,"ContentView.swift",-1),U=t("code",null,"ContentView.swift",-1),C=t("code",null,"YourProjectName.swift",-1),T=c(`<p>Go ahead and open this file now, and you&#39;ll see code like this in there:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@main</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">YourProjectName</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">WindowGroup</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That code creates a new <code>ContentView</code> instance (that&#39;s the main piece of functionality we&#39;ll be looking at soon), and places it inside a window group so it&#39;s visible onscreen. It&#39;s effectively bootstrapping our app by showing the first instance of <code>ContentView</code>, and from there it&#39;s over to us – what do you want to do?</p>`,3),j=t("code",null,"ContentView.swift",-1),A=c(`<div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token class-name">SwiftUI</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;globe&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">imageScale</span><span class="token punctuation">(</span><span class="token punctuation">.</span>large<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>tint<span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, world!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token other-directive property">#Preview</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That&#39;s not a lot of code, but it does pack in a great deal.</p><p>First, notice how <code>ContentView</code> is a struct. Developers familiar with UIKit will know that this is <em>huge</em> – we get to benefit from all the immutability and simplicity of values types for our user interface! Folks who <em>aren&#39;t</em> familiar with UIKit… well, just nod and smile – you never knew the pain we used to have.</p><p>Second, <code>ContentView</code> conforms to the <code>View</code> protocol. Everything you want to show in SwiftUI needs to conform to <code>View</code>, and really that means only one thing: you need to have a property called <code>body</code> that returns some sort of <code>View</code>.</p>`,4),P=t("code",null,"body",-1),W=t("code",null,"some View",-1),E=t("code",null,"some",-1),B={href:"https://www.youtube.com/watch?v=DvHkeUxiwYY",target:"_blank",rel:"noopener noreferrer"},H=t("code",null,"View",-1),N=c('<div class="hint-container important"><p class="hint-container-title">Important</p><p>Returning <code>some View</code> means that the <code>body</code> property will return something that conforms to the <code>View</code> protocol. You can&#39;t forget to return anything at all – the Swift compiler will refuse to build your code.</p></div><p>Fourth, inside the <code>body</code> property there&#39;s a vertical stack of content showing an image and some text.</p><p>Fifth, that stack has a <code>padding()</code> method call below it. In SwiftUI this actually creates a new view with padding around it, rather than changing the existing stack. As a result, we call these <em>modifiers</em> because they create modified content, as opposed to <em>methods</em>. There are also modifiers to make the image scale bigger and change its color.</p><p>Finally, below <code>ContentView</code> is <code>#Preview</code>, which marks special code to display our view an interactive preview of our view inside Xcode. Right now this creates an instance of <code>ContentView</code>, but you can customize these if you need to.</p>',4),F={class:"hint-container details"},R=t("summary",null,"Similar solutions…",-1);function Y(p,q){const a=l("VPCard"),e=l("FontIcon");return h(),d("div",null,[t("h1",w,[t("a",f,[t("span",null,u(p.$frontmatter.title)+" 관련",1)])]),s(a,i(o({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,k,s(a,i(o({title:"What's in the basic template? | SwiftUI by Example",desc:"What's in the basic template?",link:"https://hackingwithswift.com/quick-start/swiftui/whats-in-the-basic-template",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,v,y,t("ol",null,[t("li",null,[n("."),s(e,{icon:"fa-brands fa-swift"}),_,n(". This performs an initial set up, then creates and displays your initial view.")]),t("li",null,[n("."),s(e,{icon:"fa-brands fa-swift"}),V,n(". This is our initial piece of user interface. If this were a UIKit project, this would be the ViewController class that Xcode gave us.")]),t("li",null,[n("."),s(e,{icon:"fas fa-file-lines"}),S,n(". This is an asset catalog, which stores all the images and colors used in our project.")]),I]),t("p",null,[n("The part we really care about – in fact, here it's the only part that matters – is "),s(e,{icon:"fa-brands fa-swift"}),x,n(". This is the main piece of functionality for our app, and it's where we can start trying out various SwiftUI code in just a moment.")]),t("p",null,[n("First, though: what makes "),s(e,{icon:"fa-brands fa-swift"}),U,n(" get shown on the screen?")]),t("p",null,[n("Well, if you remember I said that "),s(e,{icon:"fa-brands fa-swift"}),C,n(" is responsible for managing the way your app is shown. Obviously it's not actually called that – it will be named according to the project name you chose when creating your poject.")]),T,t("p",null,[n("Open "),s(e,{icon:"fa-brands fa-swift"}),j,n(" and let's look at some actual SwiftUI code. You should see code like this:")]),A,t("p",null,[n("Third, the return type of "),P,n(" is "),W,n(". The "),E,n(" keyword was introduced in Swift 5.1 and is part of a feature called "),t("a",B,[s(e,{icon:"fa-brands fa-youtube"}),n("opaque return types")]),n(", and in this case what it means is literally “this will return some sort of "),H,n(" but SwiftUI doesn't need to know (or care) what.”")]),N,t("details",F,[R,s(a,i(o({title:"How to create basic animations | SwiftUI by Example",desc:"How to create basic animations",link:"/hackingwithswift.com/swiftui/how-to-create-basic-animations.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,i(o({title:"Basic form design | SwiftUI by Example",desc:"Basic form design",link:"/hackingwithswift.com/swiftui/basic-form-design.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,i(o({title:"How to open a new window | SwiftUI by Example",desc:"How to open a new window",link:"/hackingwithswift.com/swiftui/how-to-open-a-new-window.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,i(o({title:"How to configure Core Data to work with SwiftUI | SwiftUI by Example",desc:"How to configure Core Data to work with SwiftUI",link:"/hackingwithswift.com/swiftui/how-to-configure-core-data-to-work-with-swiftui.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,i(o({title:"Building a menu using List | SwiftUI by Example",desc:"Building a menu using List",link:"/hackingwithswift.com/swiftui/building-a-menu-using-list.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const O=r(m,[["render",Y],["__file","whats-in-the-basic-template.html.vue"]]),z=JSON.parse(`{"path":"/hackingwithswift.com/swiftui/whats-in-the-basic-template.html","title":"What's in the basic template?","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"What's in the basic template?","description":"Article(s) > What's in the basic template?","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > What's in the basic template?"},{"property":"og:description","content":"What's in the basic template?"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/swift/swiftui-by-example/00-introduction/whats-in-the-basic-template.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/whats-in-the-basic-template.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"What's in the basic template?"}],["meta",{"property":"og:description","content":"Article(s) > What's in the basic template?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2023-06-17T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"What's in the basic template?\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-17T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2023-06-17T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":1}]},"readingTime":{"minutes":3.48,"words":1043},"filePathRelative":"hackingwithswift.com/swiftui/whats-in-the-basic-template.md","localizedDate":"2023년 6월 17일","excerpt":"\\n"}`);export{O as comp,z as data};
