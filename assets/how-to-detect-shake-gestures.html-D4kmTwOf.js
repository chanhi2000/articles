import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as n,t as p,e as a,n as t,g as e,f as l,r as u,o as r}from"./app-BgNevrm5.js";const d={},k={id:"frontmatter-title-관련",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-관련"},h=n("nav",{class:"table-of-contents"},[n("ul")],-1),w=n("hr",null,null,-1),v=l(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI doesn&#39;t have a built-in way to detect the user shaking their device, but it doesn&#39;t take much work to create one yourself by overriding <code>motionEnded()</code> in <code>UIWindow</code> and creating a custom view modifier.</p><p>This takes five steps:</p><ol><li>Adding an extension to <code>UIDevice</code> to track a new notification that will be sent when a shake gesture happens.</li><li>Create an extension on <code>UIWindow</code> to override the default <code>motionEnded()</code> method. This is where UIKit sends shake gestures, so you should look for that happening and translate it into your new notification.</li><li>Create a custom view modifier to watch for the shake notification being posted, and call a function of your choosing when it happens.</li><li>Create a <code>View</code> extension that wraps up your new modifier neatly.</li><li>Try it out in a view.</li></ol><div class="hint-container important"><p class="hint-container-title">Important</p><p>At the time of writing view modifiers do <em>not</em> work with <code>onReceive()</code> unless you first add <code>onAppear()</code>, which is why it appears above. Yes, it&#39;s empty, but it acts as a workaround for the problem.</p></div><p>Here&#39;s a complete code sample walking through all five steps with comments:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token comment">// The notification we&#39;ll send when a shake gesture happens.</span></span>
<span class="line"><span class="token keyword">extension</span> <span class="token class-name">UIDevice</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">static</span> <span class="token keyword">let</span> deviceDidShakeNotification <span class="token operator">=</span> <span class="token class-name">Notification</span><span class="token punctuation">.</span><span class="token class-name">Name</span><span class="token punctuation">(</span>rawValue<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;deviceDidShakeNotification&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//  Override the default behavior of shake gestures to send our notification instead.</span></span>
<span class="line"><span class="token keyword">extension</span> <span class="token class-name">UIWindow</span> <span class="token punctuation">{</span></span>
<span class="line">     <span class="token keyword">open</span> <span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">motionEnded</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> motion<span class="token punctuation">:</span> <span class="token class-name">UIEvent</span><span class="token punctuation">.</span><span class="token class-name">EventSubtype</span><span class="token punctuation">,</span> with event<span class="token punctuation">:</span> <span class="token class-name">UIEvent</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> motion <span class="token operator">==</span> <span class="token punctuation">.</span>motionShake <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">NotificationCenter</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token class-name">UIDevice</span><span class="token punctuation">.</span>deviceDidShakeNotification<span class="token punctuation">,</span> object<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">     <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// A view modifier that detects shaking and calls a function of our choosing.</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">DeviceShakeViewModifier</span><span class="token punctuation">:</span> <span class="token class-name">ViewModifier</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> action<span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">body</span><span class="token punctuation">(</span>content<span class="token punctuation">:</span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        content</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">onAppear</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">onReceive</span><span class="token punctuation">(</span><span class="token class-name">NotificationCenter</span><span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">.</span><span class="token function">publisher</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">UIDevice</span><span class="token punctuation">.</span>deviceDidShakeNotification<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span></span>
<span class="line">                <span class="token function">action</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// A View extension to make the modifier easier to use.</span></span>
<span class="line"><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">onShake</span><span class="token punctuation">(</span>perform action<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">modifier</span><span class="token punctuation">(</span><span class="token class-name">DeviceShakeViewModifier</span><span class="token punctuation">(</span>action<span class="token punctuation">:</span> action<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// An example view that responds to being shaken</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Shake me!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span>onShake <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Device shaken!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>As you can see, once you have the first four steps in place you can go ahead and add an <code>onShake()</code> modifier to any view you want, providing some custom code to run when the shake gesture happens – it&#39;s not straightforward to set up, but once you&#39;re done it all works neatly.</p>`,8),g={class:"hint-container details"},f=n("summary",null,"Similar solutions…",-1);function b(o,y){const s=u("VPCard");return r(),c("div",null,[n("h1",k,[n("a",m,[n("span",null,p(o.$frontmatter.title)+" 관련",1)])]),a(s,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),h,w,a(s,t(e({title:"How to detect shake gestures | SwiftUI by Example",desc:"How to detect shake gestures",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-detect-shake-gestures",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,n("details",g,[f,a(s,t(e({title:"How to make two gestures recognize at the same time using simultaneousGesture() | SwiftUI by Example",desc:"How to make two gestures recognize at the same time using simultaneousGesture()",link:"/hackingwithswift.com/swiftui/how-to-make-two-gestures-recognize-at-the-same-time-using-simultaneousgesture.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to stop system gestures from interfering with your own | SwiftUI by Example",desc:"How to stop system gestures from interfering with your own",link:"/hackingwithswift.com/swiftui/how-to-stop-system-gestures-from-interfering-with-your-own.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to read tap and double-tap gestures | SwiftUI by Example",desc:"How to read tap and double-tap gestures",link:"/hackingwithswift.com/swiftui/how-to-read-tap-and-double-tap-gestures.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to detect the location of a tap inside a view | SwiftUI by Example",desc:"How to detect the location of a tap inside a view",link:"/hackingwithswift.com/swiftui/how-to-detect-the-location-of-a-tap-inside-a-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to detect the user hovering over a view | SwiftUI by Example",desc:"How to detect the user hovering over a view",link:"/hackingwithswift.com/swiftui/how-to-detect-the-user-hovering-over-a-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const x=i(d,[["render",b],["__file","how-to-detect-shake-gestures.html.vue"]]),H=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-detect-shake-gestures.html","title":"How to detect shake gestures","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to detect shake gestures","description":"Article(s) > How to detect shake gestures","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to detect shake gestures"},{"property":"og:description","content":"How to detect shake gestures"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-detect-shake-gestures.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-detect-shake-gestures.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to detect shake gestures"}],["meta",{"property":"og:description","content":"Article(s) > How to detect shake gestures"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to detect shake gestures\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.46,"words":738},"filePathRelative":"hackingwithswift.com/swiftui/how-to-detect-shake-gestures.md","excerpt":"\\n"}');export{x as comp,H as data};
