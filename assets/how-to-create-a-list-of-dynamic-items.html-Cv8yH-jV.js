import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as s,t as u,e as a,n,g as e,d,f as o,r as i,o as m}from"./app-BgNevrm5.js";const h={},w={id:"frontmatter-title-관련",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-관련"},f=s("nav",{class:"table-of-contents"},[s("ul")],-1),g=s("hr",null,null,-1),y=o(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>In order to handle dynamic items, you must first tell SwiftUI how it can identify which item is which. This is can either be done by specifying the identifying property by hand, or by using the <code>Identifiable</code> protocol. This protocol has only one requirement, which is that the type must have some sort of <code>id</code> value SwiftUI can use to see which item is which.</p><p>To demonstrate this, we can create three things then put them together:</p><ol><li>A <code>Restaurant</code> struct that says restaurants have an ID and name, with the ID being a random identifier just so that SwiftUI knows which is which.</li><li>A small view that determines what each row in our list looks like. In our case we&#39;re going to define a <code>RestaurantRow</code> view that stores one restaurant and prints its name in a text view.</li><li>A list view that shows several restaurants. This means creating some example data, putting it into an array, then passing that into a list to be rendered.</li></ol><p>Here&#39;s all that in code:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token comment">// A struct to store exactly one restaurant&#39;s data.</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">Restaurant</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// A view that shows the data for one Restaurant.</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">RestaurantRow</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> restaurant<span class="token punctuation">:</span> <span class="token class-name">Restaurant</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Come and eat at </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">restaurant<span class="token punctuation">.</span>name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Create three restaurants, then show them in a list.</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> restaurants <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token class-name">Restaurant</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Joe&#39;s Original&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token class-name">Restaurant</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;The Real Joe&#39;s Original&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token class-name">Restaurant</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Original Joe&#39;s&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token punctuation">(</span>restaurants<span class="token punctuation">)</span> <span class="token punctuation">{</span> restaurant <span class="token keyword">in</span></span>
<span class="line">            <span class="token class-name">RestaurantRow</span><span class="token punctuation">(</span>restaurant<span class="token punctuation">:</span> restaurant<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),v={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-a-list-of-dynamic-items-1.zip",target:"_blank",rel:"noopener noreferrer"},b=o('<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-list-of-dynamic-items-1~dark@2x.png" alt="A list containing “Come and eat at Joe&#39;s Original”, “Come and eat at The Real Joe&#39;s Original”, and “Come and eat at Original Joe&#39;s”." tabindex="0" loading="lazy"><figcaption>A list containing “Come and eat at Joe&#39;s Original”, “Come and eat at The Real Joe&#39;s Original”, and “Come and eat at Original Joe&#39;s”.</figcaption></figure><p>Most of that is just creating data – the last part is where the real action is: using <code>List(restaurants)</code> creates a list from the <code>restaurants</code> array, executing the following closure once for every item in the array. Each time the closure goes around the <code>restaurant</code> input will be filled with one item from the array, so we use that to create a <code>RestaurantRow</code>.</p><p>In fact, in trivial cases like this one we can make the code even shorter: <code>List(restaurants, rowContent: RestaurantRow.init)</code> does exactly the same thing.</p>',3),_={class:"hint-container details"},x=s("summary",null,"Similar solutions…",-1);function R(c,H){const t=i("VPCard"),l=i("FontIcon");return m(),r("div",null,[s("h1",w,[s("a",k,[s("span",null,u(c.$frontmatter.title)+" 관련",1)])]),a(t,n(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,g,a(t,n(e({title:"How to create a list of dynamic items | SwiftUI by Example",desc:"How to create a list of dynamic items",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-create-a-list-of-dynamic-items",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),y,s("blockquote",null,[s("p",null,[s("a",v,[a(l,{icon:"fas fa-file-zipper"}),d("Download this as an Xcode project")])])]),b,s("details",_,[x,a(t,n(e({title:"How to use Dynamic Type with a custom font | SwiftUI by Example",desc:"How to use Dynamic Type with a custom font",link:"/hackingwithswift.com/swiftui/how-to-use-dynamic-type-with-a-custom-font.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,n(e({title:"How to specify the Dynamic Type sizes a view supports | SwiftUI by Example",desc:"How to specify the Dynamic Type sizes a view supports",link:"/hackingwithswift.com/swiftui/how-to-specify-the-dynamic-type-sizes-a-view-supports.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,n(e({title:"How to create a list of static items | SwiftUI by Example",desc:"How to create a list of static items",link:"/hackingwithswift.com/swiftui/how-to-create-a-list-of-static-items.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,n(e({title:"How to preview your layout at different Dynamic Type sizes | SwiftUI by Example",desc:"How to preview your layout at different Dynamic Type sizes",link:"/hackingwithswift.com/swiftui/how-to-preview-your-layout-at-different-dynamic-type-sizes.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,n(e({title:"How to add a badge to TabView items and List rows | SwiftUI by Example",desc:"How to add a badge to TabView items and List rows",link:"/hackingwithswift.com/swiftui/how-to-add-a-badge-to-tabview-items-and-list-rows.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const S=p(h,[["render",R],["__file","how-to-create-a-list-of-dynamic-items.html.vue"]]),q=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-create-a-list-of-dynamic-items.html","title":"How to create a list of dynamic items","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to create a list of dynamic items","description":"Article(s) > How to create a list of dynamic items","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to create a list of dynamic items"},{"property":"og:description","content":"How to create a list of dynamic items"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-a-list-of-dynamic-items.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-a-list-of-dynamic-items.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to create a list of dynamic items"}],["meta",{"property":"og:description","content":"Article(s) > How to create a list of dynamic items"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-list-of-dynamic-items-1~dark@2x.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to create a list of dynamic items\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-list-of-dynamic-items-1~dark@2x.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.65,"words":794},"filePathRelative":"hackingwithswift.com/swiftui/how-to-create-a-list-of-dynamic-items.md","excerpt":"\\n"}');export{S as comp,q as data};
