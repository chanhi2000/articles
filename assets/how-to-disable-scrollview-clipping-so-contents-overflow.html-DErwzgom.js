import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,t as u,e as s,n as a,g as o,d,f as i,r as e,o as w}from"./app-BgNevrm5.js";const h={},f={id:"frontmatter-title-관련",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-관련"},k=n("nav",{class:"table-of-contents"},[n("ul")],-1),m=n("hr",null,null,-1),v=i(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in iOS 17</strong></p><p>SwiftUI&#39;s <code>ScrollView</code> automatically clips its contents, so that scrolling views always stay fully inside the scroll view area. However, if you use the <code>scrollClipDisabled()</code> modifier you can override this default behavior, allowing scrolling views to overflow.</p><div class="hint-container important"><p class="hint-container-title">Important</p><p>This does not affect the touch area of the scroll view, so if users tap on views that have overflowed your <code>ScrollView</code> that tap will actually be received by whatever is below. So, it&#39;s probably best to restrict this a little, for example to allow shadows to flow outside the scrolling area without affecting other views too much.</p></div><p>As an example, this next example shows a <code>VStack</code> with fixed text at the top and bottom, with a scrolling area in the middle. The scrolling views will start neatly aligned below the top text, but as you scroll will overflow:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Fixed at the top&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token punctuation">.</span>green<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">ScrollView</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> i <span class="token keyword">in</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Scrolling&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">scrollClipDisabled</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Fixed at the bottom&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token punctuation">.</span>infinity<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token punctuation">.</span>green<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),b={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-disable-scrollview-clipping-so-contents-overflow-1.zip",target:"_blank",rel:"noopener noreferrer"},y=i('<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-disable-scrollview-clipping-so-contents-overflow-1~dark.gif" alt="Views inside a scrollview scrolling outside their container as the user moves around." tabindex="0" loading="lazy"><figcaption>Views inside a scrollview scrolling outside their container as the user moves around.</figcaption></figure><p>There are two extra things it&#39;s helpful to know when working with <code>scrollClipDisabled()</code>:</p><ol><li>You can add a custom clip shape to limit how far things overflow. For example, adding <code>padding()</code> then <code>clipShape(.rect)</code> means you get a little overflow, but not infinite.</li><li>Because scrolling views now overlap their surroundings, you may need to use <code>zIndex()</code> to adjust their vertical positioning. For example, if other views have the default Z index, then using <code>zIndex(1)</code> on your scroll view will make its children render over other views.</li></ol>',3),S={class:"hint-container details"},x=n("summary",null,"Similar solutions…",-1);function _(l,V){const t=e("VPCard"),c=e("FontIcon");return w(),r("div",null,[n("h1",f,[n("a",g,[n("span",null,u(l.$frontmatter.title)+" 관련",1)])]),s(t,a(o({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),k,m,s(t,a(o({title:"How to disable ScrollView clipping so contents overflow | SwiftUI by Example",desc:"How to disable ScrollView clipping so contents overflow",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-disable-scrollview-clipping-so-contents-overflow",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,n("blockquote",null,[n("p",null,[n("a",b,[s(c,{icon:"fas fa-file-zipper"}),d("Download this as an Xcode project")])])]),y,n("details",S,[x,s(t,a(o({title:"How to disable autocorrect in a TextField | SwiftUI by Example",desc:"How to disable autocorrect in a TextField",link:"/hackingwithswift.com/swiftui/how-to-disable-autocorrect-in-a-textfield.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,a(o({title:"How to disable taps for a view using allowsHitTesting() | SwiftUI by Example",desc:"How to disable taps for a view using allowsHitTesting()",link:"/hackingwithswift.com/swiftui/how-to-disable-taps-for-a-view-using-allowshittesting.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,a(o({title:"How to disable the overlay color for images inside Button and NavigationLink | SwiftUI by Example",desc:"How to disable the overlay color for images inside Button and NavigationLink",link:"/hackingwithswift.com/swiftui/how-to-disable-the-overlay-color-for-images-inside-button-and-navigationlink.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,a(o({title:"How to indent the content or scroll indicators in a ScrollView | SwiftUI by Example",desc:"How to indent the content or scroll indicators in a ScrollView",link:"/hackingwithswift.com/swiftui/how-to-indent-the-content-or-scroll-indicators-in-a-scrollview.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,a(o({title:"How to flash the scroll bar indicators of a ScrollView or List | SwiftUI by Example",desc:"How to flash the scroll bar indicators of a ScrollView or List",link:"/hackingwithswift.com/swiftui/how-to-flash-the-scroll-bar-indicators-of-a-scrollview-or-list.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const q=p(h,[["render",_],["__file","how-to-disable-scrollview-clipping-so-contents-overflow.html.vue"]]),T=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-disable-scrollview-clipping-so-contents-overflow.html","title":"How to disable ScrollView clipping so contents overflow","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to disable ScrollView clipping so contents overflow","description":"Article(s) > How to disable ScrollView clipping so contents overflow","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to disable ScrollView clipping so contents overflow"},{"property":"og:description","content":"How to disable ScrollView clipping so contents overflow"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-disable-scrollview-clipping-so-contents-overflow.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-disable-scrollview-clipping-so-contents-overflow.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to disable ScrollView clipping so contents overflow"}],["meta",{"property":"og:description","content":"Article(s) > How to disable ScrollView clipping so contents overflow"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-disable-scrollview-clipping-so-contents-overflow-1~dark.gif"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to disable ScrollView clipping so contents overflow\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-disable-scrollview-clipping-so-contents-overflow-1~dark.gif\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.39,"words":718},"filePathRelative":"hackingwithswift.com/swiftui/how-to-disable-scrollview-clipping-so-contents-overflow.md","excerpt":"\\n"}');export{q as comp,T as data};
