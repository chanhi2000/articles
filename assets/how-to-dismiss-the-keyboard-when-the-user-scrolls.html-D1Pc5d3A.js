import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as s,t as d,e as t,n,g as a,d as u,f as i,r as o,o as h}from"./app-BgNevrm5.js";const m={},k={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},b=s("nav",{class:"table-of-contents"},[s("ul")],-1),f=s("hr",null,null,-1),g=i(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in iOS 16</strong></p><p>SwiftUI&#39;s <code>scrollDismissesKeyboard()</code> modifier gives us precise control over how the keyboard should dismiss when the user scrolls around.</p><p>For example, we could place a <code>TextField</code> and <code>TextEditor</code> into a scroll view, and have them both dismiss the keyboard interactively like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> username <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Anonymous&quot;</span></span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> bio <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ScrollView</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Name&quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $username<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">textFieldStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>roundedBorder<span class="token punctuation">)</span></span>
<span class="line">                <span class="token class-name">TextEditor</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $bio<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">400</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token punctuation">.</span>quaternary<span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">scrollDismissesKeyboard</span><span class="token punctuation">(</span><span class="token punctuation">.</span>interactively<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-dismiss-the-keyboard-when-the-user-scrolls-1.zip",target:"_blank",rel:"noopener noreferrer"},v=i("<p>The <code>scrollDismissesKeyboard()</code> modifier can be given one of four values, all of which are useful in their own way:</p><ul><li>Use <code>.automatic</code> to let SwiftUI judge what&#39;s the best thing to do based on the context of the scroll.</li><li>Use <code>.immediately</code> to make the keyboard dismiss fully as soon as any scroll happens.</li><li>Use <code>.interactively</code> to make the keyboard dismiss inline with the user&#39;s gesture â€“ they need to scroll further to make it dismiss fully.</li><li>Use <code>.never</code> if you want the keyboard to remain present during scrolling.</li></ul><p>According to Apple&#39;s documentation, text editors should use interactive dismissal by default, whereas other views should use immediate, but that certainly doesn&#39;t seem to be the case right now.</p>",3),x={class:"hint-container details"},_=s("summary",null,"Similar solutionsâ€¦",-1);function S(l,H){const e=o("VPCard"),c=o("FontIcon");return h(),p("div",null,[s("h1",k,[s("a",w,[s("span",null,d(l.$frontmatter.title)+" ê´€ë ¨",1)])]),t(e,n(a({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),b,f,t(e,n(a({title:"How to dismiss the keyboard when the user scrolls | SwiftUI by Example",desc:"How to dismiss the keyboard when the user scrolls",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-dismiss-the-keyboard-when-the-user-scrolls",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),g,s("blockquote",null,[s("p",null,[s("a",y,[t(c,{icon:"fas fa-file-zipper"}),u("Download this as an Xcode project")])])]),v,s("details",x,[_,t(e,n(a({title:"How to dismiss the keyboard for a TextField | SwiftUI by Example",desc:"How to dismiss the keyboard for a TextField",link:"/hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-for-a-textfield.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(e,n(a({title:"How to make a view dismiss itself | SwiftUI by Example",desc:"How to make a view dismiss itself",link:"/hackingwithswift.com/swiftui/how-to-make-a-view-dismiss-itself.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(e,n(a({title:"How to add a toolbar to the keyboard | SwiftUI by Example",desc:"How to add a toolbar to the keyboard",link:"/hackingwithswift.com/swiftui/how-to-add-a-toolbar-to-the-keyboard.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(e,n(a({title:"How to add keyboard shortcuts using keyboardShortcut() | SwiftUI by Example",desc:"How to add keyboard shortcuts using keyboardShortcut()",link:"/hackingwithswift.com/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(e,n(a({title:"How to make a TextField expand vertically as the user types | SwiftUI by Example",desc:"How to make a TextField expand vertically as the user types",link:"/hackingwithswift.com/swiftui/how-to-make-a-textfield-expand-vertically-as-the-user-types.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const E=r(m,[["render",S],["__file","how-to-dismiss-the-keyboard-when-the-user-scrolls.html.vue"]]),I=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-when-the-user-scrolls.html","title":"How to dismiss the keyboard when the user scrolls","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to dismiss the keyboard when the user scrolls","description":"Article(s) > How to dismiss the keyboard when the user scrolls","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to dismiss the keyboard when the user scrolls"},{"property":"og:description","content":"How to dismiss the keyboard when the user scrolls"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-when-the-user-scrolls.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-when-the-user-scrolls.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"How to dismiss the keyboard when the user scrolls"}],["meta",{"property":"og:description","content":"Article(s) > How to dismiss the keyboard when the user scrolls"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to dismiss the keyboard when the user scrolls\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.98,"words":594},"filePathRelative":"hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-when-the-user-scrolls.md","excerpt":"\\n"}');export{E as comp,I as data};
