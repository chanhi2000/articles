import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as n,t as d,e as t,n as i,g as e,d as s,a as h,f as m,r as c,o as f}from"./app-BgNevrm5.js";const u={},g={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},k=n("nav",{class:"table-of-contents"},[n("ul")],-1),v=n("hr",null,null,-1),b=n("blockquote",null,[n("p",null,"Available from Swift 5.10")],-1),y={href:"https://github.com/apple/swift-evolution/blob/main/proposals/0327-actor-initializers.md",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"apple/swift-evolution",-1),z=m(`<p>This proposal contains a number of small, specific changes to actors. For example, Swift will now automatically make actors with an async initializer move to the actor&#39;s executor when all its properties are initialized.</p><p>In code, it means the two <code>print()</code> calls shown below might execute on entirely different threads:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">actor</span> <span class="token class-name">Actor</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">init</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> <span class="token keyword">actor</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token class-name">Actor</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Margot&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This means the code has a potential suspension directly after the <code>name</code> property is set.</p>`,4),S={class:"hint-container details"},R=n("summary",null,"Other Changes in Swift 5.10",-1),A={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-5-9-to-5-10.playground.zip",target:"_blank",rel:"noopener noreferrer"};function C(l,x){const a=c("VPCard"),o=c("FontIcon");return f(),p("div",null,[n("h1",g,[n("a",w,[n("span",null,d(l.$frontmatter.title)+" ê´€ë ¨",1)])]),t(a,i(e({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k,v,t(a,i(e({title:"Refined actor initialization and deinitialization | Changes in Swift 5.10",desc:"Refined actor initialization and deinitialization",link:"https://hackingwithswift.com/swift/5.10/actor-initialization",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("p",null,[n("a",y,[s("SE-0327 ("),t(o,{icon:"iconfont icon-github"}),_,s(")")]),s(" adds some clarifications about how state inside actors is created and destroyed, and also relaxes some rules that were overly restrictive.")]),z,n("details",S,[R,t(a,i(e({title:"Data races are now clearly diagnosed | Changes in Swift 5.10",desc:"Data races are now clearly diagnosed",link:"/hackingwithswift.com/swift/5.10/complete-concurrency.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(a,i(e({title:"Allow Protocols to be Nested in Non-Generic Contexts | Changes in Swift 5.10",desc:"Allow Protocols to be Nested in Non-Generic Contexts",link:"/hackingwithswift.com/swift/5.10/nested-protocols.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(a,i(e({title:"Deprecate @UIApplicationMain and @NSApplicationMain | Changes in Swift 5.10",desc:"Deprecate @UIApplicationMain and @NSApplicationMain",link:"/hackingwithswift.com/swift/5.10/deprecate-uiapplicationmain.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),h(` 
\`\`\`component VPCard
{
  "title": "Refined actor initialization and deinitialization | Changes in Swift 5.10",
  "desc": "Refined actor initialization and deinitialization",
  "link": "/hackingwithswift.com/swift/5.10/actor-initialization.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),n("p",null,[n("a",A,[t(o,{icon:"fas fa-file-zipper"}),s("Download Swift 5.10 playground")])])])])}const P=r(u,[["render",C],["__file","actor-initialization.html.vue"]]),V=JSON.parse('{"path":"/hackingwithswift.com/swift/5.10/actor-initialization.html","title":"Refined actor initialization and deinitialization","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Refined actor initialization and deinitialization","description":"Article(s) > Refined actor initialization and deinitialization","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-5.10"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Refined actor initialization and deinitialization"},{"property":"og:description","content":"Refined actor initialization and deinitialization"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.10/actor-initialization.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.10/actor-initialization.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"Refined actor initialization and deinitialization"}],["meta",{"property":"og:description","content":"Article(s) > Refined actor initialization and deinitialization"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Refined actor initialization and deinitialization\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.31,"words":394},"filePathRelative":"hackingwithswift.com/swift/5.10/actor-initialization.md","excerpt":"\\n"}');export{P as comp,V as data};
