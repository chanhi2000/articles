import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as e,t as p,e as a,n as s,g as n,f as c,r as l,o as h}from"./app-BgNevrm5.js";const d={},u={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},m=e("nav",{class:"table-of-contents"},[e("ul")],-1),b=e("hr",null,null,-1),g=c(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><code>@Published</code> is one of the most useful property wrappers in SwiftUI, allowing us to create observable objects that automatically announce when changes occur. SwiftUI will automatically monitor for such changes, and re-invoke the <code>body</code> property of any views that rely on the data.</p><p>In practical terms, that means whenever an object with a property marked <code>@Published</code> is changed, all views using that object will be reloaded to reflect those changes.</p><p>For example, if we have an observable object such as this one:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Bag</span><span class="token punctuation">:</span> <span class="token class-name">ObservableObject</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That conforms to the <code>ObservableObject</code> protocol, which means SwiftUIâ€™s views can watch it for changes. But because its only property isnâ€™t marked with <code>@Published</code>, no change announcements will ever be sent â€“ you can add items to the array freely and no views will update.</p><p>If you wanted change announcements to be sent whenever something was added or removed from <code>items</code>, you would mark it with <code>@Published</code>, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">Bag</span><span class="token punctuation">:</span> <span class="token class-name">ObservableObject</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@Published</span> <span class="token keyword">var</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You donâ€™t need to do anything else â€“ the <code>@Published</code> property wrapper effectively adds a <code>willSet</code> property observer to <code>items</code>, so that any changes are automatically sent out to observers.</p><p>As you can see, <code>@Published</code> is <em>opt-in</em> â€“ you need to list which properties should cause announcements, because the default is that changes donâ€™t cause reloads. This means you can have properties that store caches, properties for internal use, and more, and they wonâ€™t force SwiftUI to reload views when they change unless you specifically mark them with <code>@Published</code>.</p>`,10),f={class:"hint-container details"},y=e("summary",null,"Similar solutionsâ€¦",-1);function k(i,v){const t=l("VPCard");return h(),r("div",null,[e("h1",u,[e("a",w,[e("span",null,p(i.$frontmatter.title)+" ê´€ë ¨",1)])]),a(t,s(n({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),m,b,a(t,s(n({title:"What is the @Published property wrapper? | SwiftUI by Example",desc:"What is the @Published property wrapper?",link:"https://hackingwithswift.com/quick-start/swiftui/what-is-the-published-property-wrapper",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),g,e("details",f,[y,a(t,s(n({title:"Observable objects, environment objects, and @Published | SwiftUI by Example",desc:"Observable objects, environment objects, and @Published",link:"/hackingwithswift.com/swiftui/observable-objects-environment-objects-and-published.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,s(n({title:"What is the @ObservedObject property wrapper? | SwiftUI by Example",desc:"What is the @ObservedObject property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-observedobject-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,s(n({title:"What is the @GestureState property wrapper? | SwiftUI by Example",desc:"What is the @GestureState property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-gesturestate-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,s(n({title:"What is the @ScaledMetric property wrapper? | SwiftUI by Example",desc:"What is the @ScaledMetric property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-scaledmetric-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,s(n({title:"What is the @EnvironmentObject property wrapper? | SwiftUI by Example",desc:"What is the @EnvironmentObject property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-environmentobject-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const S=o(d,[["render",k],["__file","what-is-the-published-property-wrapper.html.vue"]]),j=JSON.parse('{"path":"/hackingwithswift.com/swiftui/what-is-the-published-property-wrapper.html","title":"What is the @Published property wrapper?","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"What is the @Published property wrapper?","description":"Article(s) > What is the @Published property wrapper?","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > What is the @Published property wrapper?"},{"property":"og:description","content":"What is the @Published property wrapper?"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/what-is-the-published-property-wrapper.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/what-is-the-published-property-wrapper.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"What is the @Published property wrapper?"}],["meta",{"property":"og:description","content":"Article(s) > What is the @Published property wrapper?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"What is the @Published property wrapper?\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.9,"words":569},"filePathRelative":"hackingwithswift.com/swiftui/what-is-the-published-property-wrapper.md","excerpt":"\\n"}');export{S as comp,j as data};
