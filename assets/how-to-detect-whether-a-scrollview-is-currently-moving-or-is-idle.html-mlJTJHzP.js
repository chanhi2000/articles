import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as e,t as d,e as t,n as s,g as o,d as h,f as a,r as i,o as w}from"./app-BgNevrm5.js";const u={},g={id:"frontmatter-title-관련",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-관련"},v=e("nav",{class:"table-of-contents"},[e("ul")],-1),f=e("hr",null,null,-1),k=a(`<blockquote><p>Updated for Xcode 16</p></blockquote><p><strong>Improved in iOS 18</strong></p><p>SwiftUI’s <code>onScrollPhaseChange()</code> modifier lets us detect when the movement of a scrollview changes somehow.</p><p>For example, this changes a color from red to green whenever the user is actively interacting with it:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> backgroundColor <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>red</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ScrollView</span> <span class="token punctuation">{</span></span>
<span class="line">            backgroundColor</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">2000</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span>onScrollPhaseChange <span class="token punctuation">{</span> oldPhase<span class="token punctuation">,</span> newPhase <span class="token keyword">in</span></span>
<span class="line">            <span class="token keyword">if</span> newPhase <span class="token operator">==</span> <span class="token punctuation">.</span>interacting <span class="token punctuation">{</span></span>
<span class="line">                backgroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>green</span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                backgroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>red</span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),b={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-detect-whether-a-scrollview-is-currently-moving-or-is-idle-1.zip",target:"_blank",rel:"noopener noreferrer"},y=a("<p>The <code>oldPhase</code> and <code>newPhase</code> values can have one of five different values:</p><ul><li><code>.animating</code>: When the scrollview is moving towards one particular view.</li><li><code>.decelerating</code>: When the user has released their finger and the scrollview is slowing down naturally.</li><li><code>.idle</code>: The scrollview is not moving or being interacted with.</li><li><code>.interacting</code>: The user has their finger down right now, either stationary or moving.</li><li><code>.tracking</code>: Used when the system thinks a user scroll event might be coming soon; I suspect this one isn&#39;t so helpful.</li></ul><p>Having access to both the old and new values allows you to add subtle interactions – perhaps moving to idle after a drag triggers one result, whereas doing so after an animation triggers a different result.</p>",3),_={class:"hint-container details"},S=e("summary",null,"Similar solutions…",-1);function H(l,x){const n=i("VPCard"),c=i("FontIcon");return w(),p("div",null,[e("h1",g,[e("a",m,[e("span",null,d(l.$frontmatter.title)+" 관련",1)])]),t(n,s(o({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),v,f,t(n,s(o({title:"How to detect whether a scrollview is currently moving or is idle | SwiftUI by Example",desc:"How to detect whether a scrollview is currently moving or is idle",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-detect-whether-a-scrollview-is-currently-moving-or-is-idle",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k,e("blockquote",null,[e("p",null,[e("a",b,[t(c,{icon:"fas fa-file-zipper"}),h("Download this as an Xcode project")])])]),y,e("details",_,[S,t(n,s(o({title:"How to flash the scroll bar indicators of a ScrollView or List | SwiftUI by Example",desc:"How to flash the scroll bar indicators of a ScrollView or List",link:"/hackingwithswift.com/swiftui/how-to-flash-the-scroll-bar-indicators-of-a-scrollview-or-list.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,s(o({title:"How to add horizontal and vertical scrolling using ScrollView | SwiftUI by Example",desc:"How to add horizontal and vertical scrolling using ScrollView",link:"/hackingwithswift.com/swiftui/how-to-add-horizontal-and-vertical-scrolling-using-scrollview.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,s(o({title:"How to scroll to exact locations inside a scrollview | SwiftUI by Example",desc:"How to scroll to exact locations inside a scrollview",link:"/hackingwithswift.com/swiftui/how-to-scroll-to-exact-locations-inside-a-scrollview.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,s(o({title:"How to indent the content or scroll indicators in a ScrollView | SwiftUI by Example",desc:"How to indent the content or scroll indicators in a ScrollView",link:"/hackingwithswift.com/swiftui/how-to-indent-the-content-or-scroll-indicators-in-a-scrollview.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,s(o({title:"How to disable ScrollView clipping so contents overflow | SwiftUI by Example",desc:"How to disable ScrollView clipping so contents overflow",link:"/hackingwithswift.com/swiftui/how-to-disable-scrollview-clipping-so-contents-overflow",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const P=r(u,[["render",H],["__file","how-to-detect-whether-a-scrollview-is-currently-moving-or-is-idle.html.vue"]]),C=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-detect-whether-a-scrollview-is-currently-moving-or-is-idle.html","title":"How to detect whether a scrollview is currently moving or is idle","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to detect whether a scrollview is currently moving or is idle","description":"Article(s) > How to detect whether a scrollview is currently moving or is idle","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to detect whether a scrollview is currently moving or is idle"},{"property":"og:description","content":"How to detect whether a scrollview is currently moving or is idle"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-detect-whether-a-scrollview-is-currently-moving-or-is-idle.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-detect-whether-a-scrollview-is-currently-moving-or-is-idle.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to detect whether a scrollview is currently moving or is idle"}],["meta",{"property":"og:description","content":"Article(s) > How to detect whether a scrollview is currently moving or is idle"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2024-06-21T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to detect whether a scrollview is currently moving or is idle\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-21T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"next":"/hackingwithswift.com/swiftui/working-with-state.md","date":"2024-06-21T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.12,"words":635},"filePathRelative":"hackingwithswift.com/swiftui/how-to-detect-whether-a-scrollview-is-currently-moving-or-is-idle.md","localizedDate":"2024년 6월 21일","excerpt":"\\n"}');export{P as comp,C as data};
