import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as n,t as d,e as t,n as a,g as e,d as i,a as g,f as m,r as c,o as h}from"./app-BgNevrm5.js";const u={},w={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},k=n("nav",{class:"table-of-contents"},[n("ul")],-1),v=n("hr",null,null,-1),b=m(`<blockquote><p>Available from Swift 5.2</p></blockquote><p>Swift 5.2 introduced a new diagnostic architecture that aims to improves the quality and precision of error messages issued by Xcode when you make a coding error. This is particularly apparent when working with SwiftUI code, where Swift would often produce false positive error messages.</p><p>For an example, consider code like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;What is your name?&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Name&quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $name<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>maxWidth<span class="token punctuation">:</span> <span class="token number">300</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That attempts to bind a <code>TextField</code> view to an integer <code>@State</code> property, which is invalid. In Swift 5.1 this caused an error for the <code>frame()</code> modifier saying <strong>&#39;Int&#39; is not convertible to &#39;CGFloat?â€™</strong>, but in Swift 5.2 and later this correctly identifies the error is the <code>$name</code> binding: <strong>Cannot convert value of type <code>Binding&lt;Int&gt;</code> to expected argument type <code>Binding&lt;String&gt;</code></strong>.</p>`,5),y={href:"https://swift.org/blog/new-diagnostic-arch-overview/",target:"_blank",rel:"noopener noreferrer"},_={class:"hint-container details"},S=n("summary",null,"Other Changes in Swift 5.2",-1),N={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-5-1-to-5-2.playground.zip",target:"_blank",rel:"noopener noreferrer"};function x(r,C){const s=c("VPCard"),o=c("FontIcon");return h(),p("div",null,[n("h1",w,[n("a",f,[n("span",null,d(r.$frontmatter.title)+" ê´€ë ¨",1)])]),t(s,a(e({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k,v,t(s,a(e({title:"New and improved diagnostics | Changes in Swift 5.2",desc:"New and improved diagnostics",link:"https://hackingwithswift.com/swift/5.2/new-diagnostics",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("p",null,[i("You can find out more about the new diagnostic architecture on the "),n("a",y,[t(o,{icon:"fa-brands fa-swift"}),i("Swift.org blog")]),i(".")]),n("details",_,[S,t(s,a(e({title:"Key path expressions as functions | Changes in Swift 5.2",desc:"Key path expressions as functions",link:"/hackingwithswift.com/swift/5.2/keypath-expressions.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(s,a(e({title:"Callable values of user-defined nominal types | Changes in Swift 5.2",desc:"Callable values of user-defined nominal types",link:"/hackingwithswift.com/swift/5.2/callasfunction.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(s,a(e({title:"Subscripts can now declare default arguments | Changes in Swift 5.2",desc:"Subscripts can now declare default arguments",link:"/hackingwithswift.com/swift/5.2/subscript-default-arguments.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(s,a(e({title:"Lazy filtering order is now reversed | Changes in Swift 5.2",desc:"Lazy filtering order is now reversed",link:"/hackingwithswift.com/swift/5.2/lazy-filtering.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),g(` 
\`\`\`component VPCard
{
  "title": "New and improved diagnostics | Changes in Swift 5.2",
  "desc": "New and improved diagnostics",
  "link": "/hackingwithswift.com/swift/5.2/new-diagnostics.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),n("p",null,[n("a",N,[t(o,{icon:"fas fa-file-zipper"}),i("Download Swift 5.2 playground")])])])])}const T=l(u,[["render",x],["__file","new-diagnostics.html.vue"]]),A=JSON.parse('{"path":"/hackingwithswift.com/swift/5.2/new-diagnostics.html","title":"New and improved diagnostics","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"New and improved diagnostics","description":"Article(s) > New and improved diagnostics","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-5.2"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > New and improved diagnostics"},{"property":"og:description","content":"New and improved diagnostics"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.2/new-diagnostics.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.2/new-diagnostics.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"New and improved diagnostics"}],["meta",{"property":"og:description","content":"Article(s) > New and improved diagnostics"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.2"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"New and improved diagnostics\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"next":"/hackingwithswift.com/swift/5.1/improved-memberwise-initializers.md","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.54,"words":463},"filePathRelative":"hackingwithswift.com/swift/5.2/new-diagnostics.md","excerpt":"\\n"}');export{T as comp,A as data};
