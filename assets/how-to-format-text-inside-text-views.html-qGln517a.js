import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as s,t as d,e as n,n as t,g as e,d as o,f as p,r as c,o as k}from"./app-BgNevrm5.js";const m={},w={id:"frontmatter-title-관련",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-관련"},f=s("nav",{class:"table-of-contents"},[s("ul")],-1),g=s("hr",null,null,-1),v=p(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>Updated in iOS 15</strong></p><p>SwiftUI&#39;s text views are capable of showing dates, arrays, measurements and more, all through their <code>format</code> parameter. However, this is available only in iOS 15, so for iOS 14 and 13 support please see the <code>formatter</code> parameter below.</p><p>If you use the <code>.list()</code> format type with an array of strings, you can get neatly formatted lists such as “Howard, Josie, and Kingsley”. For example, this will print ingredients lists correctly no matter how many items are added:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> ingredients <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span>ingredients<span class="token punctuation">,</span> format<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>type<span class="token punctuation">:</span> <span class="token punctuation">.</span>and<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Add Ingredient&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">let</span> possibles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;Egg&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Sausage&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Bacon&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Spam&quot;</span></span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">                <span class="token keyword">if</span> <span class="token keyword">let</span> newIngredient <span class="token operator">=</span> possibles<span class="token punctuation">.</span><span class="token function">randomElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    ingredients<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>newIngredient<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),b={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-format-text-inside-text-views-1.zip",target:"_blank",rel:"noopener noreferrer"},y=p(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-format-text-inside-text-views-1~dark.png" alt="The words “Spam, Egg, Sausage, and Bacon” above an “” button." tabindex="0" loading="lazy"><figcaption>The words “Spam, Egg, Sausage, and Bacon” above an “<code>[Add Ingredient]</code>” button.</figcaption></figure><p>If you have an array of a numeric type such as integers, you can format that by specifying a member style, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> rolls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">Int</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span>rolls<span class="token punctuation">,</span> format<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">list</span><span class="token punctuation">(</span>memberStyle<span class="token punctuation">:</span> <span class="token punctuation">.</span>number<span class="token punctuation">,</span> type<span class="token punctuation">:</span> <span class="token punctuation">.</span>and<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Roll Dice&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token class-name">Int</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token operator">...</span><span class="token number">6</span><span class="token punctuation">)</span></span>
<span class="line">                rolls<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-format-text-inside-text-views-2.zip",target:"_blank",rel:"noopener noreferrer"},_=p(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-format-text-inside-text-views-2~dark.png" alt="The line “4, 3, 2, and 6” above a “Roll Dice” button." tabindex="0" loading="lazy"><figcaption>The line “4, 3, 2, and 6” above a “Roll Dice” button.</figcaption></figure><p>Or if you&#39;re working with measurements such as distance or weight, the <code>.measurement()</code> format type will automatically adjust your value for display in the user&#39;s locale. For example, if you were storing values in centimeters internally but the user had a US locale on their device, iOS will automatically display a value in feet or inches depending on the size of the value.</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> length <span class="token operator">=</span> <span class="token class-name">Measurement</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token number">225</span><span class="token punctuation">,</span> unit<span class="token punctuation">:</span> <span class="token class-name">UnitLength</span><span class="token punctuation">.</span>centimeters<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span>length<span class="token punctuation">,</span> format<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">measurement</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token punctuation">.</span>wide<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-format-text-inside-text-views-3.zip",target:"_blank",rel:"noopener noreferrer"},q=p(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-format-text-inside-text-views-3~dark.png" alt="The text “7.4 feet”." tabindex="0" loading="lazy"><figcaption>The text “7.4 feet”.</figcaption></figure><p>There&#39;s even a formatter for handling currencies correctly, ensuring that two decimal places are shown and also adding the currency symbol as appropriate:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token number">72.3</span><span class="token punctuation">,</span> format<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">currency</span><span class="token punctuation">(</span>code<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;CAD&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,3),T={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-format-text-inside-text-views-4.zip",target:"_blank",rel:"noopener noreferrer"},H=p(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-format-text-inside-text-views-4~dark.png" alt="The text “CA$72.30”." tabindex="0" loading="lazy"><figcaption>The text “CA$72.30”.</figcaption></figure><p>If you need to support iOS 14 and 13, you can use the <code>formatter</code> parameter instead – it still lets us customize the way data is presented inside the text, but it&#39;s not quite as easy to use.</p><p>For example, this defines a date formatter and uses it to make sure a task date is presented in human-readable form:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">static</span> <span class="token keyword">let</span> taskDateFormat<span class="token punctuation">:</span> <span class="token class-name">DateFormatter</span> <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> formatter <span class="token operator">=</span> <span class="token class-name">DateFormatter</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        formatter<span class="token punctuation">.</span>dateStyle <span class="token operator">=</span> <span class="token punctuation">.</span>long</span>
<span class="line">        <span class="token keyword">return</span> formatter</span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">let</span> dueDate <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>now</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Task due date: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">dueDate<span class="token punctuation">,</span> formatter<span class="token punctuation">:</span> <span class="token keyword">Self</span><span class="token punctuation">.</span>taskDateFormat</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),I={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-format-text-inside-text-views-5.zip",target:"_blank",rel:"noopener noreferrer"},V=s("p",null,"That will display something like “Task due date: February 4 2021”.",-1),D=s("p",null,"The text “Task due date: June 28, 2021”.",-1),j={class:"hint-container details"},z=s("summary",null,"Similar solutions…",-1);function E(l,F){const a=c("VPCard"),i=c("FontIcon");return k(),u("div",null,[s("h1",w,[s("a",h,[s("span",null,d(l.$frontmatter.title)+" 관련",1)])]),n(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,g,n(a,t(e({title:"How to format text inside text views | SwiftUI by Example",desc:"How to format text inside text views",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-format-text-inside-text-views",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,s("blockquote",null,[s("p",null,[s("a",b,[n(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),y,s("blockquote",null,[s("p",null,[s("a",x,[n(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),_,s("blockquote",null,[s("p",null,[s("a",S,[n(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),q,s("blockquote",null,[s("p",null,[s("a",T,[n(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),H,s("blockquote",null,[s("p",null,[s("a",I,[n(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),V,D,s("details",j,[z,n(a,t(e({title:"How to format dates inside text views | SwiftUI by Example",desc:"How to format dates inside text views",link:"/hackingwithswift.com/swiftui/how-to-format-dates-inside-text-views.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to format a TextField for numbers | SwiftUI by Example",desc:"How to format a TextField for numbers",link:"/hackingwithswift.com/swiftui/how-to-format-a-textfield-for-numbers.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to force views to one side inside a stack using Spacer | SwiftUI by Example",desc:"How to force views to one side inside a stack using Spacer",link:"/hackingwithswift.com/swiftui/how-to-force-views-to-one-side-inside-a-stack-using-spacer.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to disable the overlay color for images inside Button and NavigationLink | SwiftUI by Example",desc:"How to disable the overlay color for images inside Button and NavigationLink",link:"/hackingwithswift.com/swiftui/how-to-disable-the-overlay-color-for-images-inside-button-and-navigationlink.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to draw a border inside a view | SwiftUI by Example",desc:"How to draw a border inside a view",link:"/hackingwithswift.com/swiftui/how-to-draw-a-border-inside-a-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const A=r(m,[["render",E],["__file","how-to-format-text-inside-text-views.html.vue"]]),C=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-format-text-inside-text-views.html","title":"How to format text inside text views","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to format text inside text views","description":"Article(s) > How to format text inside text views","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to format text inside text views"},{"property":"og:description","content":"How to format text inside text views"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-format-text-inside-text-views.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-format-text-inside-text-views.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to format text inside text views"}],["meta",{"property":"og:description","content":"Article(s) > How to format text inside text views"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-format-text-inside-text-views-1~dark.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to format text inside text views\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-format-text-inside-text-views-1~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-format-text-inside-text-views-2~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-format-text-inside-text-views-3~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-format-text-inside-text-views-4~dark.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.18,"words":953},"filePathRelative":"hackingwithswift.com/swiftui/how-to-format-text-inside-text-views.md","excerpt":"\\n"}');export{A as comp,C as data};
