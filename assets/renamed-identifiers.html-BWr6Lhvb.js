import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as n,t as u,e as t,n as s,g as a,d as e,w as f,a as h,f as m,r as o,o as g}from"./app-BgNevrm5.js";const k={},w={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},b={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},v=n("nav",{class:"table-of-contents"},[n("ul")],-1),_=n("hr",null,null,-1),y=n("blockquote",null,[n("p",null,"Available from Swift 2.2")],-1),S=n("p",null,[e('Swift 2.1 and earlier used the "screaming snake case" symbols '),n("code",null,"__FILE__"),e(", "),n("code",null,"__LINE__"),e(", "),n("code",null,"__COLUMN__"),e(", and "),n("code",null,"__FUNCTION__"),e(", which automatically get replaced the compiler by the filename, line number, column number and function name where they appear.")],-1),C=n("code",null,"#file",-1),R=n("code",null,"#line",-1),N=n("code",null,"#column",-1),x=n("code",null,"#function",-1),T=m(`<p>Hereâ€™s how the debug identifiers in action from Swift 2.2 and later:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token function-definition function">printGreeting</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">repeat</span> repeatCount<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This is on line </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation"><span class="token literal constant">#line</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> of </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation"><span class="token literal constant">#function</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">let</span> upperName <span class="token operator">=</span> name<span class="token punctuation">.</span>uppercaseString</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">for</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span> <span class="token number">0</span> <span class="token operator">..&lt;</span> repeatCount <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span>upperName<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">printGreeting</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Taylor&quot;</span></span><span class="token punctuation">,</span> <span class="token keyword">repeat</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),I={class:"hint-container details"},V=n("summary",null,"Other changes in Swift 2.2â€¦",-1),A={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-2-1-to-2-2.playground.zip",target:"_blank",rel:"noopener noreferrer"};function F(c,O){const i=o("VPCard"),l=o("RouteLink"),r=o("FontIcon");return g(),d("div",null,[n("h1",w,[n("a",b,[n("span",null,u(c.$frontmatter.title)+" ê´€ë ¨",1)])]),t(i,s(a({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,_,t(i,s(a({title:"Renamed debug identifiers: line, function, file | Changes in Swift 2.2",desc:"Renamed debug identifiers: line, function, file",link:"https://hackingwithswift.com/swift/2.2/renamed-identifiers",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),y,S,n("p",null,[e("From Swift 2.2, those old symbols have been replaced with "),C,e(", "),R,e(", "),N,e(" and "),x,e(", which will be familiar to you if you've already used "),t(l,{to:"/hackingwithswift.com/new-syntax-swift-2-availability-checking.html"},{default:f(()=>[e("Swift 2.0's #available")]),_:1}),e(' to check for iOS features. As the official Swift review says, it also introduced "a convention where # means invoke compiler substitution logic here."')]),T,n("details",I,[V,t(i,s(a({title:"++ and -- are deprecated | Changes in Swift 2.2",desc:"++ and -- are deprecated",link:"/hackingwithswift.com/swift/2.2/increment-decrement.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(i,s(a({title:"Traditional C-style for loops are deprecated | Changes in Swift 2.2",desc:"Traditional C-style for loops are deprecated",link:"/hackingwithswift.com/swift/2.2/c-loops.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(i,s(a({title:"Comparing tuples | Changes in Swift 2.2 ",desc:"Comparing tuples",link:"/hackingwithswift.com/swift/2.2/comparing-tuples.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(i,s(a({title:"Tuple splat syntax is deprecated | Changes in Swift 2.2",desc:"Tuple splat syntax is deprecated",link:"/hackingwithswift.com/swift/2.2/tuple-splat.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(i,s(a({title:"More keywords can be used as argument labels | Changes in Swift 2.2",desc:"More keywords can be used as argument labels",link:"/hackingwithswift.com/swift/2.2/more-keywords.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(i,s(a({title:"Variable parameters have been deprecated | Changes in Swift 2.2",desc:"Variable parameters have been deprecated",link:"/hackingwithswift.com/swift/2.2/variable-parameters.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),h(` 
\`\`\`component VPCard
{
  "title": "Renamed debug identifiers: line, function, file | Changes in Swift 2.2",
  "desc": "Renamed debug identifiers: line, function, file",
  "link": "/hackingwithswift.com/swift/2.2/renamed-identifiers.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),t(i,s(a({title:"Stringified selectors are deprecated | Changes in Swift 2.2",desc:"Stringified selectors are deprecated",link:"/hackingwithswift.com/swift/2.2/stringified-selectors.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(i,s(a({title:"Compile-time Swift version checking | Changes in Swift 2.2",desc:"Compile-time Swift version checking",link:"/hackingwithswift.com/swift/2.2/version-checking.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n("p",null,[n("a",A,[t(r,{icon:"fas fa-file-zipper"}),e("Download Swift 2.2 playground")])])])])}const E=p(k,[["render",F],["__file","renamed-identifiers.html.vue"]]),L=JSON.parse('{"path":"/hackingwithswift.com/swift/2.2/renamed-identifiers.html","title":"Renamed debug identifiers: line, function, file","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Renamed debug identifiers: line, function, file","description":"Article(s) > Renamed debug identifiers: line, function, file","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-2.2"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Renamed debug identifiers: line, function, file"},{"property":"og:description","content":"Renamed debug identifiers: line, function, file"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/2.2/renamed-identifiers.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/2.2/renamed-identifiers.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"Renamed debug identifiers: line, function, file"}],["meta",{"property":"og:description","content":"Article(s) > Renamed debug identifiers: line, function, file"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-2.2"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Renamed debug identifiers: line, function, file\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.85,"words":555},"filePathRelative":"hackingwithswift.com/swift/2.2/renamed-identifiers.md","excerpt":"\\n"}');export{E as comp,L as data};
