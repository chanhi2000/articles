import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as n,t as r,e as s,n as e,g as t,f as u,r as o,o as d}from"./app-BgNevrm5.js";const m={},k={id:"frontmatter-title-관련",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-관련"},v=n("nav",{class:"table-of-contents"},[n("ul")],-1),g=n("hr",null,null,-1),f=u(`<p>You are now within reach of the end of this project, and not a moment too soon, I suspect. You&#39;ll be pleased to know that you&#39;re just two methods away from the end, and neither of them are particularly taxing.</p><p>First is the <code>subtractLife()</code> method, which is called when a penguin falls off the screen without being sliced. It needs to subtract 1 from the <code>lives</code> property that we created what seems like years ago, update the images in the <code>livesImages</code> array so that the correct number are crossed off, then end the game if the player is out of lives.</p><p>To make it a bit clearer that something bad has happened, we&#39;re also going to add playing a sound and animate the life being lost – we&#39;ll set the X and Y scale of the life being lost to 1.3, then animate it back down to 1.0.</p><p>Here&#39;s the code:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token function-definition function">subtractLife</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    lives <span class="token operator">-=</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">playSoundFileNamed</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;wrong.caf&quot;</span></span><span class="token punctuation">,</span> waitForCompletion<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> life<span class="token punctuation">:</span> <span class="token class-name">SKSpriteNode</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> lives <span class="token operator">==</span> <span class="token number">2</span> <span class="token punctuation">{</span></span>
<span class="line">        life <span class="token operator">=</span> livesImages<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> lives <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span></span>
<span class="line">        life <span class="token operator">=</span> livesImages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        life <span class="token operator">=</span> livesImages<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span></span>
<span class="line">        <span class="token function">endGame</span><span class="token punctuation">(</span>triggeredByBomb<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    life<span class="token punctuation">.</span>texture <span class="token operator">=</span> <span class="token class-name">SKTexture</span><span class="token punctuation">(</span>imageNamed<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;sliceLifeGone&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    life<span class="token punctuation">.</span>xScale <span class="token operator">=</span> <span class="token number">1.3</span></span>
<span class="line">    life<span class="token punctuation">.</span>yScale <span class="token operator">=</span> <span class="token number">1.3</span></span>
<span class="line">    life<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">scale</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Note how I&#39;m using <code>SKTexture</code> to modify the contents of a sprite node without having to recreate it, just like in project 14.</p><p>Finally, there&#39;s the <code>endGame()</code> method. I&#39;ve made this accept a parameter that sets whether the game ended because of a bomb, so that we can update the UI appropriately.</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token function-definition function">endGame</span><span class="token punctuation">(</span>triggeredByBomb<span class="token punctuation">:</span> <span class="token class-name">Bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span> isGameEnded <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    isGameEnded <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">    physicsWorld<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    isUserInteractionEnabled <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    bombSoundEffect<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">stop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    bombSoundEffect <span class="token operator">=</span> <span class="token nil constant">nil</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span> triggeredByBomb <span class="token punctuation">{</span></span>
<span class="line">        livesImages<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>texture <span class="token operator">=</span> <span class="token class-name">SKTexture</span><span class="token punctuation">(</span>imageNamed<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;sliceLifeGone&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        livesImages<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>texture <span class="token operator">=</span> <span class="token class-name">SKTexture</span><span class="token punctuation">(</span>imageNamed<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;sliceLifeGone&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        livesImages<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>texture <span class="token operator">=</span> <span class="token class-name">SKTexture</span><span class="token punctuation">(</span>imageNamed<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;sliceLifeGone&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If the game hasn&#39;t already ended, this code stops every object from moving by adjusting the speed of the physics world to be 0. It stops any bomb fuse fizzing, and sets all three lives images to have the same &quot;life gone&quot; graphic. Nothing surprising in there, but you do need to declare <code>isGameEnded</code> as a property for your class, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">var</span> isGameEnded <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Even though the game has ended, some actions can still take place. This should be banned if possible, so add these lines to the start of <code>tossEnemies()</code> and <code>touchesMoved()</code>:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">if</span> isGameEnded <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That&#39;s it, your game is done!</p>`,13);function b(p,w){const a=o("VPCard"),i=o("VidStack");return d(),c("div",null,[n("h1",k,[n("a",h,[n("span",null,r(p.$frontmatter.title)+" 관련",1)])]),s(a,e(t({title:"Hacking with iOS – learn to code iPhone and iPad apps with free Swift tutorials",desc:"Learn Swift coding for iOS with these free tutorials – learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/read/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),v,g,s(a,e(t({title:"Game over, man: SKTexture | Hacking with iOS",desc:"Game over, man: SKTexture",link:"https://hackingwithswift.com/read/23/7/game-over-man-sktexture",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),s(i,{src:"youtube/HqrrsfA0sbA"}),f])}const S=l(m,[["render",b],["__file","07-game-over-man-sktexture.html.vue"]]),_=JSON.parse('{"path":"/hackingwithswift.com/read/23/07-game-over-man-sktexture.html","title":"Game over, man: SKTexture","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Game over, man: SKTexture","description":"Article(s) > Game over, man: SKTexture","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","xcode","appstore","ios"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Game over, man: SKTexture"},{"property":"og:description","content":"Game over, man: SKTexture"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/read/23/07-game-over-man-sktexture.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/read/23/07-game-over-man-sktexture.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Game over, man: SKTexture"}],["meta",{"property":"og:description","content":"Article(s) > Game over, man: SKTexture"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:tag","content":"ios"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Game over, man: SKTexture\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.8,"words":541},"filePathRelative":"hackingwithswift.com/read/23/07-game-over-man-sktexture.md","excerpt":"\\n"}');export{S as comp,_ as data};
