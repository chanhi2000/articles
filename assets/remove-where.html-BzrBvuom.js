import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as n,t as h,e as t,n as a,g as s,d as o,a as m,f as g,r as l,o as u}from"./app-BgNevrm5.js";const d={},f={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},k=n("nav",{class:"table-of-contents"},[n("ul")],-1),v=n("hr",null,null,-1),b=n("blockquote",null,[n("p",null,"Available from Swift 4.2")],-1),y={href:"https://github.com/apple/swift-evolution/blob/master/proposals/0197-remove-where.md",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"apple/swift-evolution",-1),S=n("code",null,"removeAll(where:)",-1),C=g(`<p>For example, if you have a collection of names and want to remove people called ‚ÄúTerry‚Äù, you‚Äôd use this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">var</span> pythons <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;John&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Michael&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Graham&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Terry&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Eric&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Terry&quot;</span></span><span class="token punctuation">]</span></span>
<span class="line">pythons<span class="token punctuation">.</span>removeAll <span class="token punctuation">{</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">hasPrefix</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Terry&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span>pythons<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now, you might very well think that you could accomplish that by using <code>filter()</code> like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line">pythons <span class="token operator">=</span> pythons<span class="token punctuation">.</span>filter <span class="token punctuation">{</span> <span class="token operator">!</span><span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">hasPrefix</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Terry&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,4),q=n("em",null,"don‚Äôt",-1),I=n("em",null,"want",-1),x={href:"https://www.dotconferences.com/2018/01/ben-cohen-extending-the-standard-library",target:"_blank",rel:"noopener noreferrer"},A={class:"hint-container details"},T=n("summary",null,"Other Changes in Swift 4.2",-1),E={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-4-1-to-4-2.playground.zip",target:"_blank",rel:"noopener noreferrer"};function N(c,P){const e=l("VPCard"),i=l("FontIcon");return u(),p("div",null,[n("h1",f,[n("a",w,[n("span",null,h(c.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),t(e,a(s({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k,v,t(e,a(s({title:"In-place collection element removal | Changes in Swift 4.2",desc:"In-place collection element removal",link:"https://hackingwithswift.com/swift/4.2/remove-where",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("p",null,[n("a",y,[o("SE-0197 ("),t(i,{icon:"iconfont icon-github"}),_,o(")")]),o(" introduced a new "),S,o(" method that performs a high-performance, in-place filter for collections. You give it a closure condition to run, and it will strip out all objects that match the condition.")]),C,n("p",null,[o("However, that doesn‚Äôt use memory very efficiently, it specifies what you "),q,o(" want rather than what you "),I,o(", and more advanced in-place solutions come with a range of complexities that are off-putting to novices. Ben Cohen, the author of SE-0197, gave a talk at "),n("a",x,[t(i,{icon:"fas fa-globe"}),o("dotSwift 2018")]),o(" where he discussed the implementation of this proposal in more detail ‚Äì if you‚Äôre keen to learn why it‚Äôs so efficient, you should start there!")]),n("details",A,[T,t(e,a(s({title:"Derived collections of enum cases | Changes in Swift 4.2",desc:"Derived collections of enum cases",link:"/hackingwithswift.com/swift/4.2/caseiterable.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(e,a(s({title:"Warning and error diagnostic directives | Changes in Swift 4.2",desc:"Warning and error diagnostic directives",link:"/hackingwithswift.com/swift/4.2/warning-error.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(e,a(s({title:"Dynamic member look up | Changes in Swift 4.2",desc:"Dynamic member look up",link:"/hackingwithswift.com/swift/4.2/dynamic-member-lookup.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(e,a(s({title:"Enhanced conditional conformances | Changes in Swift 4.2",desc:"Enhanced conditional conformances",link:"/hackingwithswift.com/swift/4.2/conditional-conformance.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(e,a(s({title:"Random number generation and shuffling | Changes in Swift 4.2",desc:"Random number generation and shuffling",link:"/hackingwithswift.com/swift/4.2/random.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(e,a(s({title:"Simpler, more secure hashing | Changes in Swift 4.2",desc:"Simpler, more secure hashing",link:"/hackingwithswift.com/swift/4.2/hashable.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(e,a(s({title:"Checking sequence elements match a condition | Changes in Swift 4.2",desc:"Checking sequence elements match a condition",link:"/hackingwithswift.com/swift/4.2/allsatisfy.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),m(` 
\`\`\`component VPCard
{
  "title": "In-place collection element removal | Changes in Swift 4.2",
  "desc": "In-place collection element removal",
  "link": "/hackingwithswift.com/swift/4.2/remove-where.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),t(e,a(s({title:"Boolean toggling | Changes in Swift 4.2",desc:"Boolean toggling",link:"/hackingwithswift.com/swift/4.2/toggle.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n("p",null,[n("a",E,[t(i,{icon:"fas fa-file-zipper"}),o("Download Swift 4.2 playground")])])])])}const B=r(d,[["render",N],["__file","remove-where.html.vue"]]),D=JSON.parse('{"path":"/hackingwithswift.com/swift/4.2/remove-where.html","title":"In-place collection element removal","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"In-place collection element removal","description":"Article(s) > In-place collection element removal","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-4.2"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > In-place collection element removal"},{"property":"og:description","content":"In-place collection element removal"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/4.2/remove-where.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/4.2/remove-where.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"In-place collection element removal"}],["meta",{"property":"og:description","content":"Article(s) > In-place collection element removal"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-4.2"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"In-place collection element removal\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.97,"words":591},"filePathRelative":"hackingwithswift.com/swift/4.2/remove-where.md","excerpt":"\\n"}');export{B as comp,D as data};
