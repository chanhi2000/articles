import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as t,t as p,e as o,n,g as i,a as e,r as c,o as h}from"./app-BgNevrm5.js";const m={},u={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},g=t("nav",{class:"table-of-contents"},[t("ul")],-1),f=t("hr",null,null,-1),d=t("details",{class:"hint-container details"},[t("summary",null,"Similar solutions‚Ä¶"),e(`
/example-code/language/optional-vs-implicitly-unwrapped-optional-whats-the-difference">Optional vs implicitly unwrapped optional: what‚Äôs the difference? 
/example-code/language/how-to-use-map-with-an-optional-value">How to use map() with an optional value 
/example-code/language/what-is-an-optional-value-in-swift">What is an optional value in Swift? 
/example-code/language/what-is-a-monad">What is a monad? 
/quick-start/swiftui/all-swiftui-property-wrappers-explained-and-compared">All SwiftUI property wrappers explained and compared</a>
`)],-1);function y(l,v){const a=c("VPCard");return h(),s("div",null,[t("h1",u,[t("a",w,[t("span",null,p(l.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),o(a,n(i({title:"Language - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/language/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,f,o(a,n(i({title:"How to use flatMap() with an optional value | Language - free Swift example code",desc:"How to use flatMap() with an optional value",link:"https://hackingwithswift.com/example-code/language/how-to-use-flatmap-with-an-optional-value",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),e(" TODO: ÏûëÏÑ± "),e(' \n\nThe `flatMap()` method of optionals allows you to transform the optional if it has a value, or do nothing if it is empty. This makes for shorter and more expressive code than doing a regular unwrap, and doesn‚Äôt require you to change your data type.\n\nUsing `flatMap()` with optionals is similar to using `map()`, with one important difference: if your transformation closure returns an optional, `flatMap()` will combine that optional with the existing optional, whereas `map()` will keep them both.\n\nHere‚Äôs a practical example so you can see the difference:\n\n```swift\nlet stringNumber: String? = "5"\nlet intNumber = stringNumber.map { Int($0) }\n```\n\nWhen that code runs, `intNumber` will be an `Int??` ‚Äì an optional optional integer. This is because we already have optionality from `stringNumber`, and the `Int` initializer from a string also returns an optional, so `map()` just puts them together.\n\nIn comparison, `flatMap()` acts differently:\n\n```swift\nlet flatMapNumber = stringNumber.flatMap { Int($0) }\n```\n\nThat will return a regular `Int?`, meaning that either the whole thing exists or nothing exists ‚Äì it‚Äôs easier to work with.\n\n'),d])}const x=r(m,[["render",y],["__file","how-to-use-flatmap-with-an-optional-value.html.vue"]]),_=JSON.parse('{"path":"/hackingwithswift.com/example-code/language/how-to-use-flatmap-with-an-optional-value.html","title":"How to use flatMap() with an optional value","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to use flatMap() with an optional value","description":"Article(s) > How to use flatMap() with an optional value","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to use flatMap() with an optional value"},{"property":"og:description","content":"How to use flatMap() with an optional value"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/language/how-to-use-flatmap-with-an-optional-value.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/language/how-to-use-flatmap-with-an-optional-value.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to use flatMap() with an optional value"}],["meta",{"property":"og:description","content":"Article(s) > How to use flatMap() with an optional value"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to use flatMap() with an optional value\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.4,"words":421},"filePathRelative":"hackingwithswift.com/example-code/language/how-to-use-flatmap-with-an-optional-value.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{x as comp,_ as data};
