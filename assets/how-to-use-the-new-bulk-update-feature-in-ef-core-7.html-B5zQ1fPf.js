import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as e,t as d,e as n,n as u,g as h,w as a,f as g,r as o,o as k,d as s}from"./app-BgNevrm5.js";const m={},w={id:"frontmatter-title-관련",tabindex:"-1"},v={class:"header-anchor",href:"#frontmatter-title-관련"},b={class:"table-of-contents"},f=e("hr",null,null,-1),y=g(`<p>In this week&#39;s newsletter, we&#39;re going to explore the new <code>ExecuteUpdate</code> and <code>ExecuteDelete</code> methods that were released with <strong>EF7</strong>.</p><p><code>ExecuteUpdate</code> allows us to write a query and run a bulk update operation on the entities matching that query.</p><p>Similarly, <code>ExecuteDelete</code> allows us to write a query and delete the entities matching that query.</p><p>We can significantly improve performance using the new methods in some scenarios, and I&#39;m going to show you what those scenarios are.</p><p>Let&#39;s dive in.</p><hr><h2 id="updating-and-deleting-entities-before-ef-core-7" tabindex="-1"><a class="header-anchor" href="#updating-and-deleting-entities-before-ef-core-7"><span>Updating And Deleting Entities Before EF Core 7</span></a></h2><p>If you want to update a collection of entities before <strong>EF7</strong>, you need to load the entities into memory using the <code>DatabaseContext</code>.</p><p>The <strong>EF ChangeTracker</strong> will then track any changes made to these entities. When you are ready to commit the changes to the database, you simply call the <code>SaveChanges</code> method.</p><p>Here&#39;s an example where we load a few notifications, and we want to snooze them so they aren&#39;t sent:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line"><span class="token class-name"><span class="token keyword">var</span></span> notifications <span class="token operator">=</span> dbContext</span>
<span class="line">    <span class="token punctuation">.</span>Notifications</span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>n <span class="token operator">=&gt;</span> <span class="token operator">!</span>n<span class="token punctuation">.</span>Snoozed<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">ToList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> notification <span class="token keyword">in</span> notifications<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">{</span></span>
<span class="line">    notification<span class="token punctuation">.</span>Snoozed <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">dbContext<span class="token punctuation">.</span><span class="token function">SaveChanges</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>EF7</strong> will generate the following <strong>SQL</strong> statement to update the records in the database:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">UPDATE</span> <span class="token punctuation">[</span>Notifications<span class="token punctuation">]</span> n</span>
<span class="line"><span class="token keyword">SET</span> n<span class="token punctuation">.</span><span class="token punctuation">[</span>Snoozed<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">TRUE</span></span>
<span class="line"><span class="token keyword">WHERE</span> n<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">@notificationId_1</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">UPDATE</span> <span class="token punctuation">[</span>Notifications<span class="token punctuation">]</span> n</span>
<span class="line"><span class="token keyword">SET</span> n<span class="token punctuation">.</span><span class="token punctuation">[</span>Snoozed<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">TRUE</span></span>
<span class="line"><span class="token keyword">WHERE</span> n<span class="token punctuation">.</span><span class="token punctuation">[</span>Id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">@notificationId_N</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Notice that for every notification we end up with one <strong>SQL UPDATE</strong> statement. This won&#39;t scale well as the number of notifications increases.</p><hr><h2 id="updating-entities-with-executeupdate" tabindex="-1"><a class="header-anchor" href="#updating-entities-with-executeupdate"><span>Updating Entities With ExecuteUpdate</span></a></h2><p>With <strong>EF7</strong>, we now have access to the new <code>ExecuteUdpate</code> method. It also has an asynchronous version - <code>ExecuteUpdateAsync</code>.</p><p>How do you use it?</p><p>You need to write a query that will select the records you want to update, and then call the <code>ExecuteUpdate</code> method on the resulting <code>IQueryable</code>.</p><p>Let&#39;s rewrite the previous example using the new approach:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line">dbContext</span>
<span class="line">    <span class="token punctuation">.</span>Notifications</span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>n <span class="token operator">=&gt;</span> <span class="token operator">!</span>n<span class="token punctuation">.</span>Snoozed<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">ExecuteUpdate</span><span class="token punctuation">(</span>s <span class="token operator">=&gt;</span> s<span class="token punctuation">.</span><span class="token function">SetProperty</span><span class="token punctuation">(</span></span>
<span class="line">        n <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span>Snoozed<span class="token punctuation">,</span></span>
<span class="line">        n <span class="token operator">=&gt;</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the call to <code>ExecuteUpdate</code> we call the <code>SetProperty</code> method to specify which properties we want to update, and what values we want to set. The <code>SetProperty</code> method can be called multiple times, if you need to update more than one property.</p><p>In this case, <strong>EF7</strong> will generate the following <strong>SQL</strong> query:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">UPDATE</span> n</span>
<span class="line"><span class="token keyword">SET</span> n<span class="token punctuation">.</span><span class="token punctuation">[</span>Snoozed<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">TRUE</span></span>
<span class="line"><span class="token keyword">FROM</span> <span class="token punctuation">[</span>Notifications<span class="token punctuation">]</span> <span class="token keyword">AS</span> n</span>
<span class="line"><span class="token keyword">WHERE</span> n<span class="token punctuation">.</span><span class="token punctuation">[</span>Snoozed<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">FALSE</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Notice that this time we only have one <strong>SQL</strong> query being sent to the database. This is a major performance improvement. It can be as much as 10x faster than the old version, from my testing.</p><hr><h2 id="deleting-entities-with-executedelete" tabindex="-1"><a class="header-anchor" href="#deleting-entities-with-executedelete"><span>Deleting Entities With ExecuteDelete</span></a></h2><p>Let&#39;s also see how we can do bulk deletes using the <code>ExecuteDelete</code> and <code>ExecuteDeleteAsync</code> methods.</p><p>Again, you have to write a query that will select the records you want to delete, and then call the <code>ExecuteDelete</code> method on the resulting <code>IQueryable</code>.</p><p>If you want to delete all snoozed notifications:</p><div class="language-csharp line-numbers-mode" data-highlighter="prismjs" data-ext="cs" data-title="cs"><pre><code><span class="line">dbContext</span>
<span class="line">    <span class="token punctuation">.</span>Notifications</span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">Where</span><span class="token punctuation">(</span>n <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span>Snoozed<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">ExecuteDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And <strong>EF7</strong> will generate the following <strong>SQL</strong> query:</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> n</span>
<span class="line"><span class="token keyword">FROM</span> <span class="token punctuation">[</span>Notifications<span class="token punctuation">]</span> <span class="token keyword">AS</span> n</span>
<span class="line"><span class="token keyword">WHERE</span> n<span class="token punctuation">.</span><span class="token punctuation">[</span>Snoozed<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">TRUE</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>I think this will be incredibly useful when you want to delete records in the database based on a specific condition.</p><hr><h2 id="transactions-change-tracking-and-query-filters-with-bulk-methods" tabindex="-1"><a class="header-anchor" href="#transactions-change-tracking-and-query-filters-with-bulk-methods"><span>Transactions, Change Tracking And Query Filters With Bulk Methods</span></a></h2><p>You need to be aware how transactions and change tracking work with the new bulk methods. <code>ExecuteUpdate</code> and <code>ExecuteDelete</code> will immediately go to database, and run the <strong>SQL</strong> query.</p><h3 id="what-does-this-mean-for-transactions" tabindex="-1"><a class="header-anchor" href="#what-does-this-mean-for-transactions"><span>What does this mean for transactions?</span></a></h3><p>If you want to run a bulk method together with other updates applied with <code>SaveChanges</code>, by default they won&#39;t run in the same transaction. You need to open an explicit <strong>transaction</strong> using the <code>DatabaseContext</code> to keep everything consistent.</p><h3 id="what-does-this-mean-for-change-tracking" tabindex="-1"><a class="header-anchor" href="#what-does-this-mean-for-change-tracking"><span>What does this mean for change tracking?</span></a></h3><p><code>ExecuteUpdate</code> and <code>ExecuteDelete</code> run directly on the database, without loading any entities into memory. <strong>EF7</strong> will not track these entities in the <code>ChangeTracker</code>.</p><p>If you have any database interceptors defined, they won&#39;t execute after calling one of the bulk update methods. This also means that if you override <code>SaveChanges</code> to add custom behavior, it won&#39;t be called.</p><h3 id="do-query-filters-still-work" tabindex="-1"><a class="header-anchor" href="#do-query-filters-still-work"><span>Do Query Filters still work?</span></a></h3><p>Yes, <strong>query filters</strong> will be <strong>correctly applied</strong> when calling <code>ExecuteUpdate</code> or <code>ExecuteDelete</code>.</p><hr><h2 id="when-should-you-use-the-new-bulk-methods" tabindex="-1"><a class="header-anchor" href="#when-should-you-use-the-new-bulk-methods"><span>When Should You Use The New Bulk Methods?</span></a></h2><p>I think this is an excellent new addition to <strong>EF7</strong>, and it solves a real problem when you need to run a typical <strong>UPDATE</strong> or <strong>DELETE</strong> query with a <strong>WHERE</strong> statement applied.</p><p>Previously, you had to write raw <strong>SQL</strong> and execute it using something like <strong>Dapper</strong>.</p><p>I will likely use this approach when it applies to my projects.</p>`,49);function E(i,x){const l=o("VPCard"),t=o("router-link"),c=o("SiteInfo");return k(),r("div",null,[e("h1",w,[e("a",v,[e("span",null,d(i.$frontmatter.title)+" 관련",1)])]),n(l,u(h({title:"C# > Article(s)",desc:"Article(s)",link:"/programming/cs/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),e("nav",b,[e("ul",null,[e("li",null,[n(t,{to:"#updating-and-deleting-entities-before-ef-core-7"},{default:a(()=>[s("Updating And Deleting Entities Before EF Core 7")]),_:1})]),e("li",null,[n(t,{to:"#updating-entities-with-executeupdate"},{default:a(()=>[s("Updating Entities With ExecuteUpdate")]),_:1})]),e("li",null,[n(t,{to:"#deleting-entities-with-executedelete"},{default:a(()=>[s("Deleting Entities With ExecuteDelete")]),_:1})]),e("li",null,[n(t,{to:"#transactions-change-tracking-and-query-filters-with-bulk-methods"},{default:a(()=>[s("Transactions, Change Tracking And Query Filters With Bulk Methods")]),_:1}),e("ul",null,[e("li",null,[n(t,{to:"#what-does-this-mean-for-transactions"},{default:a(()=>[s("What does this mean for transactions?")]),_:1})]),e("li",null,[n(t,{to:"#what-does-this-mean-for-change-tracking"},{default:a(()=>[s("What does this mean for change tracking?")]),_:1})]),e("li",null,[n(t,{to:"#do-query-filters-still-work"},{default:a(()=>[s("Do Query Filters still work?")]),_:1})])])]),e("li",null,[n(t,{to:"#when-should-you-use-the-new-bulk-methods"},{default:a(()=>[s("When Should You Use The New Bulk Methods?")]),_:1})])])]),f,n(c,{name:"How To Use The New Bulk Update Feature In EF Core 7",desc:"In this week's newsletter, we're going to explore the new ExecuteUpdate and ExecuteDelete methods that were released with EF7. ExecuteUpdate allows us to write a query and run a bulk update operation on the entities matching that query. Similarly, ExecuteDelete allows us to write a query and delete the entities matching that query. We can significantly improve performance using the new methods in some scenarios, and I'm going to show you what those scenarios are.",url:"https://milanjovanovic.tech/blog/how-to-use-the-new-bulk-update-feature-in-ef-core-7/",logo:"https://milanjovanovic.tech/profile_favicon.png",preview:"https://milanjovanovic.tech/blog-covers/mnw_013.png"}),y])}const _=p(m,[["render",E],["__file","how-to-use-the-new-bulk-update-feature-in-ef-core-7.html.vue"]]),F=JSON.parse('{"path":"/milanjovanovic.tech/how-to-use-the-new-bulk-update-feature-in-ef-core-7.html","title":"How To Use The New Bulk Update Feature In EF Core 7","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How To Use The New Bulk Update Feature In EF Core 7","description":"Article(s) > How To Use The New Bulk Update Feature In EF Core 7","icon":"iconfont icon-csharp","category":["C#","DotNet","Article(s)"],"tag":["blog","milanjovanovic.tech","cs","c#","csharp","dotnet"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How To Use The New Bulk Update Feature In EF Core 7"},{"property":"og:description","content":"How To Use The New Bulk Update Feature In EF Core 7"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/milanjovanovic.tech/how-to-use-the-new-bulk-update-feature-in-ef-core-7.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/milanjovanovic.tech/how-to-use-the-new-bulk-update-feature-in-ef-core-7.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How To Use The New Bulk Update Feature In EF Core 7"}],["meta",{"property":"og:description","content":"Article(s) > How To Use The New Bulk Update Feature In EF Core 7"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://milanjovanovic.tech/blog-covers/mnw_013.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://milanjovanovic.tech/blog-covers/mnw_013.png"}],["meta",{"name":"twitter:image:alt","content":"How To Use The New Bulk Update Feature In EF Core 7"}],["meta",{"property":"article:author","content":"Milan Jovanović"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"milanjovanovic.tech"}],["meta",{"property":"article:tag","content":"cs"}],["meta",{"property":"article:tag","content":"c#"}],["meta",{"property":"article:tag","content":"csharp"}],["meta",{"property":"article:tag","content":"dotnet"}],["meta",{"property":"article:published_time","content":"2022-11-26T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How To Use The New Bulk Update Feature In EF Core 7\\",\\"image\\":[\\"https://milanjovanovic.tech/blog-covers/mnw_013.png\\"],\\"datePublished\\":\\"2022-11-26T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Milan Jovanović\\"}]}"]],"prev":"/programming/cs/articles/README.md","date":"2022-11-26T00:00:00.000Z","isOriginal":false,"author":"Milan Jovanović","cover":"https://milanjovanovic.tech/blog-covers/mnw_013.png"},"headers":[{"level":2,"title":"Updating And Deleting Entities Before EF Core 7","slug":"updating-and-deleting-entities-before-ef-core-7","link":"#updating-and-deleting-entities-before-ef-core-7","children":[]},{"level":2,"title":"Updating Entities With ExecuteUpdate","slug":"updating-entities-with-executeupdate","link":"#updating-entities-with-executeupdate","children":[]},{"level":2,"title":"Deleting Entities With ExecuteDelete","slug":"deleting-entities-with-executedelete","link":"#deleting-entities-with-executedelete","children":[]},{"level":2,"title":"Transactions, Change Tracking And Query Filters With Bulk Methods","slug":"transactions-change-tracking-and-query-filters-with-bulk-methods","link":"#transactions-change-tracking-and-query-filters-with-bulk-methods","children":[{"level":3,"title":"What does this mean for transactions?","slug":"what-does-this-mean-for-transactions","link":"#what-does-this-mean-for-transactions","children":[]},{"level":3,"title":"What does this mean for change tracking?","slug":"what-does-this-mean-for-change-tracking","link":"#what-does-this-mean-for-change-tracking","children":[]},{"level":3,"title":"Do Query Filters still work?","slug":"do-query-filters-still-work","link":"#do-query-filters-still-work","children":[]}]},{"level":2,"title":"When Should You Use The New Bulk Methods?","slug":"when-should-you-use-the-new-bulk-methods","link":"#when-should-you-use-the-new-bulk-methods","children":[]}],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.38,"words":1013},"filePathRelative":"milanjovanovic.tech/how-to-use-the-new-bulk-update-feature-in-ef-core-7.md","localizedDate":"2022년 11월 26일","excerpt":"\\n","copyright":{"author":"Milan Jovanović"}}');export{_ as comp,F as data};
