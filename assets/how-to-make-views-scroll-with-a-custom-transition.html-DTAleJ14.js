import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as n,t as d,e as s,n as t,g as e,d as i,f as c,r as p,o as k}from"./app-BgNevrm5.js";const h={},m={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},f=n("nav",{class:"table-of-contents"},[n("ul")],-1),v=n("hr",null,null,-1),g=c(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in iOS 17</strong></p><p>SwiftUI&#39;s <code>ScrollView</code> places all its children in a smooth-scrolling vertical or horizontal container, but if we attach the <code>scrollTransition()</code> modifier to child views then we&#39;re able to customize how views are transitioned on to and off from the screen.</p><p>This modifier must be passed a closure that takes at least two parameters: some content to control (one child view inside the scrolling area), plus a scroll transition phase. The phase might be one of three values:</p><ul><li>The <code>.identity</code> phase, which means the view is visible on the screen.</li><li>The <code>.topLeading</code> phase, where the views is about to become visible from either the top or leading edge depending on your scroll view direction.</li><li>The <code>.bottomTrailing</code> phase, which is the bottom/trailing counterpart to <code>.topLeading</code>.</li></ul><p>For example, we could place a series of rounded rectangles in a vertical scroll view, making them fade in and out as they near the edges of the screen:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">ScrollView</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> i <span class="token keyword">in</span></span>
<span class="line">        <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span>scrollTransition <span class="token punctuation">{</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span></span>
<span class="line">                content</span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>isIdentity <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>isIdentity <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0.75</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> phase<span class="token punctuation">.</span>isIdentity <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),b={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-make-views-scroll-with-a-custom-transition-1.zip",target:"_blank",rel:"noopener noreferrer"},y=c(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-make-views-scroll-with-a-custom-transition-1~dark@2x.gif" alt="Scrolling views that fade in and out as they scroll into and off the screen." tabindex="0" loading="lazy"><figcaption>Scrolling views that fade in and out as they scroll into and off the screen.</figcaption></figure><p>For additional control, you can specify how much of the view needs to be visible before it&#39;s displayed or removed. For example, we could say that we want our scrolling views to be inserted into our view hierarchy only when they are at least 90% visible:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">ScrollView</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> i <span class="token keyword">in</span></span>
<span class="line">        <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">scrollTransition</span><span class="token punctuation">(</span><span class="token punctuation">.</span>animated<span class="token punctuation">.</span><span class="token function">threshold</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">visible</span><span class="token punctuation">(</span><span class="token number">0.9</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span></span>
<span class="line">                content</span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>isIdentity <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>isIdentity <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0.75</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> phase<span class="token punctuation">.</span>isIdentity <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),_={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-make-views-scroll-with-a-custom-transition-2.zip",target:"_blank",rel:"noopener noreferrer"},S=c(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-make-views-scroll-with-a-custom-transition-2~dark@2x.gif" alt="Scrolling views that fade in and out as they scroll into and off the screen." tabindex="0" loading="lazy"><figcaption>Scrolling views that fade in and out as they scroll into and off the screen.</figcaption></figure><p>If you need <em>very</em> precise control over the effects that are applied, read the <code>value</code> of the transition phase. This will be -1 for views in the top leading phase, 1 for views in the bottom trailing phase, and 0 for all other views.</p><p>For example, this gently modifies the hue of each scrolling shape by combining <code>phase.value</code> with the <code>hueRotation()</code> modifier:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">ScrollView</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">..&lt;</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> i <span class="token keyword">in</span></span>
<span class="line">        <span class="token class-name">RoundedRectangle</span><span class="token punctuation">(</span>cornerRadius<span class="token punctuation">:</span> <span class="token number">25</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>blue<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">80</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">shadow</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span>scrollTransition <span class="token punctuation">{</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span></span>
<span class="line">                content</span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">hueRotation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span><span class="token number">45</span> <span class="token operator">*</span> phase<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">.</span>horizontal<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-make-views-scroll-with-a-custom-transition-3.zip",target:"_blank",rel:"noopener noreferrer"},H=n("figure",null,[n("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-make-views-scroll-with-a-custom-transition-3~dark@2x.gif",alt:"Scrolling views that change color at the screen edge.",tabindex:"0",loading:"lazy"}),n("figcaption",null,"Scrolling views that change color at the screen edge.")],-1),R={class:"hint-container details"},I=n("summary",null,"Similar solutions…",-1);function V(l,z){const a=p("VPCard"),o=p("FontIcon");return k(),u("div",null,[n("h1",m,[n("a",w,[n("span",null,d(l.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,v,s(a,t(e({title:"How to make views scroll with a custom transition | SwiftUI by Example",desc:"How to make views scroll with a custom transition",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-make-views-scroll-with-a-custom-transition",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),g,n("blockquote",null,[n("p",null,[n("a",b,[s(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),y,n("blockquote",null,[n("p",null,[n("a",_,[s(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),S,n("blockquote",null,[n("p",null,[n("a",x,[s(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),H,n("details",R,[I,s(a,t(e({title:"How to create a custom transition | SwiftUI by Example",desc:"How to create a custom transition",link:"/hackingwithswift.com/swiftui/how-to-create-a-custom-transition.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to add and remove views with a transition | SwiftUI by Example",desc:"How to add and remove views with a transition",link:"/hackingwithswift.com/swiftui/how-to-add-and-remove-views-with-a-transition.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to make a scroll view move to a location using ScrollViewReader | SwiftUI by Example",desc:"How to make a scroll view move to a location using ScrollViewReader",link:"/hackingwithswift.com/swiftui/how-to-make-a-scroll-view-move-to-a-location-using-scrollviewreader.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to indent the content or scroll indicators in a ScrollView | SwiftUI by Example",desc:"How to indent the content or scroll indicators in a ScrollView",link:"/hackingwithswift.com/swiftui/how-to-indent-the-content-or-scroll-indicators-in-a-scrollview.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to flash the scroll bar indicators of a ScrollView or List | SwiftUI by Example",desc:"How to flash the scroll bar indicators of a ScrollView or List",link:"/hackingwithswift.com/swiftui/how-to-flash-the-scroll-bar-indicators-of-a-scrollview-or-list.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const q=r(h,[["render",V],["__file","how-to-make-views-scroll-with-a-custom-transition.html.vue"]]),j=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-make-views-scroll-with-a-custom-transition.html","title":"How to make views scroll with a custom transition","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to make views scroll with a custom transition","description":"Article(s) > How to make views scroll with a custom transition","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to make views scroll with a custom transition"},{"property":"og:description","content":"How to make views scroll with a custom transition"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-make-views-scroll-with-a-custom-transition.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-make-views-scroll-with-a-custom-transition.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to make views scroll with a custom transition"}],["meta",{"property":"og:description","content":"Article(s) > How to make views scroll with a custom transition"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-make-views-scroll-with-a-custom-transition-1~dark@2x.gif"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to make views scroll with a custom transition\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-make-views-scroll-with-a-custom-transition-1~dark@2x.gif\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-make-views-scroll-with-a-custom-transition-2~dark@2x.gif\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-make-views-scroll-with-a-custom-transition-3~dark@2x.gif\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.04,"words":913},"filePathRelative":"hackingwithswift.com/swiftui/how-to-make-views-scroll-with-a-custom-transition.md","excerpt":"\\n"}');export{q as comp,j as data};
