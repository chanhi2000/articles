import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,t as u,e as s,n as t,g as e,d,f as o,r as i,o as m}from"./app-BgNevrm5.js";const g={},h={id:"frontmatter-title-관련",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-관련"},f=n("nav",{class:"table-of-contents"},[n("ul")],-1),w=n("hr",null,null,-1),b=o(`<blockquote><p>Updated for Xcode 16</p></blockquote><p><strong>Updated for iOS 15</strong></p><p>SwiftUI&#39;s forms work as containers, just like <code>HStack</code> and <code>VStack</code>, which means you can add other views inside them as needed. However, they automatically adapt the behavior and styling of some controls so they fit better in the form environment.</p><p>For example, this creates a form with a toggle, a segmented control, and a button:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> enableLogging <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedColor <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Red&quot;</span></span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> colors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;Red&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Green&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Blue&quot;</span></span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Form</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Select a color&quot;</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $selectedColor<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>colors<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token short-argument">$0</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>segmented<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Enable Logging&quot;</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> $enableLogging<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Save changes&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// activate theme!</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),v={href:"https://hackingwithswift.com/files/projects/swiftui/basic-form-design-1.zip",target:"_blank",rel:"noopener noreferrer"},y=o('<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/basic-form-design-1~dark@2x.png" alt="An inset-list style form with a segmented picker offering Red, Green, and Blue, an “Enable Logging” toggle, as well as a blue-text “Save Changes” button." tabindex="0" loading="lazy"><figcaption>An inset-list style form with a segmented picker offering Red, Green, and Blue, an “Enable Logging” toggle, as well as a blue-text “Save Changes” button.</figcaption></figure><div class="hint-container important"><p class="hint-container-title">Important</p><p>If you&#39;re using Xcode 12 you need to use <code>SegmentedPickerStyle()</code> rather than <code>.segmented</code>.</p></div><p>When that code is run you&#39;ll see two things that are fundamental to the behavior of forms:</p><ul><li>On iOS the form automatically adopts the style of a grouped list, so users see a scrolling selection of options.</li><li>The button has adapted itself to look like an actionable list row – it&#39;s left-aligned and in blue.</li></ul><p>You can have as many rows in your form as you need, but remember to use <code>Group</code> if you need more than 10.</p>',5),_={class:"hint-container details"},x=n("summary",null,"Similar solutions…",-1);function S(c,q){const a=i("VPCard"),l=i("FontIcon");return m(),r("div",null,[n("h1",h,[n("a",k,[n("span",null,u(c.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,w,s(a,t(e({title:"Basic form design | SwiftUI by Example",desc:"Basic form design",link:"https://hackingwithswift.com/quick-start/swiftui/basic-form-design",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("blockquote",null,[n("p",null,[n("a",v,[s(l,{icon:"fas fa-file-zipper"}),d("Download this as an Xcode project")])])]),y,n("details",_,[x,s(a,t(e({title:"How to align form text and controls neatly with LabeledContent | SwiftUI by Example",desc:"How to align form text and controls neatly with LabeledContent",link:"/hackingwithswift.com/swiftui/how-to-align-form-text-and-controls-neatly-with-labeledcontent.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Showing and hiding form rows | SwiftUI by Example",desc:"Showing and hiding form rows",link:"/hackingwithswift.com/swiftui/showing-and-hiding-form-rows.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to fix a Form Picker or a NavigationLink that isn't tappable | SwiftUI by Example",desc:"How to fix a Form Picker or a NavigationLink that isn't tappable",link:"/hackingwithswift.com/swiftui/how-to-fix-a-form-picker-or-a-navigationlink-that-isnt-tappable.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"SwiftUI by Example - What's in the basic template?",desc:"What's in the basic template?",link:"/hackingwithswift.com/swiftui/whats-in-the-basic-template.html",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to create basic animations | SwiftUI by Example",desc:"How to create basic animations",link:"/hackingwithswift.com/swiftui/how-to-create-basic-animations.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const I=p(g,[["render",S],["__file","basic-form-design.html.vue"]]),U=JSON.parse('{"path":"/hackingwithswift.com/swiftui/basic-form-design.html","title":"Basic form design","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Basic form design","description":"Article(s) > Basic form design","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Basic form design"},{"property":"og:description","content":"Basic form design"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/basic-form-design.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/basic-form-design.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Basic form design"}],["meta",{"property":"og:description","content":"Article(s) > Basic form design"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/basic-form-design-1~dark@2x.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2021-09-03T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Basic form design\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/basic-form-design-1~dark@2x.png\\"],\\"datePublished\\":\\"2021-09-03T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2021-09-03T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.92,"words":575},"filePathRelative":"hackingwithswift.com/swiftui/basic-form-design.md","localizedDate":"2021년 9월 3일","excerpt":"\\n"}');export{I as comp,U as data};
