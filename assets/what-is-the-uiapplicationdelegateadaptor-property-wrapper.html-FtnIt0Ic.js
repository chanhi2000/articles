import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as a,t as c,e as s,n as e,g as n,f as l,r,o as d}from"./app-BgNevrm5.js";const u={},h={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},w=a("nav",{class:"table-of-contents"},[a("ul")],-1),g=a("hr",null,null,-1),k=l(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>If you need to get access to <code>AppDelegate</code> functionality in SwiftUI, you should create a class that inherits from <code>NSObject</code> and <code>UIApplicationDelegate</code>, and give it any functionality you want, such as this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">AppDelegate</span><span class="token punctuation">:</span> <span class="token class-name">NSObject</span><span class="token punctuation">,</span> <span class="token class-name">UIApplicationDelegate</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// add app delegate methods here</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For example, if you wanted to implement the old <code>didFinishLaunchingWithOptions</code> method, you might use this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">AppDelegate</span><span class="token punctuation">:</span> <span class="token class-name">NSObject</span><span class="token punctuation">,</span> <span class="token class-name">UIApplicationDelegate</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">application</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> application<span class="token punctuation">:</span> <span class="token class-name">UIApplication</span><span class="token punctuation">,</span> didFinishLaunchingWithOptions launchOptions<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">UIApplication</span><span class="token punctuation">.</span><span class="token class-name">LaunchOptionsKey</span> <span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token punctuation">]</span><span class="token operator">?</span> <span class="token operator">=</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Bool</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Your code here&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">true</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Once you have that, use the <code>UIApplicationDelegateAdaptor</code> property wrapper in your main <code>App</code> so that SwiftUI knows to create and manage your app delegate class:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">NewIn14App</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@UIApplicationDelegateAdaptor</span><span class="token punctuation">(</span><span class="token class-name">AppDelegate</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token keyword">var</span> appDelegate</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">WindowGroup</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),f={class:"hint-container details"},y=a("summary",null,"Similar solutionsâ€¦",-1);function b(p,v){const t=r("VPCard");return d(),o("div",null,[a("h1",h,[a("a",m,[a("span",null,c(p.$frontmatter.title)+" ê´€ë ¨",1)])]),s(t,e(n({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,g,s(t,e(n({title:"What is the @UIApplicationDelegateAdaptor property wrapper? | SwiftUI by Example",desc:"What is the @UIApplicationDelegateAdaptor property wrapper?",link:"https://hackingwithswift.com/quick-start/swiftui/what-is-the-uiapplicationdelegateadaptor-property-wrapper",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k,a("details",f,[y,s(t,e(n({title:"What is the @GestureState property wrapper? | SwiftUI by Example",desc:"What is the @GestureState property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-gesturestate-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,e(n({title:"What is the @Published property wrapper? | SwiftUI by Example",desc:"What is the @Published property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-published-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,e(n({title:"What is the @ScaledMetric property wrapper? | SwiftUI by Example",desc:"What is the @ScaledMetric property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-scaledmetric-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,e(n({title:"What is the @ObservedObject property wrapper? | SwiftUI by Example",desc:"What is the @ObservedObject property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-observedobject-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,e(n({title:"What is the @AppStorage property wrapper? | SwiftUI by Example",desc:"What is the @AppStorage property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-appstorage-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const U=i(u,[["render",b],["__file","what-is-the-uiapplicationdelegateadaptor-property-wrapper.html.vue"]]),_=JSON.parse('{"path":"/hackingwithswift.com/swiftui/what-is-the-uiapplicationdelegateadaptor-property-wrapper.html","title":"What is the @UIApplicationDelegateAdaptor property wrapper?","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"What is the @UIApplicationDelegateAdaptor property wrapper?","description":"Article(s) > What is the @UIApplicationDelegateAdaptor property wrapper?","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > What is the @UIApplicationDelegateAdaptor property wrapper?"},{"property":"og:description","content":"What is the @UIApplicationDelegateAdaptor property wrapper?"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/what-is-the-uiapplicationdelegateadaptor-property-wrapper.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/what-is-the-uiapplicationdelegateadaptor-property-wrapper.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"What is the @UIApplicationDelegateAdaptor property wrapper?"}],["meta",{"property":"og:description","content":"Article(s) > What is the @UIApplicationDelegateAdaptor property wrapper?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"What is the @UIApplicationDelegateAdaptor property wrapper?\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"next":"/hackingwithswift.com/swiftui/common-swiftui-errors-and-how-to-fix-them.md"},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.46,"words":437},"filePathRelative":"hackingwithswift.com/swiftui/what-is-the-uiapplicationdelegateadaptor-property-wrapper.md","excerpt":"\\n"}');export{U as comp,_ as data};
