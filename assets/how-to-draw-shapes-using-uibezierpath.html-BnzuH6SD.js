import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as t,t as h,e as i,n as o,g as s,a as e,r as l,o as p}from"./app-BgNevrm5.js";const d={},u={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},m=t("nav",{class:"table-of-contents"},[t("ul")],-1),g=t("hr",null,null,-1),f=t("blockquote",null,[t("p",null,"Available from iOS 3.2")],-1),y=t("details",{class:"hint-container details"},[t("summary",null,"Similar solutions‚Ä¶"),e(`
/quick-start/swiftui/how-to-use-uibezierpath-and-cgpath-in-swiftui">How to use UIBezierPath and CGPath in SwiftUI 
/quick-start/swiftui/how-to-combine-shapes-to-create-new-shapes">How to combine shapes to create new shapes 
/example-code/calayer/how-to-draw-shapes-using-cashapelayer">How to draw shapes using CAShapeLayer 
/quick-start/swiftui/how-to-fill-and-stroke-shapes-at-the-same-time">How to fill and stroke shapes at the same time 
/quick-start/swiftui/swiftuis-built-in-shapes">SwiftUI‚Äôs built-in shapes</a>
`)],-1);function k(r,b){const a=l("VPCard");return p(),c("div",null,[t("h1",u,[t("a",w,[t("span",null,h(r.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),i(a,o(s({title:"UIKit - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/uikit/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),m,g,i(a,o(s({title:"How to draw shapes using UIBezierPath | UIKit - free Swift example code",desc:"How to draw shapes using UIBezierPath",link:"https://hackingwithswift.com/example-code/uikit/how-to-draw-shapes-using-uibezierpath",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,e(" TODO: ÏûëÏÑ± "),e("\n`UIBezierPath` is a simple and efficient class for drawing shapes using Swift, which you can then put into `CAShapeLayer`, `SKShapeNode`, or other places. It comes with various shapes built in, so you can write code like this to create a rounded rectangle or a circle:\n\n```swift\nlet rect = CGRect(x: 0, y: 0, width: 256, height: 256)\nlet roundedRect = UIBezierPath(roundedRect: rect, cornerRadius: 50)\nlet circle = UIBezierPath(ovalIn: rect)\n```\n\nYou can also create custom shapes by moving a pen to a starting position then adding lines:\n\n```swift\nlet freeform = UIBezierPath()\nfreeform.move(to: .zero)\nfreeform.addLine(to: CGPoint(x: 50, y: 50))\nfreeform.addLine(to: CGPoint(x: 50, y: 150))\nfreeform.addLine(to: CGPoint(x: 150, y: 50))\nfreeform.addLine(to: .zero)\n```\n\nIf your end result needs a `CGPath`, you can get one by accessing the `cgPath` property of your `UIBezierPath`.\n\n"),y])}const _=n(d,[["render",k],["__file","how-to-draw-shapes-using-uibezierpath.html.vue"]]),I=JSON.parse('{"path":"/hackingwithswift.com/example-code/uikit/how-to-draw-shapes-using-uibezierpath.html","title":"How to draw shapes using UIBezierPath","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to draw shapes using UIBezierPath","description":"Article(s) > How to draw shapes using UIBezierPath","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-3.2","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to draw shapes using UIBezierPath"},{"property":"og:description","content":"How to draw shapes using UIBezierPath"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uikit/how-to-draw-shapes-using-uibezierpath.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uikit/how-to-draw-shapes-using-uibezierpath.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to draw shapes using UIBezierPath"}],["meta",{"property":"og:description","content":"Article(s) > How to draw shapes using UIBezierPath"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-3.2"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to draw shapes using UIBezierPath\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.26,"words":378},"filePathRelative":"hackingwithswift.com/example-code/uikit/how-to-draw-shapes-using-uibezierpath.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{_ as comp,I as data};
