import{_ as h}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as e,t as u,e as t,n as s,g as a,d as o,f as r,r as c,o as w}from"./app-BgNevrm5.js";const v={},m={id:"frontmatter-title-관련",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-관련"},k=e("nav",{class:"table-of-contents"},[e("ul")],-1),f=e("hr",null,null,-1),b=r(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>In SwiftUI, any macOS app or any iPadOS app where a mouse is connected can detect when the user is hovering their pointer over a view, and respond to it appropriately.</p><p>There are two modifiers you&#39;ll want to use: <code>onHover()</code>, and <code>hoverEffect()</code>. The first of these allows you to track whether the pointer is currently hovering over the view, and is passed a Boolean reflecting that state. For example, this will color some text red or green depending on whether the pointer is hovering over it or not:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> overText <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, World!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span>overText <span class="token operator">?</span> <span class="token punctuation">.</span>green <span class="token punctuation">:</span> <span class="token punctuation">.</span>red<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span>onHover <span class="token punctuation">{</span> over <span class="token keyword">in</span></span>
<span class="line">                overText <span class="token operator">=</span> over</span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-detect-the-user-hovering-over-a-view-1.zip",target:"_blank",rel:"noopener noreferrer"},_=r(`<p>The <code>hoverEffect()</code> modifier allows you to choose one of three ways the system can highlight the view when a hover happens: <code>.highlight</code> transforms the pointer into the shape of the view while creating a gentle directional effect, <code>.lift</code> transforms the pointer into the shape of the view while scaling up the view and placing a soft shadow behind it, and <code>.automatic</code> selects whichever highlight effect it thinks is most appropriate.</p><p>Note that <code>.automatic</code> is the default if you just apply the <code>hoverEffect()</code> modifier without any parameters, but it <em>isn&#39;t</em> just selecting between <code>.highlight</code> and <code>.lift</code> – it&#39;s quite a different effect, and won&#39;t transform the pointer to match the shape of your view.</p><p>To try it out, here&#39;s some code that places a tappable text label on the screen, giving it a <code>.lift</code> hover effect to make it clear that it&#39;s tappable:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Tap me!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">hoverEffect</span><span class="token punctuation">(</span><span class="token punctuation">.</span>lift<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Text tapped&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-detect-the-user-hovering-over-a-view-2.zip",target:"_blank",rel:"noopener noreferrer"},H={class:"hint-container tip"},S=e("p",{class:"hint-container-title"},"Tips",-1),T=e("code",null,"[Input]",-1),V=e("code",null,"[Send Cursor to Device]",-1),q={class:"hint-container details"},E=e("summary",null,"Similar solutions…",-1);function I(l,U){const n=c("VPCard"),i=c("FontIcon"),p=c("VidStack");return w(),d("div",null,[e("h1",m,[e("a",g,[e("span",null,u(l.$frontmatter.title)+" 관련",1)])]),t(n,s(a({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),k,f,t(n,s(a({title:"How to detect the user hovering over a view | SwiftUI by Example",desc:"How to detect the user hovering over a view",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-detect-the-user-hovering-over-a-view",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,e("blockquote",null,[e("p",null,[e("a",y,[t(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),t(p,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-detect-the-user-hovering-over-a-view-1~dark.mp4"}),_,e("blockquote",null,[e("p",null,[e("a",x,[t(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),t(p,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-detect-the-user-hovering-over-a-view-2~dark.mp4"}),e("div",H,[S,e("p",null,[o("To try this out on the iPadOS simulator, go to the I/O menu and choose "),t(i,{icon:"iconfont icon-select"}),T,o(" > "),V,o(".")])]),e("details",q,[E,t(n,s(a({title:"How to detect the location of a tap inside a view | SwiftUI by Example",desc:"How to detect the location of a tap inside a view",link:"/hackingwithswift.com/swiftui/how-to-detect-the-location-of-a-tap-inside-a-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,s(a({title:"How to detect shake gestures | SwiftUI by Example",desc:"How to detect shake gestures",link:"/hackingwithswift.com/swiftui/how-to-detect-shake-gestures.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,s(a({title:"How to detect device rotation | SwiftUI by Example",desc:"How to detect device rotation",link:"/hackingwithswift.com/swiftui/how-to-detect-device-rotation.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,s(a({title:"How to detect and respond to key press events | SwiftUI by Example",desc:"How to detect and respond to key press events",link:"/hackingwithswift.com/swiftui/how-to-detect-and-respond-to-key-press-events.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,s(a({title:"How to detect when your app moves to the background or foreground with scenePhase | SwiftUI by Example",desc:"How to detect when your app moves to the background or foreground with scenePhase",link:"/hackingwithswift.com/swiftui/how-to-detect-when-your-app-moves-to-the-background-or-foreground-with-scenephase.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const A=h(v,[["render",I],["__file","how-to-detect-the-user-hovering-over-a-view.html.vue"]]),B=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-detect-the-user-hovering-over-a-view.html","title":"How to detect the user hovering over a view","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to detect the user hovering over a view","description":"Article(s) > How to detect the user hovering over a view","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to detect the user hovering over a view"},{"property":"og:description","content":"How to detect the user hovering over a view"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-detect-the-user-hovering-over-a-view.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-detect-the-user-hovering-over-a-view.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to detect the user hovering over a view"}],["meta",{"property":"og:description","content":"Article(s) > How to detect the user hovering over a view"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to detect the user hovering over a view\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.54,"words":763},"filePathRelative":"hackingwithswift.com/swiftui/how-to-detect-the-user-hovering-over-a-view.md","excerpt":"\\n"}');export{A as comp,B as data};
