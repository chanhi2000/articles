import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as n,t as w,e as a,n as t,g as e,d as i,f as p,a as k,r as o,o as v}from"./app-BgNevrm5.js";const h={},m={id:"frontmatter-title-관련",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-관련"},f=n("nav",{class:"table-of-contents"},[n("ul")],-1),b=n("hr",null,null,-1),y=p(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI lets us push any view onto a <code>NavigationStack</code> by using <code>NavigationLink</code>. In its simplest form you can provide this with a string for its title and a destination view as a trailing closure, and <code>NavigationStack</code> will care of pushing the new view on the stack for us along with animation.</p><p>For example, this creates a simple <code>DetailView</code> struct, then presents it from a <code>NavigationStack</code>:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">DetailView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This is the detail view&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">NavigationLink</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Show Detail View&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">DetailView</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Navigation&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),_={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-push-a-new-view-onto-a-navigationstack-1.zip",target:"_blank",rel:"noopener noreferrer"},S=p(`<p>If you need more advanced control over the label, pass it as a secondary trailing closure. For example, this uses a <code>Label</code> view rather than a simple string:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">DetailView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This is the detail view&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">NavigationLink</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">DetailView</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span> label<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Show Detail View&quot;</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;globe&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Navigation&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),N={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-push-a-new-view-onto-a-navigationstack-2.zip",target:"_blank",rel:"noopener noreferrer"},V=n("p",null,[i("SwiftUI will automatically style your links as buttons so users know they are interactive. You can disable this behavior by applying "),n("code",null,".buttonStyle(.plain)"),i(" to "),n("code",null,"NavigationLink"),i(".")],-1),q={class:"hint-container details"},x=n("summary",null,"Similar solutions…",-1),H=n("p",null,[i("How to push a new view onto a NavigationView "),k(" add ")],-1);function I(l,U){const s=o("VPCard"),c=o("FontIcon"),u=o("VidStack");return v(),d("div",null,[n("h1",m,[n("a",g,[n("span",null,w(l.$frontmatter.title)+" 관련",1)])]),a(s,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,b,a(s,t(e({title:"How to push a new view onto a NavigationStack | SwiftUI by Example",desc:"How to push a new view onto a NavigationStack",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-push-a-new-view-onto-a-navigationstack",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),y,n("blockquote",null,[n("p",null,[n("a",_,[a(c,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),a(u,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-push-a-new-view-onto-a-navigationview-1~dark.mp4"}),S,n("blockquote",null,[n("p",null,[n("a",N,[a(c,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),V,n("details",q,[x,H,a(s,t(e({title:"How to push a new view when a list row is tapped | SwiftUI by Example",desc:"How to push a new view when a list row is tapped",link:"/hackingwithswift.com/swiftui/how-to-push-a-new-view-when-a-list-row-is-tapped.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to save and load NavigationStack paths using Codable | SwiftUI by Example",desc:"How to save and load NavigationStack paths using Codable",link:"/hackingwithswift.com/swiftui/how-to-save-and-load-navigationstack-paths-using-codable.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to convert a SwiftUI view to an image | SwiftUI by Example",desc:"How to convert a SwiftUI view to an image",link:"/hackingwithswift.com/swiftui/how-to-convert-a-swiftui-view-to-an-image.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const T=r(h,[["render",I],["__file","how-to-push-a-new-view-onto-a-navigationstack.html.vue"]]),A=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-push-a-new-view-onto-a-navigationstack.html","title":"How to push a new view onto a NavigationStack","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to push a new view onto a NavigationStack","description":"Article(s) > How to push a new view onto a NavigationStack","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to push a new view onto a NavigationStack"},{"property":"og:description","content":"How to push a new view onto a NavigationStack"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-push-a-new-view-onto-a-navigationstack.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-push-a-new-view-onto-a-navigationstack.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to push a new view onto a NavigationStack"}],["meta",{"property":"og:description","content":"Article(s) > How to push a new view onto a NavigationStack"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to push a new view onto a NavigationStack\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.95,"words":586},"filePathRelative":"hackingwithswift.com/swiftui/how-to-push-a-new-view-onto-a-navigationstack.md","excerpt":"\\n"}');export{T as comp,A as data};
