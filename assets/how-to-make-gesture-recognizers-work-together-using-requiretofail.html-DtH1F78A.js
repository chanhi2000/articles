import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as e,t as g,e as r,n as i,g as a,a as t,r as l,o as u}from"./app-BgNevrm5.js";const h={},p={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},w=e("nav",{class:"table-of-contents"},[e("ul")],-1),d=e("hr",null,null,-1),f=e("blockquote",null,[e("p",null,"Available from iOS 3.2")],-1),k=e("details",{class:"hint-container details"},[e("summary",null,"Similar solutions‚Ä¶"),t(`
/quick-start/swiftui/how-to-add-a-gesture-recognizer-to-a-view">How to add a gesture recognizer to a view 
/quick-start/swiftui/how-to-force-one-gesture-to-recognize-before-another-using-highprioritygesture">How to force one gesture to recognize before another using highPriorityGesture() 
/quick-start/swiftui/how-to-create-gesture-chains-using-sequencedbefore">How to create gesture chains using sequenced(before:) 
/quick-start/swiftui/how-to-combine-text-views-together">How to combine text views together 
/example-code/uikit/how-to-detect-a-double-tap-gesture">How to detect a double tap gesture</a>
`)],-1);function y(n,b){const o=l("VPCard");return u(),c("div",null,[e("h1",p,[e("a",m,[e("span",null,g(n.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),r(o,i(a({title:"UIKit - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/uikit/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,d,r(o,i(a({title:"How to make gesture recognizers work together using require(toFail:) | UIKit - free Swift example code",desc:"How to make gesture recognizers work together using require(toFail:)",link:"https://hackingwithswift.com/example-code/uikit/how-to-make-gesture-recognizers-work-together-using-requiretofail",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,t(" TODO: ÏûëÏÑ± "),t(`
It‚Äôs common to have multiple gesture recognizers attached to a single view, all doing different things depending on the user‚Äôs taps on your screen. By default, iOS lets them fight for control, but usually you want to execute them in some sort of particular order: one gesture should only be matched if another failed. 

For example, here are two gesture recognizers that exist on the same view:

\`\`\`swift
let swipe = UISwipeGestureRecognizer(target: self, action: #selector(executeSwipe))
let tap = UITapGestureRecognizer(target: self, action: #selector(executeTap))

view.addGestureRecognizer(swipe)
view.addGestureRecognizer(tap)
\`\`\`

A swipe gesture is a tap followed by a linear movement, whereas a tap is just a tap ‚Äì we need to make sure the swipe gesture has definitely not been recognizer before the tap gesture is checked.

iOS often does a fairly good job of this, but there‚Äôs no need to leave it up to chance: if you call \`require(toFail:)\` on the tap gesture recognizer, passing in the swipe recognizer, iOS will definitely make sure they don‚Äôt compete:

\`\`\`swift
tap.require(toFail: swipe)
\`\`\`

`),k])}const q=s(h,[["render",y],["__file","how-to-make-gesture-recognizers-work-together-using-requiretofail.html.vue"]]),x=JSON.parse('{"path":"/hackingwithswift.com/example-code/uikit/how-to-make-gesture-recognizers-work-together-using-requiretofail.html","title":"How to make gesture recognizers work together using require(toFail:)","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to make gesture recognizers work together using require(toFail:)","description":"Article(s) > How to make gesture recognizers work together using require(toFail:)","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-3.2","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to make gesture recognizers work together using require(toFail:)"},{"property":"og:description","content":"How to make gesture recognizers work together using require(toFail:)"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uikit/how-to-make-gesture-recognizers-work-together-using-requiretofail.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uikit/how-to-make-gesture-recognizers-work-together-using-requiretofail.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to make gesture recognizers work together using require(toFail:)"}],["meta",{"property":"og:description","content":"Article(s) > How to make gesture recognizers work together using require(toFail:)"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-3.2"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to make gesture recognizers work together using require(toFail:)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.51,"words":454},"filePathRelative":"hackingwithswift.com/example-code/uikit/how-to-make-gesture-recognizers-work-together-using-requiretofail.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{q as comp,x as data};
