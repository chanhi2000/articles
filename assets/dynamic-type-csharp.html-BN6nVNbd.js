import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as e,t as s,e as t,n as m,g as p,a as l,r as a,o as h}from"./app-BgNevrm5.js";const d={},y={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},u=e("nav",{class:"table-of-contents"},[e("ul")],-1),f=e("hr",null,null,-1);function _(n,b){const o=a("VPCard"),c=a("SiteInfo");return h(),r("div",null,[e("h1",y,[e("a",g,[e("span",null,s(n.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),t(o,m(p({title:"C# > Article(s)",desc:"Article(s)",link:"/programming/cs/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),u,f,t(c,{name:"Dynamic Type in C#",desc:"Dynamic type in C# is a useful type that extends the language with dynamic features. We're going to learn what it is and how to use it.",url:"https://code-maze.com/dynamic-type-csharp/",logo:"/assets/image/code-maze.com/favicon.png",preview:"/assets/image/dynamic-type-csharp/banner.png"}),l(" TODO: ÏûëÏÑ± ")])}const T=i(d,[["render",_],["__file","dynamic-type-csharp.html.vue"]]),z=JSON.parse('{"path":"/code-maze.com/dynamic-type-csharp.html","title":"Dynamic Type in C#","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Dynamic Type in C#","description":"Article(s) > Dynamic Type in C#","icon":"iconfont icon-csharp","category":["C#","Article(s)"],"tag":["blog","code-maze.com","csharp"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Dynamic Type in C#"},{"property":"og:description","content":"Dynamic Type in C#"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/code-maze.com/dynamic-type-csharp.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/code-maze.com/dynamic-type-csharp.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"Dynamic Type in C#"}],["meta",{"property":"og:description","content":"Article(s) > Dynamic Type in C#"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/dynamic-type-csharp/banner.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/dynamic-type-csharp/banner.png"}],["meta",{"name":"twitter:image:alt","content":"Dynamic Type in C#"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"code-maze.com"}],["meta",{"property":"article:tag","content":"csharp"}],["meta",{"property":"article:published_time","content":"2022-08-03T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Dynamic Type in C#\\",\\"image\\":[\\"https://chanhi2000.github.io/bookshelf/assets/image/code-maze.com/dynamic-type-csharp/banner.png\\"],\\"datePublished\\":\\"2022-08-03T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"prev":"/programming/cs/articles/README.md","date":"2022-08-03T00:00:00.000Z","isOriginal":false,"cover":"/assets/image/code-maze.com/dynamic-type-csharp/banner.png"},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":0.47,"words":142},"filePathRelative":"code-maze.com/dynamic-type-csharp.md","localizedDate":"2022ÎÖÑ 8Ïõî 3Ïùº","excerpt":"\\n"}');export{T as comp,z as data};
