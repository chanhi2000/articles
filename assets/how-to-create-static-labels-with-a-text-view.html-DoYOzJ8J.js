import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,b as t,t as u,e,n as a,g as i,d as n,f as l,r as c,o as d}from"./app-BgNevrm5.js";const w={},m={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},g=t("nav",{class:"table-of-contents"},[t("ul")],-1),k=t("hr",null,null,-1),b=l(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>Updated in iOS 16</strong></p><p>Text views show static text on the screen, and are equivalent to <code>UILabel</code> in UIKit. At their most basic they look like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello World&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,4),v={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-static-labels-with-a-text-view-1.zip",target:"_blank",rel:"noopener noreferrer"},x=t("figure",null,[t("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-static-labels-with-a-text-view-1~dark.png",alt:"The words Hello World displayed on a plain background",tabindex:"0",loading:"lazy"}),t("figcaption",null,"The words Hello World displayed on a plain background")],-1),y=t("code",null,"[Resume]",-1),_=l(`<div class="hint-container tip"><p class="hint-container-title">Tips</p><p>You can press <kbd>Opt</kbd>+<kbd>Cmd</kbd>+<kbd>P</kbd> to resume these previews at any time.</p></div><p>By default text views wrap across as many lines as they need, but if you&#39;d rather limit the number of lines they can use you should add the lineLimit modifier, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This is some longer text that is limited to three lines maximum, so anything more than that will cause the text to clip.&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">lineLimit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),T={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-static-labels-with-a-text-view-2.zip",target:"_blank",rel:"noopener noreferrer"},q=l(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-static-labels-with-a-text-view-2~dark.png" alt="Three lines of text showing the line limit and frame modifiers." tabindex="0" loading="lazy"><figcaption>Three lines of text showing the line limit and frame modifiers.</figcaption></figure><p>You can also provide line limit ranges rather than a specific value – you might want to allow any range between 3 and 6, for example:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This is some longer text that is limited to a specific range of lines, so anything more than six lines will cause the text to clip.&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">lineLimit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">...</span><span class="token number">6</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-static-labels-with-a-text-view-3.zip",target:"_blank",rel:"noopener noreferrer"},H=l(`<p>If you need an <em>exact</em> line limit – meaning “this text should have exactly two lines of height, not more and not less”, you should use the <code>reservesSpace</code> parameter like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This is always two lines&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">lineLimit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> reservesSpace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),I={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-static-labels-with-a-text-view-3.zip",target:"_blank",rel:"noopener noreferrer"},j=l(`<p>That doesn&#39;t mean the text will somehow be stretched across two lines, only that the text view will be sized to be two lines in height no matter what its contents. This approach is particularly helpful when you need an exact number of lines – in grids and other layouts where you want nice and even spacing, for example.</p><p>If you place a line limit on some text then provide it with a string that&#39;s too long to fit in the available space, SwiftUI will truncate the text so that it ends with “...”.</p><p>You can adjust the way SwiftUI truncates your text: the default is to remove text from the end and show an ellipsis there instead, but you can also place the ellipsis in the middle or beginning depending on how important the various parts of your string are.</p><p>For example, this truncates your text in the middle:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This is an extremely long string of text that will never fit even the widest of iOS devices even if the user has their Dynamic Type setting as small as is possible, so in theory it should definitely demonstrate truncationMode().&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">lineLimit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">truncationMode</span><span class="token punctuation">(</span><span class="token punctuation">.</span>middle<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),U={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-static-labels-with-a-text-view-4.zip",target:"_blank",rel:"noopener noreferrer"},z=t("figure",null,[t("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-static-labels-with-a-text-view-3~dark.png",alt:"A single line of text truncated in the middle.",tabindex:"0",loading:"lazy"}),t("figcaption",null,"A single line of text truncated in the middle.")],-1),A=t("p",null,"Regardless of how you truncate the text, what you'll see is that your text view sits neatly centered in the main view. This is the default behavior of SwiftUI: unless it's told to position views somewhere else, it positions them relative to the center of the screen.",-1),E={class:"hint-container details"},D=t("summary",null,"Similar solutions…",-1);function R(r,L){const s=c("VPCard"),o=c("FontIcon");return d(),h("div",null,[t("h1",m,[t("a",f,[t("span",null,u(r.$frontmatter.title)+" 관련",1)])]),e(s,a(i({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,k,e(s,a(i({title:"How to create static labels with a Text view | SwiftUI by Example",desc:"How to create static labels with a Text view",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-create-static-labels-with-a-text-view",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,t("blockquote",null,[t("p",null,[t("a",v,[e(o,{icon:"fas fa-file-zipper"}),n("Download this as an Xcode project")])])]),x,t("p",null,[n("Inside the preview window for your content view you're likely to see “Automatic preview updating paused” – go ahead and press "),e(o,{icon:"iconfont icon-select"}),y,n(" to have Swift start building your code and show you a live preview of how it looks.")]),_,t("blockquote",null,[t("p",null,[t("a",T,[e(o,{icon:"fas fa-file-zipper"}),n("Download this as an Xcode project")])])]),q,t("blockquote",null,[t("p",null,[t("a",S,[e(o,{icon:"fas fa-file-zipper"}),n("Download this as an Xcode project")])])]),H,t("blockquote",null,[t("p",null,[t("a",I,[e(o,{icon:"fas fa-file-zipper"}),n("Download this as an Xcode project")])])]),j,t("blockquote",null,[t("p",null,[t("a",U,[e(o,{icon:"fas fa-file-zipper"}),n("Download this as an Xcode project")])])]),z,A,t("details",E,[D,e(s,a(i({title:"How to create a list of static items | SwiftUI by Example",desc:"How to create a list of static items",link:"/hackingwithswift.com/swiftui/how-to-create-a-list-of-static-items.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(s,a(i({title:"How to format text inside text views | SwiftUI by Example",desc:"How to format text inside text views",link:"/hackingwithswift.com/swiftui/how-to-format-text-inside-text-views.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(s,a(i({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(s,a(i({title:"How to add advanced text styling using AttributedString | SwiftUI by Example",desc:"How to add advanced text styling using AttributedString",link:"/hackingwithswift.com/swiftui/how-to-add-advanced-text-styling-using-attributedstring.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(s,a(i({title:"How to create multi-line editable text with TextEditor | SwiftUI by Example",desc:"How to create multi-line editable text with TextEditor",link:"/hackingwithswift.com/swiftui/how-to-create-multi-line-editable-text-with-texteditor.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const P=p(w,[["render",R],["__file","how-to-create-static-labels-with-a-text-view.html.vue"]]),X=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-create-static-labels-with-a-text-view.html","title":"How to create static labels with a Text view","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to create static labels with a Text view","description":"Article(s) > How to create static labels with a Text view","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to create static labels with a Text view"},{"property":"og:description","content":"How to create static labels with a Text view"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-static-labels-with-a-text-view.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-static-labels-with-a-text-view.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to create static labels with a Text view"}],["meta",{"property":"og:description","content":"Article(s) > How to create static labels with a Text view"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-static-labels-with-a-text-view-1~dark.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to create static labels with a Text view\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-static-labels-with-a-text-view-1~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-static-labels-with-a-text-view-2~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-static-labels-with-a-text-view-3~dark.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"prev":"/hackingwithswift.com/swiftui/wrap-up-our-swiftui-project-is-complete.md"},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.51,"words":1053},"filePathRelative":"hackingwithswift.com/swiftui/how-to-create-static-labels-with-a-text-view.md","excerpt":"\\n"}');export{P as comp,X as data};
