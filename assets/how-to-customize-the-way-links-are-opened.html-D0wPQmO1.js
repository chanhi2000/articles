import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as n,t as d,e as t,n as a,g as e,d as i,f as p,r as c,o as h}from"./app-BgNevrm5.js";const m={},k={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},g=n("nav",{class:"table-of-contents"},[n("ul")],-1),f=n("hr",null,null,-1),b=p(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>When your user taps a URL shown inside a SwiftUI <code>Text</code> or <code>Link</code> view, it will open in Safari by default. However, you can customize this behavior by replacing the <code>openURL</code> environment key – you might want to handle the link entirely, or perhaps pass it back to the system to open once your custom action completes.</p><p>For example, this code adjusts both a <code>Link</code> and a <code>Text</code> view so that all URLs are sent to a <code>handleURL()</code> method to be acted on:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Link</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Visit Apple&quot;</span></span><span class="token punctuation">,</span> destination<span class="token punctuation">:</span> <span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;https://apple.com&quot;</span></span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;[Visit Apple](https://apple.com)&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token punctuation">.</span>openURL<span class="token punctuation">,</span> <span class="token class-name">OpenURLAction</span><span class="token punctuation">(</span>handler<span class="token punctuation">:</span> handleURL<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">handleURL</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> url<span class="token punctuation">:</span> <span class="token constant">URL</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">OpenURLAction</span><span class="token punctuation">.</span><span class="token class-name">Result</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Handle </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">url</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> somehow&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">.</span>handled</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-customize-the-way-links-are-opened-1.zip",target:"_blank",rel:"noopener noreferrer"},v=p(`<p>As you can see, <code>handleURL()</code> returns a <code>OpenURLAction.Result</code> value of <code>.handled</code>, which means the method accepted the link and acted on it. There are alternatives:</p><ul><li>Use <code>.discarded</code> if you mean you weren&#39;t able to handle the link.</li><li>Use <code>.systemAction</code> if you want to trigger the default behavior, perhaps in addition to your own logic.</li><li>Use <code>.systemAction(someOtherURL)</code> if you want to open a different URL using the default behavior, perhaps a modified version of the URL that was originally triggered.</li></ul><p>Remember, links will use your app&#39;s accent color by default, but you can change that using the <code>tint()</code> modifier:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;[Visit Apple](https://apple.com)&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>indigo<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,4),_={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-customize-the-way-links-are-opened-2.zip",target:"_blank",rel:"noopener noreferrer"},z={class:"hint-container details"},U=n("summary",null,"Similar solutions…",-1);function R(l,x){const s=c("VPCard"),o=c("FontIcon");return h(),u("div",null,[n("h1",k,[n("a",w,[n("span",null,d(l.$frontmatter.title)+" 관련",1)])]),t(s,a(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,f,t(s,a(e({title:"How to customize the way links are opened | SwiftUI by Example",desc:"How to customize the way links are opened",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-customize-the-way-links-are-opened",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("blockquote",null,[n("p",null,[n("a",y,[t(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),v,n("blockquote",null,[n("p",null,[n("a",_,[t(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),n("details",z,[U,t(s,a(e({title:"How to open web links in Safari | SwiftUI by Example",desc:"How to open web links in Safari",link:"/hackingwithswift.com/swiftui/how-to-open-web-links-in-safari.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(s,a(e({title:"Two-way bindings in SwiftUI | SwiftUI by Example",desc:"Two-way bindings in SwiftUI",link:"/hackingwithswift.com/swiftui/two-way-bindings-in-swiftui.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(s,a(e({title:"How to adjust the way an image is fitted to its space | SwiftUI by Example",desc:"How to adjust the way an image is fitted to its space",link:"/hackingwithswift.com/swiftui/how-to-adjust-the-way-an-image-is-fitted-to-its-space.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(s,a(e({title:"How to let users customize toolbar buttons | SwiftUI by Example",desc:"How to let users customize toolbar buttons",link:"/hackingwithswift.com/swiftui/how-to-let-users-customize-toolbar-buttons.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(s,a(e({title:"How to customize the background color of navigation bars, tab bars, and toolbars | SwiftUI by Example",desc:"How to customize the background color of navigation bars, tab bars, and toolbars",link:"/hackingwithswift.com/swiftui/how-to-customize-the-background-color-of-navigation-bars-tab-bars-and-toolbars.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const S=r(m,[["render",R],["__file","how-to-customize-the-way-links-are-opened.html.vue"]]),A=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-customize-the-way-links-are-opened.html","title":"How to customize the way links are opened","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to customize the way links are opened","description":"Article(s) > How to customize the way links are opened","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to customize the way links are opened"},{"property":"og:description","content":"How to customize the way links are opened"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-customize-the-way-links-are-opened.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-customize-the-way-links-are-opened.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to customize the way links are opened"}],["meta",{"property":"og:description","content":"Article(s) > How to customize the way links are opened"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to customize the way links are opened\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.14,"words":643},"filePathRelative":"hackingwithswift.com/swiftui/how-to-customize-the-way-links-are-opened.md","excerpt":"\\n"}');export{S as comp,A as data};
