import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as t,t as p,e,n as a,g as s,f as h,r as i,o as d}from"./app-BgNevrm5.js";const u={},w={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},m=t("nav",{class:"table-of-contents"},[t("ul")],-1),f=t("hr",null,null,-1),k=t("blockquote",null,[t("p",null,"Updated for Xcode 15")],-1),b=h(`<p>There&#39;s one more thing to add in order to finish off this screen, which is to make the Confirm Order button work. We&#39;re not actually going to send the order off somewhere, but we <em>are</em> going to show an alert confirming that it all went through successfully.</p><p>Like other things in this form this requires us to add another <code>@State</code> property, this time tracking whether the alert is visible or not. And this is where I hope the reactive nature of SwiftUI starts to become clear: we don&#39;t say ‚Äúshow the alert‚Äù or ‚Äúhide the alert‚Äù like we would do in UIKit, but instead say ‚Äúhere are the conditions where the alert should be shown‚Äù and let SwiftUI figure out when those conditions are met.</p><p>So, first let&#39;s create another <code>@State</code> property saying that the payment alert isn&#39;t currently showing:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> showingPaymentAlert <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Now we&#39;ll attach an <code>alert()</code> modifier to our form, with a simple title, a two-way binding to that property, and some text to show as the alert&#39;s message:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Order confirmed&quot;</span></span><span class="token punctuation">,</span> isPresented<span class="token punctuation">:</span> $showingPaymentAlert<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// add buttons here</span></span>
<span class="line"><span class="token punctuation">}</span> message<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Your total was </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">totalPrice</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> ‚Äì thank you!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That uses a two-way binding so that SwiftUI knows to show the alert when <code>showingPaymentAlert</code> becomes true, and will also set <code>showingPaymentAlert</code> back to false when the alert is dismissed.</p><p>Where I&#39;ve placed the <code>// add buttons here</code> comment is where to add some custom buttons for your alert if you want them, but as we haven&#39;t added any SwiftUI will automatically add a default ‚ÄúOK‚Äù button that dismisses the alert.</p><p>Now we can make that alert show whenever we want, just by setting <code>showingPaymentAlert</code> to true. So, change our button to this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Confirm order&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    showingPaymentAlert<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run the program and see what you think ‚Äì it&#39;s really coming together now!</p><figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/2-15~dark.png" alt="An iOS alert showing the order was confirmed." tabindex="0" loading="lazy"><figcaption>An iOS alert showing the order was confirmed.</figcaption></figure>`,12),y={class:"hint-container details"},v=t("summary",null,"Further reading",-1),_={class:"hint-container details"},S=t("summary",null,"Similar solutions‚Ä¶",-1);function x(o,P){const n=i("VPCard"),r=i("VidStack");return d(),c("div",null,[t("h1",w,[t("a",g,[t("span",null,p(o.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),e(n,a(s({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),m,f,e(n,a(s({title:"Presenting an alert | SwiftUI by Example",desc:"Presenting an alert",link:"https://hackingwithswift.com/quick-start/swiftui/presenting-an-alert",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k,e(r,{src:"youtube/ClZES_lQ214"}),b,t("details",y,[v,e(n,a(s({title:"Article(s) > Working with presentations",desc:"Working with presentations",link:"/hackingwithswift.com/swiftui/working-with-presentations.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(n,a(s({title:"How to show an alert | SwiftUI by Example",desc:"How to show an alert",link:"/hackingwithswift.com/swiftui/how-to-show-an-alert.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)]),t("details",_,[S,e(n,a(s({title:"How to show an alert | SwiftUI by Example",desc:"How to show an alert",link:"/hackingwithswift.com/swiftui/how-to-show-an-alert.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(n,a(s({title:"How to add actions to alert buttons | SwiftUI by Example",desc:"How to add actions to alert buttons",link:"/hackingwithswift.com/swiftui/how-to-add-actions-to-alert-buttons.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(n,a(s({title:"How to add a TextField to an alert | SwiftUI by Example",desc:"How to add a TextField to an alert",link:"/hackingwithswift.com/swiftui/how-to-add-a-textfield-to-an-alert.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(n,a(s({title:"How to show multiple alerts in a single view | SwiftUI by Example",desc:"How to show multiple alerts in a single view",link:"/hackingwithswift.com/swiftui/how-to-show-multiple-alerts-in-a-single-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(n,a(s({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const U=l(u,[["render",x],["__file","presenting-an-alert.html.vue"]]),q=JSON.parse('{"path":"/hackingwithswift.com/swiftui/presenting-an-alert.html","title":"Presenting an alert","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Presenting an alert","description":"Article(s) > Presenting an alert","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Presenting an alert"},{"property":"og:description","content":"Presenting an alert"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/presenting-an-alert.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/presenting-an-alert.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"Presenting an alert"}],["meta",{"property":"og:description","content":"Article(s) > Presenting an alert"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/2-15~dark.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Presenting an alert\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/2-15~dark.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.29,"words":686},"filePathRelative":"hackingwithswift.com/swiftui/presenting-an-alert.md","excerpt":"\\n"}');export{U as comp,q as data};
