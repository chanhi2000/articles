import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,t as u,e as a,n as t,g as e,d,f as h,r as i,o as m}from"./app-BgNevrm5.js";const g={},k={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},f=n("nav",{class:"table-of-contents"},[n("ul")],-1),b=n("hr",null,null,-1),v=h(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in iOS 15</strong></p><p>SwiftUI lets us create a <code>List</code> or <code>ForEach</code> directly from a binding, which then provides the content closure with individual bindings to each element in the collection of data we&#39;re showing. This is important for the times when the content you&#39;re showing for each item needs a binding to some of its data, such as list rows having a text field to edit a user&#39;s name.</p><p>To use this, pass the binding into your list directly, e.g. <code>$users</code>, then accept a binding in the content closure, e.g. <code>$user</code>. For example, in this code we show a list of users and add to each row a <code>Toggle</code> determining whether they have been contacted or not:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">User</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> id <span class="token operator">=</span> <span class="token function">UUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">var</span> isContacted <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> users <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token class-name">User</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Taylor&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token class-name">User</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Justin&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token class-name">User</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Adele&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">List</span><span class="token punctuation">(</span>$users<span class="token punctuation">)</span> <span class="token punctuation">{</span> $user <span class="token keyword">in</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span>user<span class="token punctuation">.</span>name<span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;User has been contacted&quot;</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> $user<span class="token punctuation">.</span>isContacted<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">labelsHidden</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-a-list-or-a-foreach-from-a-binding-1.zip",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,"Using a binding in this way is the most efficient way of modifying the list, because it won't cause the entire view to reload when only a single item changes.",-1),x={class:"hint-container details"},S=n("summary",null,"Similar solutions…",-1);function E(o,F){const s=i("VPCard"),c=i("FontIcon"),p=i("VidStack");return m(),r("div",null,[n("h1",k,[n("a",w,[n("span",null,u(o.$frontmatter.title)+" 관련",1)])]),a(s,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,b,a(s,t(e({title:"How to create a List or a ForEach from a binding | SwiftUI by Example",desc:"How to create a List or a ForEach from a binding",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-create-a-list-or-a-foreach-from-a-binding",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,n("blockquote",null,[n("p",null,[n("a",y,[a(c,{icon:"fas fa-file-zipper"}),d("Download this as an Xcode project")])])]),a(p,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-list-or-a-foreach-from-a-binding-1~dark.mp4"}),_,n("details",x,[S,a(s,t(e({title:"How to create views in a loop using ForEach | SwiftUI by Example",desc:"How to create views in a loop using ForEach",link:"/hackingwithswift.com/swiftui/how-to-create-views-in-a-loop-using-foreach.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"What is the @Binding property wrapper? | SwiftUI by Example",desc:"What is the @Binding property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-binding-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to fix “Cannot convert value of type 'String' to expected argument type 'Binding<String>'” | SwiftUI by Example",desc:"How to fix “Cannot convert value of type 'String' to expected argument type 'Binding<String>'”",link:"/hackingwithswift.com/swiftui/how-to-fix-cannot-convert-value-of-type-string-to-expected-argument-type-binding-string.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to animate changes in binding values | SwiftUI by Example",desc:"How to animate changes in binding values",link:"/hackingwithswift.com/swiftui/how-to-animate-changes-in-binding-values.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"Building a menu using List | SwiftUI by Example",desc:"Building a menu using List",link:"/hackingwithswift.com/swiftui/building-a-menu-using-list.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const L=l(g,[["render",E],["__file","how-to-create-a-list-or-a-foreach-from-a-binding.html.vue"]]),q=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-create-a-list-or-a-foreach-from-a-binding.html","title":"How to create a List or a ForEach from a binding","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to create a List or a ForEach from a binding","description":"Article(s) > How to create a List or a ForEach from a binding","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to create a List or a ForEach from a binding"},{"property":"og:description","content":"How to create a List or a ForEach from a binding"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-a-list-or-a-foreach-from-a-binding.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-a-list-or-a-foreach-from-a-binding.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to create a List or a ForEach from a binding"}],["meta",{"property":"og:description","content":"Article(s) > How to create a List or a ForEach from a binding"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to create a List or a ForEach from a binding\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.1,"words":630},"filePathRelative":"hackingwithswift.com/swiftui/how-to-create-a-list-or-a-foreach-from-a-binding.md","excerpt":"\\n"}');export{L as comp,q as data};
