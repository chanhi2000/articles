import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as o,t as c,e as a,n as r,g as i,a as t,r as d,o as p}from"./app-BgNevrm5.js";const m={},h={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},u={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},w=o("nav",{class:"table-of-contents"},[o("ul")],-1),g=o("hr",null,null,-1),y=o("blockquote",null,[o("p",null,"Available from iOS 13.0")],-1),f=o("details",{class:"hint-container details"},[o("summary",null,"Similar solutions‚Ä¶"),t(`
/example-code/system/how-to-run-code-when-your-app-is-terminated">How to run code when your app is terminated 
/example-code/uikit/how-to-detect-dark-mode-in-ios">How to detect dark mode in iOS 
/quick-start/swiftui/how-to-show-different-images-and-other-views-in-light-or-dark-mode">How to show different images and other views in light or dark mode 
/example-code/uikit/how-to-force-a-view-controller-to-use-light-or-dark-mode">How to force a view controller to use light or dark mode 
/quick-start/swiftui/how-to-preview-your-layout-in-light-and-dark-mode">How to preview your layout in light and dark mode</a>
`)],-1);function k(s,b){const e=d("VPCard");return p(),l("div",null,[o("h1",h,[o("a",u,[o("span",null,c(s.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),a(e,r(i({title:"UIClolr - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/uicolor/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,g,a(e,r(i({title:"How to use semantic colors to help your iOS app adapt to dark mode | UIClolr - free Swift example code",desc:"How to use semantic colors to help your iOS app adapt to dark mode",link:"https://hackingwithswift.com/example-code/uicolor/how-to-use-semantic-colors-to-help-your-ios-app-adapt-to-dark-mode",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),y,t(" TODO: ÏûëÏÑ± "),t(" \nWhen specifying colors for objects in your views, it‚Äôs often easier to use the built-in semantic colors of `UIColor` rather than specifying our own custom colors that might not look good in both light and dark mode.\n\nFor example, when you are coloring a label, use `UIColor.label`, `.secondaryLabel`, or similar so that UIKit will automatically make sure it stands out.\n\nFor backgrounds you should use `UIColor.systemBackground`, `.secondarySystemBackground`, or similar so that when you layer one view over another they don‚Äôt appear to become merged.\n\nAnd when you‚Äôre using fixed colors like `.red` or `.blue` you should instead use `.systemRed` or `.systemBlue` to get a color that will adapt to the user‚Äôs trait environment ‚Äì it will be a lighter red when in dark mode, and a darker red in light mode, rather than the fixed pure red of `.red`.\n\n"),f])}const v=n(m,[["render",k],["__file","how-to-use-semantic-colors-to-help-your-ios-app-adapt-to-dark-mode.html.vue"]]),x=JSON.parse('{"path":"/hackingwithswift.com/example-code/uicolor/how-to-use-semantic-colors-to-help-your-ios-app-adapt-to-dark-mode.html","title":"How to use semantic colors to help your iOS app adapt to dark mode","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to use semantic colors to help your iOS app adapt to dark mode","description":"Article(s) > How to use semantic colors to help your iOS app adapt to dark mode","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-13.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to use semantic colors to help your iOS app adapt to dark mode"},{"property":"og:description","content":"How to use semantic colors to help your iOS app adapt to dark mode"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uicolor/how-to-use-semantic-colors-to-help-your-ios-app-adapt-to-dark-mode.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uicolor/how-to-use-semantic-colors-to-help-your-ios-app-adapt-to-dark-mode.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to use semantic colors to help your iOS app adapt to dark mode"}],["meta",{"property":"og:description","content":"Article(s) > How to use semantic colors to help your iOS app adapt to dark mode"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-13.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-06-03T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to use semantic colors to help your iOS app adapt to dark mode\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-06-03T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-06-03T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.59,"words":478},"filePathRelative":"hackingwithswift.com/example-code/uicolor/how-to-use-semantic-colors-to-help-your-ios-app-adapt-to-dark-mode.md","localizedDate":"2019ÎÖÑ 6Ïõî 3Ïùº","excerpt":"\\n"}');export{v as comp,x as data};
