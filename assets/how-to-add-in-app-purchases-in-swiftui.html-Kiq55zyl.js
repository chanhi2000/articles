import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,t as d,e as s,n as o,g as p,d as a,f as i,r as c,o as k}from"./app-BgNevrm5.js";const h={},w={id:"frontmatter-title-관련",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-관련"},m=n("nav",{class:"table-of-contents"},[n("ul")],-1),f=n("hr",null,null,-1),b=i(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in iOS 17</strong></p><p>If you import StoreKit, you can use <code>StoreView</code>, <code>SubscriptionStoreView</code>, and <code>ProductView</code> to present in-app purchases to your users, including handling the process of starting the purchase. This still leaves a fair amount of StoreKit work for you to do, including processing the actual purchase transactions and so on, but I wouldn’t rule out Apple requiring apps to use this standardized interface in future releases.</p><div class="hint-container important"><p class="hint-container-title">Important</p><p>You must add <code>import StoreKit</code> to your Swift file in order for any of this code to work.</p></div><p>At its simplest, just add a <code>ProductView</code> with a single product identifier, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token comment">// just show a single product</span></span>
<span class="line"><span class="token class-name">ProductView</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;com.hackingwithswift.plus.subscription&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,6),v={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-in-app-purchases-in-swiftui-1.zip",target:"_blank",rel:"noopener noreferrer"},y=i(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-1~dark@2x.png" alt="A simple product listing next to a buy button." tabindex="0" loading="lazy"><figcaption>A simple product listing next to a buy button.</figcaption></figure><p>However, in practice you’re likely to want to configure how the product looks, such as adjusting the layout or adding other styling:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Welcome to my store&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">ProductView</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;com.hackingwithswift.plus.subscription&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;crown&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">productViewStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>compact<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-in-app-purchases-in-swiftui-2.zip",target:"_blank",rel:"noopener noreferrer"},q=i(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-2~dark@2x.png" alt="A slightly nicer product listing next to a buy button." tabindex="0" loading="lazy"><figcaption>A slightly nicer product listing next to a buy button.</figcaption></figure><p>If you want to display multiple products at the same time, you can either arrange groups of <code>ProductView</code> instances however you want in a custom UI, or switch over to a <code>StoreView</code> with the list of product IDs you want to display, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hacking with Swift+&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">StoreView</span><span class="token punctuation">(</span>ids<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;com.hackingwithswift.plus.subscription&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;com.hackingwithswift.plus.lifetime&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),_={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-in-app-purchases-in-swiftui-3.zip",target:"_blank",rel:"noopener noreferrer"},x=i(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-3~dark@2x.png" alt="A very simple product listing, showing two products." tabindex="0" loading="lazy"><figcaption>A very simple product listing, showing two products.</figcaption></figure><p>Again, that looks pretty vanilla by default, but it’s configurable with a range of modifiers. For example, you can configure the system to show a “Restore Missing Purchases” button like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hacking with Swift+&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">StoreView</span><span class="token punctuation">(</span>ids<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;com.hackingwithswift.plus.subscription&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;com.hackingwithswift.plus.lifetime&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">storeButton</span><span class="token punctuation">(</span><span class="token punctuation">.</span>visible<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>restorePurchases<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),I={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-in-app-purchases-in-swiftui-4.zip",target:"_blank",rel:"noopener noreferrer"},A=i(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-4~dark@2x.png" alt="A slightly nicer product listing, showing two products." tabindex="0" loading="lazy"><figcaption>A slightly nicer product listing, showing two products.</figcaption></figure><p>Remember, this shows the UI but doesn’t automatically unlock any content when purchases are made or restored – it’s important you also listen for transaction updates.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p><code>ProductView</code>, <code>StoreView</code>, and <code>SubscriptionStoreView</code> automatically check Screen Time to make sure your user has in-app purchases enabled.</p></div><p>The default <code>StoreView</code> works great for in-app purchases, but I think the real power here is <code>SubscriptionStoreView</code>, which does the same thing for in-app subscriptions. This is where most developers trip up in trying to get an experience that App Review is happy with, making sure to include clear terms and conditions.</p><p>Again, at its simplest it can just be a matter of getting it some product IDs to show, but this too lets you customize which buttons are shown. For example, we could add buttons to restore purchases or redeem a promo code:</p><figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-5~dark@2x.png" alt="A plain view prompting users to subscribe to Hacking with Swift+." tabindex="0" loading="lazy"><figcaption>A plain view prompting users to subscribe to Hacking with Swift+.</figcaption></figure><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">SubscriptionStoreView</span><span class="token punctuation">(</span>productIDs<span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;com.hackingwithswift.plus.subscription&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">storeButton</span><span class="token punctuation">(</span><span class="token punctuation">.</span>visible<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>restorePurchases<span class="token punctuation">,</span> <span class="token punctuation">.</span>redeemCode<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,7),U={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-in-app-purchases-in-swiftui-5.zip",target:"_blank",rel:"noopener noreferrer"},V=i(`<p>Where things get really interesting is how we can customize this screen further. For example, we could add buttons for custom sign in, terms of service, and privacy policy, attach screens to display both those things, add a sheet to show when the sign in button is pressed, and adopt a more prominent subscription selection design:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> showingSignIn <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">SubscriptionStoreView</span><span class="token punctuation">(</span>productIDs<span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;com.hackingwithswift.plus.subscription&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">storeButton</span><span class="token punctuation">(</span><span class="token punctuation">.</span>visible<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>restorePurchases<span class="token punctuation">,</span> <span class="token punctuation">.</span>redeemCode<span class="token punctuation">,</span> <span class="token punctuation">.</span>policies<span class="token punctuation">,</span> <span class="token punctuation">.</span>signIn<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">subscriptionStorePolicyDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>privacyPolicy<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Privacy policy here&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">subscriptionStorePolicyDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>termsOfService<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Terms of service here&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span>subscriptionStoreSignInAction <span class="token punctuation">{</span></span>
<span class="line">                showingSignIn <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">sheet</span><span class="token punctuation">(</span>isPresented<span class="token punctuation">:</span> $showingSignIn<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Sign in here&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">subscriptionStoreControlStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>prominentPicker<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),z={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-in-app-purchases-in-swiftui-6.zip",target:"_blank",rel:"noopener noreferrer"},j=i(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-6~dark@2x.png" alt="A more complex subscription view with more options to choose from." tabindex="0" loading="lazy"><figcaption>A more complex subscription view with more options to choose from.</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Both privacy and terms of service can be provided as URLs rather than custom SwiftUI views.</p></div><p>There are also various options for controlling how the screen looks, all carefully picked out by Apple to ensure all the core functionality remains – that your screen ultimately shows all the purchase information in a way that Apple will approve.</p><p>For example, this shows a custom marketing header for my subscriptions, placing a blue gradient behind it:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">SubscriptionStoreView</span><span class="token punctuation">(</span>productIDs<span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;com.hackingwithswift.plus.subscription&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;HWS+&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">fontWeight</span><span class="token punctuation">(</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Take your Swift learning to the next level by subscribing to Hacking with Swift+!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">multilineTextAlignment</span><span class="token punctuation">(</span><span class="token punctuation">.</span>center<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>white<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">containerBackground</span><span class="token punctuation">(</span><span class="token punctuation">.</span>blue<span class="token punctuation">.</span>gradient<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>subscriptionStore<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">storeButton</span><span class="token punctuation">(</span><span class="token punctuation">.</span>visible<span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">.</span>restorePurchases<span class="token punctuation">,</span> <span class="token punctuation">.</span>redeemCode<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">subscriptionStoreControlStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>prominentPicker<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),P={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-in-app-purchases-in-swiftui-7.zip",target:"_blank",rel:"noopener noreferrer"},T=i(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-7~dark@2x.png" alt="A customized subscription view with custom SwiftUI layout for the marketing header." tabindex="0" loading="lazy"><figcaption>A customized subscription view with custom SwiftUI layout for the marketing header.</figcaption></figure><div class="hint-container note"><p class="hint-container-title">Note</p><p>You <em>can</em> add code to monitor for in-app purchase transactions, but this does <em>not</em> replace a full StoreKit implementation where you monitor them correctly.</p></div><p>In the code below, we print a message when a product starts, then print one of two other messages depending on how the transaction goes:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">ProductView</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;com.hackingwithswift.plus.subscription&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;crown&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">productViewStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>compact<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">.</span>onInAppPurchaseStart <span class="token punctuation">{</span> product <span class="token keyword">in</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;User has started buying </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">product<span class="token punctuation">.</span>id</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">.</span>onInAppPurchaseCompletion <span class="token punctuation">{</span> product<span class="token punctuation">,</span> result <span class="token keyword">in</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">let</span> transaction<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">=</span> result <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Purchased successfully: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">transaction<span class="token punctuation">.</span>signedDate</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Something else happened&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),H={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-in-app-purchases-in-swiftui-8.zip",target:"_blank",rel:"noopener noreferrer"},D=n("figure",null,[n("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-8~dark@2x.gif",alt:"A short animation showing the user selecting a product, completing the purchase, then seeing a message printed.",tabindex:"0",loading:"lazy"}),n("figcaption",null,"A short animation showing the user selecting a product, completing the purchase, then seeing a message printed.")],-1),B=n("p",null,[a("Yes, the API is a little clunky here – the double "),n("code",null,".success"),a(" is needed because we’re given two nested enums, with the inner one containing the transaction details you can use to verify the purchase externally if needed.")],-1),C=n("p",null,[a("Be careful: that code alone isn’t enough, because one of the possible completion status is "),n("em",null,"pending"),a(": the purchase is in the process of happening but hasn’t completed yet, so you still need to watch the transaction queue manually to be absolutely sure of handling the process completely.")],-1),E={class:"hint-container details"},R=n("summary",null,"Similar solutions…",-1);function K(l,N){const e=c("VPCard"),t=c("FontIcon");return k(),r("div",null,[n("h1",w,[n("a",g,[n("span",null,d(l.$frontmatter.title)+" 관련",1)])]),s(e,o(p({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),m,f,s(e,o(p({title:"How to add in-app purchases in SwiftUI | SwiftUI by Example",desc:"How to add in-app purchases in SwiftUI",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("blockquote",null,[n("p",null,[n("a",v,[s(t,{icon:"fas fa-file-zipper"}),a("Download this as an Xcode project")])])]),y,n("blockquote",null,[n("p",null,[n("a",S,[s(t,{icon:"fas fa-file-zipper"}),a("Download this as an Xcode project")])])]),q,n("blockquote",null,[n("p",null,[n("a",_,[s(t,{icon:"fas fa-file-zipper"}),a("Download this as an Xcode project")])])]),x,n("blockquote",null,[n("p",null,[n("a",I,[s(t,{icon:"fas fa-file-zipper"}),a("Download this as an Xcode project")])])]),A,n("blockquote",null,[n("p",null,[n("a",U,[s(t,{icon:"fas fa-file-zipper"}),a("Download this as an Xcode project")])])]),V,n("blockquote",null,[n("p",null,[n("a",z,[s(t,{icon:"fas fa-file-zipper"}),a("Download this as an Xcode project")])])]),j,n("blockquote",null,[n("p",null,[n("a",P,[s(t,{icon:"fas fa-file-zipper"}),a("Download this as an Xcode project")])])]),T,n("blockquote",null,[n("p",null,[n("a",H,[s(t,{icon:"fas fa-file-zipper"}),a("Download this as an Xcode project")])])]),D,B,C,n("details",E,[R,s(e,o(p({title:"How to add Metal shaders to SwiftUI views using layer effects | SwiftUI by Example",desc:"How to add Metal shaders to SwiftUI views using layer effects",link:"/hackingwithswift.com/swiftui/how-to-add-metal-shaders-to-swiftui-views-using-layer-effects.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(e,o(p({title:"Answering the big question: should you learn SwiftUI, UIKit, or both? | SwiftUI by Example",desc:"Answering the big question: should you learn SwiftUI, UIKit, or both?",link:"/hackingwithswift.com/swiftui/answering-the-big-question-should-you-learn-swiftui-uikit-or-both.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(e,o(p({title:"Two-way bindings in SwiftUI | SwiftUI by Example",desc:"Two-way bindings in SwiftUI",link:"/hackingwithswift.com/swiftui/two-way-bindings-in-swiftui.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(e,o(p({title:"Frequently asked questions about SwiftUI | SwiftUI by Example",desc:"Frequently asked questions about SwiftUI",link:"/hackingwithswift.com/swiftui/frequently-asked-questions-about-swiftui.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(e,o(p({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const M=u(h,[["render",K],["__file","how-to-add-in-app-purchases-in-swiftui.html.vue"]]),W=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-add-in-app-purchases-in-swiftui.html","title":"How to add in-app purchases in SwiftUI","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to add in-app purchases in SwiftUI","description":"Article(s) > How to add in-app purchases in SwiftUI","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to add in-app purchases in SwiftUI"},{"property":"og:description","content":"How to add in-app purchases in SwiftUI"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-in-app-purchases-in-swiftui.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-in-app-purchases-in-swiftui.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to add in-app purchases in SwiftUI"}],["meta",{"property":"og:description","content":"Article(s) > How to add in-app purchases in SwiftUI"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-1~dark@2x.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to add in-app purchases in SwiftUI\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-1~dark@2x.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-2~dark@2x.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-3~dark@2x.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-4~dark@2x.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-5~dark@2x.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-6~dark@2x.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-7~dark@2x.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-in-app-purchases-in-swiftui-8~dark@2x.gif\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":5.06,"words":1517},"filePathRelative":"hackingwithswift.com/swiftui/how-to-add-in-app-purchases-in-swiftui.md","excerpt":"\\n"}');export{M as comp,W as data};
