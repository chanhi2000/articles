import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as n,t as c,e as a,n as t,g as e,f as p,r,o as u}from"./app-BgNevrm5.js";const g={},d={id:"frontmatter-title-관련",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-관련"},k=n("nav",{class:"table-of-contents"},[n("ul")],-1),w=n("hr",null,null,-1),m=p(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in watchOS 10</strong></p><p>SwiftUI provides a <code>.verticalPage</code> tab view style that allows us to make vertically scrolling tabs on watchOS, as opposed to the default horizontal. Because these live alongside scrolling lists, it&#39;s really important you think carefully about mixing the two.</p><p>First, here&#39;s a simple code sample:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">TabView</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;First&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;First Title&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Second&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Second Title&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Third&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Third Title&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">tabViewStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>verticalPage<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>watchOS will automatically use each tab&#39;s navigation title as the user scrolls through.</p><p>When dealing with other scrolling containers inside tabs, it&#39;s imperative you keep scrolling to the last view in a tab, otherwise users might be trying to flick through and accidentally change tabs instead.</p><p>So, in this code sample there are two regular tabs, followed by a scrolling list:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">TabView</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;First&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;First Title&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Second&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Second Title&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token class-name">List</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">..&lt;</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> i <span class="token keyword">in</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Row </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">i</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Third Title&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">tabViewStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>verticalPage<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),v={class:"hint-container details"},b=n("summary",null,"Similar solutions…",-1);function f(i,y){const s=r("VPCard");return u(),l("div",null,[n("h1",d,[n("a",h,[n("span",null,c(i.$frontmatter.title)+" 관련",1)])]),a(s,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),k,w,a(s,t(e({title:"How to enable vertical page scrolling | SwiftUI by Example",desc:"How to enable vertical page scrolling",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-enable-vertical-page-scrolling",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),m,n("details",v,[b,a(s,t(e({title:"How to add horizontal and vertical scrolling using ScrollView | SwiftUI by Example",desc:"How to add horizontal and vertical scrolling using ScrollView",link:"/hackingwithswift.com/swiftui/how-to-add-horizontal-and-vertical-scrolling-using-scrollview.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to create scrolling pages of content using tabViewStyle() | SwiftUI by Example",desc:"How to create scrolling pages of content using tabViewStyle()",link:"/hackingwithswift.com/swiftui/how-to-create-scrolling-pages-of-content-using-tabviewstyle.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to enable editing on a list using EditButton | SwiftUI by Example",desc:"How to enable editing on a list using EditButton",link:"/hackingwithswift.com/swiftui/how-to-enable-editing-on-a-list-using-editbutton.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to enable pull to refresh | SwiftUI by Example",desc:"How to enable pull to refresh",link:"/hackingwithswift.com/swiftui/how-to-enable-pull-to-refresh.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to disable ScrollView clipping so contents overflow | SwiftUI by Example",desc:"How to disable ScrollView clipping so contents overflow",link:"/hackingwithswift.com/swiftui/how-to-disable-scrollview-clipping-so-contents-overflow",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const q=o(g,[["render",f],["__file","how-to-enable-vertical-page-scrolling.html.vue"]]),T=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-enable-vertical-page-scrolling.html","title":"How to enable vertical page scrolling","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to enable vertical page scrolling","description":"Article(s) > How to enable vertical page scrolling","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to enable vertical page scrolling"},{"property":"og:description","content":"How to enable vertical page scrolling"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-enable-vertical-page-scrolling.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-enable-vertical-page-scrolling.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to enable vertical page scrolling"}],["meta",{"property":"og:description","content":"Article(s) > How to enable vertical page scrolling"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to enable vertical page scrolling\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.67,"words":500},"filePathRelative":"hackingwithswift.com/swiftui/how-to-enable-vertical-page-scrolling.md","excerpt":"\\n"}');export{q as comp,T as data};
