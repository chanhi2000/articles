import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as t,t as l,e as a,n as o,g as r,a as e,r as h,o as u}from"./app-BgNevrm5.js";const p={},m={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},d={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},g=t("nav",{class:"table-of-contents"},[t("ul")],-1),f=t("hr",null,null,-1),w=t("blockquote",null,[t("p",null,"Available from iOS 8.0")],-1),y=t("details",{class:"hint-container details"},[t("summary",null,"Similar solutions‚Ä¶"),e(`
/quick-start/concurrency/how-to-get-a-result-from-a-task">How to get a Result from a task 
/quick-start/concurrency/how-to-handle-different-result-types-in-a-task-group">How to handle different result types in a task group 
/quick-start/swiftui/how-to-fix-function-declares-an-opaque-return-type-but-has-no-return-statements-in-its-body-from-which-to-infer-an-underlying-ty">How to fix ‚ÄúFunction declares an opaque return type, but has no return statements in its body from which to infer an underlying type‚Äù 
/quick-start/swiftui/how-to-fix-cannot-convert-value-of-type-to-expected-argument-type">How to fix ‚ÄúCannot convert value of type '() -> ()' to expected argument type '() -> _‚Äô‚Äù 
/quick-start/swiftui/how-to-fix-cannot-convert-value-of-type-string-to-expected-argument-type-text">How to fix ‚ÄúCannot convert value of type 'String' to expected argument type 'Text'"</a>
`)],-1);function k(i,b){const n=h("VPCard");return u(),c("div",null,[t("h1",m,[t("a",d,[t("span",null,l(i.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),a(n,o(r({title:"Language - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/language/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,f,a(n,o(r({title:"What is the Result type? | Language - free Swift example code",desc:"What is the Result type?",link:"https://hackingwithswift.com/example-code/language/what-is-the-result-type",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,e(" TODO: ÏûëÏÑ± "),e(` 
<p style="margin: 0; margin-bottom: 20px;"><a href="/about">Paul Hudson</a>    <i class="fab fa-twitter" aria-hidden="true" style="color: #4099ff"></i> <a href="https://twitter.com/twostraws" target="_blank">@twostraws</a>    <time itemprop="dateModified" datetime="2019-05-28T20:41:20+00:00">May 28th 2019</time><meta itemprop="datePublished" content="2019-05-28T20:41:20+00:00">

The \`Result\` type lets us encapsulate the success or failure of a method call in a single value, while also storing the contents of the successful return or the type of failure that occurred. More importantly, \`Result\` only stores one of these at a time: it will either be a success or a failure.

For example, we could use \`Result\` to handle networking. First we‚Äôd create a NetworkError\` enum containing all the things that might go wrong:

\`\`\`swift
enum NetworkError: Error {
    case badURL
}
\`\`\`

Next we‚Äôd write a method that calls a completion handler with some sort of \`Result\`. In this instance we‚Äôre going to return the number of unread messages a user has in their inbox, or a \`NetworkError\` if something went wrong:

\`\`\`swift
func fetchUnreadCount(from urlString: String, completionHandler: @escaping (Result<Int, NetworkError>) -> Void)  {
    guard let url = URL(string: urlString) else {
        completionHandler(.failure(.badURL))
        return
    }

    // complicated networking code here
    print("Fetching \\(url.absoluteString)...")
    completionHandler(.success(5))
}
\`\`\`

**Tip:** That code uses a completion handler rather than a simple return type because networking code will block the main thread ‚Äì we want the method to return immediately and perform any complicated networking code in the background.

We can now call that method with a URL and evaluate what gets sent back. Remember. this will either be a success (sending us back the unread messages count), or a failure (sending us back what went wrong). Here‚Äôs the code:

\`\`\`swift
fetchUnreadCount(from: "https://www.hackingwithswift.com") { result in
    switch result {
    case .success(let count):
        print("\\(count) unread messages.")
    case .failure(let error):
        print(error.localizedDescription)
    }
}
\`\`\`

`),y])}const R=s(p,[["render",k],["__file","what-is-the-result-type.html.vue"]]),v=JSON.parse('{"path":"/hackingwithswift.com/example-code/language/what-is-the-result-type.html","title":"What is the Result type?","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"What is the Result type?","description":"Article(s) > What is the Result type?","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-8.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > What is the Result type?"},{"property":"og:description","content":"What is the Result type?"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/language/what-is-the-result-type.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/language/what-is-the-result-type.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"What is the Result type?"}],["meta",{"property":"og:description","content":"Article(s) > What is the Result type?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-8.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"What is the Result type?\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.07,"words":621},"filePathRelative":"hackingwithswift.com/example-code/language/what-is-the-result-type.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{R as comp,v as data};
