import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as t,t as s,e as a,n,g as r,a as o,r as h,o as p}from"./app-BgNevrm5.js";const m={},f={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},d={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},u=t("nav",{class:"table-of-contents"},[t("ul")],-1),g=t("hr",null,null,-1),w=t("blockquote",null,[t("p",null,"Available from iOS 8.0")],-1),b=t("details",{class:"hint-container details"},[t("summary",null,"Similar solutions‚Ä¶"),o(`
/example-code/language/how-to-conform-to-the-comparable-protocol">How to conform to the Comparable protocol 
/example-code/language/how-to-conform-to-the-equatable-protocol">How to conform to the Equatable protocol 
/quick-start/swiftui/how-to-fix-referencing-initializer-initwrappedvalue-on-observedobject-requires-that-sometype-conform-to-observableobject">How to fix ‚ÄúReferencing initializer 'init(wrappedValue:)' on 'ObservedObject' requires that ‚ÄòSomeType‚Äô conform to 'ObservableObject'" 
/quick-start/swiftui/how-to-fix-initializer-init-rowcontent-requires-that-sometype-conform-to-identifiable">How to fix ‚ÄúInitializer 'init(_:rowContent:)' requires that ‚ÄòSomeType‚Äô conform to 'Identifiable‚Äô‚Äù 
/example-code/language/how-to-constrain-a-protocol-associated-type">How to constrain a protocol associated type</a>
`)],-1);function y(i,H){const e=h("VPCard");return p(),l("div",null,[t("h1",f,[t("a",d,[t("span",null,s(i.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),a(e,n(r({title:"Language - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/language/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),u,g,a(e,n(r({title:"How to conform to the Hashable protocol | Language - free Swift example code",desc:"How to conform to the Hashable protocol",link:"https://hackingwithswift.com/example-code/language/how-to-conform-to-the-hashable-protocol",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,o(" TODO: ÏûëÏÑ± "),o(" \nIn Swift, conforming to the `Hashable` protocol is often just as easy as adding `Hashable` to your conformance list. However, if you have custom requirements, or use properties that don‚Äôt all conform to `Hashable`, it takes a little more work.\n\nHere‚Äôs an example struct we can work with:\n\n```swift\nstruct iPad: Hashable {\n    var serialNumber: String\n    var capacity: Int\n}\n```\n\nBecause that conforms to the `Hashable` protocol and both its properties also conform to the `Hashable` protocol, Swift will generate a `hash(into:)` method automatically.\n\nHowever, in this case we can see that `serialNumber` is enough to identify each iPad uniquely so hashing `capacity` isn‚Äôt needed. So, we can write our own implementation of `hash(into:)` that hashes just that one property:\n\n```swift\nfunc hash(into hasher: inout Hasher) {\n    hasher.combine(serialNumber)\n}\n```\n\nYou can add more properties to your hash by calling `combine()` repeatedly, and the order in which you add properties affects the finished hash value.\n\nSwift uses a random seed every time it hashes an object, which means the hash value for any object is effectively guaranteed to be different between runs of your app.\n\nThis in turn means that elements you add to a set or a dictionary are highly likely to have a different order each time you run your app.\n\n"),b])}const v=c(m,[["render",y],["__file","how-to-conform-to-the-hashable-protocol.html.vue"]]),x=JSON.parse('{"path":"/hackingwithswift.com/example-code/language/how-to-conform-to-the-hashable-protocol.html","title":"How to conform to the Hashable protocol","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to conform to the Hashable protocol","description":"Article(s) > How to conform to the Hashable protocol","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-8.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to conform to the Hashable protocol"},{"property":"og:description","content":"How to conform to the Hashable protocol"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/language/how-to-conform-to-the-hashable-protocol.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/language/how-to-conform-to-the-hashable-protocol.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to conform to the Hashable protocol"}],["meta",{"property":"og:description","content":"Article(s) > How to conform to the Hashable protocol"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-8.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to conform to the Hashable protocol\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.62,"words":487},"filePathRelative":"hackingwithswift.com/example-code/language/how-to-conform-to-the-hashable-protocol.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{v as comp,x as data};
