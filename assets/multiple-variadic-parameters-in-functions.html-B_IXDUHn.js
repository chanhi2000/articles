import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,t as u,e as a,n as s,g as i,d as e,a as m,f as d,r as c,o as h}from"./app-BgNevrm5.js";const f={},g={id:"frontmatter-title-관련",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-관련"},w=n("nav",{class:"table-of-contents"},[n("ul")],-1),v=n("hr",null,null,-1),b=n("blockquote",null,[n("p",null,"Available from Swift 5.4")],-1),y={href:"https://github.com/apple/swift-evolution/blob/main/proposals/0284-multiple-variadic-parameters.md",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"apple/swift-evolution",-1),S=d(`<p>So, with this improvement in place we could write a function that accepts a variadic parameter storing the times goals were scored during a football match, plus a second variadic parameter scoring the names of players who scored:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token class-name">Foundation</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function-definition function">summarizeGoals</span><span class="token punctuation">(</span>times<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token operator">...</span><span class="token punctuation">,</span> players<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> joinedNames <span class="token operator">=</span> <span class="token class-name">ListFormatter</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span>byJoining<span class="token punctuation">:</span> players<span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">let</span> joinedTimes <span class="token operator">=</span> <span class="token class-name">ListFormatter</span><span class="token punctuation">.</span><span class="token function">localizedString</span><span class="token punctuation">(</span>byJoining<span class="token punctuation">:</span> times<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">times<span class="token punctuation">.</span>count</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> goals where scored by </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">joinedNames</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> at the follow minutes: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">joinedTimes</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>To call that function, provide both sets of values as variadic parameters, making sure that all parameters after the first variadic are labeled:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token function">summarizeGoals</span><span class="token punctuation">(</span>times<span class="token punctuation">:</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> players<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Dani&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Jamie&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Roy&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,4),C={class:"hint-container details"},x=n("summary",null,"Other Changes in Swift 5.4",-1),M={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-5-3-to-5-4.playground.zip",target:"_blank",rel:"noopener noreferrer"};function P(l,q){const t=c("VPCard"),o=c("FontIcon");return h(),r("div",null,[n("h1",g,[n("a",k,[n("span",null,u(l.$frontmatter.title)+" 관련",1)])]),a(t,s(i({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),w,v,a(t,s(i({title:"Multiple variadic parameters in functions | Changes in Swift 5.4",desc:"Multiple variadic parameters in functions",link:"https://hackingwithswift.com/swift/5.4/multiple-variadic-parameters-in-functions",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("p",null,[n("a",y,[e("SE-0284 ("),a(o,{icon:"iconfont icon-github"}),_,e(")")]),e(" introduced the ability to have functions, subscripts, and initializers use multiple variadic parameters as long as all parameters that follow a variadic parameter have labels. Before Swift 5.4, you could only have one variadic parameter in this situation.")]),S,n("details",C,[x,a(t,s(i({title:"Improved implicit member syntax | Changes in Swift 5.4",desc:"Improved implicit member syntax",link:"/hackingwithswift.com/swift/5.4/improved-implicit-member-syntax.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),m(` 
\`\`\`component VPCard
{
  "title": "Multiple variadic parameters in functions | Changes in Swift 5.4",
  "desc": "Multiple variadic parameters in functions",
  "link": "/hackingwithswift.com/swift/5.4/multiple-variadic-parameters-in-functions.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),a(t,s(i({title:"Local functions now support overloading | Changes in Swift 5.4",desc:"Local functions now support overloading",link:"/hackingwithswift.com/swift/5.4/local-functions-now-support-overloading.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,s(i({title:"Creating variables that call a function of the same name | Changes in Swift 5.4",desc:"Creating variables that call a function of the same name",link:"/hackingwithswift.com/swift/5.4/local-variables-same-name.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,s(i({title:"Result builders | Changes in Swift 5.4",desc:"Result builders",link:"/hackingwithswift.com/swift/5.4/result-builders.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,s(i({title:"Property wrappers are now supported for local variables | Changes in Swift 5.4",desc:"Property wrappers are now supported for local variables",link:"/hackingwithswift.com/swift/5.4/local-property-wrappers.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,s(i({title:"Packages can now declare executable targets | Changes in Swift 5.4",desc:"Packages can now declare executable targets",link:"/hackingwithswift.com/swift/5.4/spm-executable-targets.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n("p",null,[n("a",M,[a(o,{icon:"fas fa-file-zipper"}),e("Download Swift 5.4 playground")])])])])}const R=p(f,[["render",P],["__file","multiple-variadic-parameters-in-functions.html.vue"]]),V=JSON.parse('{"path":"/hackingwithswift.com/swift/5.4/multiple-variadic-parameters-in-functions.html","title":"Multiple variadic parameters in functions","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Multiple variadic parameters in functions","description":"Article(s) > Multiple variadic parameters in functions","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-5.4"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Multiple variadic parameters in functions"},{"property":"og:description","content":"Multiple variadic parameters in functions"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.4/multiple-variadic-parameters-in-functions.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.4/multiple-variadic-parameters-in-functions.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Multiple variadic parameters in functions"}],["meta",{"property":"og:description","content":"Article(s) > Multiple variadic parameters in functions"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.4"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Multiple variadic parameters in functions\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.79,"words":538},"filePathRelative":"hackingwithswift.com/swift/5.4/multiple-variadic-parameters-in-functions.md","excerpt":"\\n"}');export{R as comp,V as data};
