import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as n,t as m,e as s,n as t,g as e,d as i,f as u,r as o,o as g}from"./app-BgNevrm5.js";const f={},h={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},b=n("nav",{class:"table-of-contents"},[n("ul")],-1),w=n("hr",null,null,-1),v=u(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI lets us disable any part of its forms or even the whole form, all by using the <code>disabled()</code> modifier. This takes a single Boolean that defines whether the element should be disabled or not. The form element&#39;s style automatically gets updated to reflect its status â€“ buttons and toggles get grayed out, for example.</p><p>For example, this creates a form with two sections: one containing a toggle, and one containing a button that is enabled only when the toggle is on:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> agreedToTerms <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Form</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Section</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Agree to terms and conditions&quot;</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> $agreedToTerms<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Section</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Continue&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Thank you!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">disabled</span><span class="token punctuation">(</span>agreedToTerms <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),y={href:"https://hackingwithswift.com/files/projects/swiftui/enabling-and-disabling-elements-in-forms-1.zip",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,[i("As you can see, the button is disabled just by adding "),n("code",null,"disabled(agreedToTerms == false)"),i(" to the list of modifiers.")],-1),S=n("p",null,[i("Like many other SwiftUI modifiers, you can lift "),n("code",null,"disabled()"),i(" so that it's run on the section or even the whole form depending on what behavior you want â€“ just move it to come after the section, for example.")],-1),x={class:"hint-container details"},E=n("summary",null,"Similar solutionsâ€¦",-1);function I(l,U){const a=o("VPCard"),c=o("FontIcon"),p=o("VidStack");return g(),d("div",null,[n("h1",h,[n("a",k,[n("span",null,m(l.$frontmatter.title)+" ê´€ë ¨",1)])]),s(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),b,w,s(a,t(e({title:"Enabling and disabling elements in forms | SwiftUI by Example",desc:"Enabling and disabling elements in forms",link:"https://hackingwithswift.com/quick-start/swiftui/enabling-and-disabling-elements-in-forms",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,n("blockquote",null,[n("p",null,[n("a",y,[s(c,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),s(p,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/enabling-and-disabling-elements-in-forms-1~dark.mp4"}),_,S,n("details",x,[E,s(a,t(e({title:"All SwiftUI property wrappers explained and compared | SwiftUI by Example",desc:"All SwiftUI property wrappers explained and compared",link:"/hackingwithswift.com/swiftui/all-swiftui-property-wrappers-explained-and-compared.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Bindings and forms | SwiftUI by Example",desc:"Bindings and forms",link:"/hackingwithswift.com/swiftui/bindings-and-forms.html",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Breaking forms into sections | SwiftUI by Example",desc:"Breaking forms into sections",link:"/hackingwithswift.com/swiftui/breaking-forms-into-sections.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Working with forms | SwiftUI by Example",desc:"Working with forms",link:"/hackingwithswift.com/swiftui/working-with-forms.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const A=r(f,[["render",I],["__file","enabling-and-disabling-elements-in-forms.html.vue"]]),B=JSON.parse('{"path":"/hackingwithswift.com/swiftui/enabling-and-disabling-elements-in-forms.html","title":"Enabling and disabling elements in forms","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Enabling and disabling elements in forms","description":"Article(s) > Enabling and disabling elements in forms","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Enabling and disabling elements in forms"},{"property":"og:description","content":"Enabling and disabling elements in forms"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/enabling-and-disabling-elements-in-forms.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/enabling-and-disabling-elements-in-forms.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"Enabling and disabling elements in forms"}],["meta",{"property":"og:description","content":"Article(s) > Enabling and disabling elements in forms"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Enabling and disabling elements in forms\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.62,"words":487},"filePathRelative":"hackingwithswift.com/swiftui/enabling-and-disabling-elements-in-forms.md","excerpt":"\\n"}');export{A as comp,B as data};
