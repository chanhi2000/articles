import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as n,t as m,e as s,n as t,g as e,d as c,f as l,r as p,o as k}from"./app-BgNevrm5.js";const h={},w={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},b=n("nav",{class:"table-of-contents"},[n("ul")],-1),v=n("hr",null,null,-1),g=l(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>Improved in iOS 17</strong></p><p>SwiftUI has built-in support for animations with its <code>animation()</code> modifier. To use this modifier, place it after any other modifiers for your views, tell it what kind of animation you want, and also make sure you attach it to a particular value so the animation triggers only when that specific value changes.</p><p>For example, this code creates a button that increases its scale effect by 1 each time it’s pressed:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale <span class="token operator">=</span> <span class="token number">1.0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Press here&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            scale <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">linear</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> value<span class="token punctuation">:</span> scale<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-basic-animations-1.zip",target:"_blank",rel:"noopener noreferrer"},_=l(`<p>That makes the animation happen over 1 second, but if you don’t want to specify a precise time for your animation you can just use <code>.linear</code>.</p><div class="hint-container important"><p class="hint-container-title">Important</p><p>From iOS 17 and later SwiftUI uses spring animations by default, but before that used linear animations by default.</p></div><p>Instead of simple linear animations you can specify a curve from various built-in options, including:</p><ul><li><code>.easeIn</code> starts slow then accelerates until the end.</li><li><code>.easeOut</code> starts fast then slows down near the end.</li><li><code>.easeInOut</code> starts slow, accelerates in the middle, then slows down near the end.</li><li><code>.smooth</code> is a spring animation with no bounce (from iOS 17)</li><li><code>.snappy</code> is a spring animation with a little bounce (from iOS 17)</li><li><code>.bouncy</code> is a spring animation with a medium amount of bounce (from iOS 17)</li></ul><p>Alternatively, you can specify <code>.timingCurve</code> to specify your own control points.</p><p>For example, this animates the scale effect so that it starts slow and gets faster:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale <span class="token operator">=</span> <span class="token number">1.0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Press here&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            scale <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span>easeIn<span class="token punctuation">,</span> value<span class="token punctuation">:</span> scale<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-basic-animations-2.zip",target:"_blank",rel:"noopener noreferrer"},x=l(`<p>You can animate many other modifiers, such as 2D and 3D rotation, opacity, border, and more. For example, this makes a button that spins around and increases its border every time it’s tapped:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> angle <span class="token operator">=</span> <span class="token number">0.0</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> borderThickness <span class="token operator">=</span> <span class="token number">1.0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Press here&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            angle <span class="token operator">+=</span> <span class="token number">45</span></span>
<span class="line">            borderThickness <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">border</span><span class="token punctuation">(</span><span class="token punctuation">.</span>red<span class="token punctuation">,</span> width<span class="token punctuation">:</span> borderThickness<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">rotationEffect</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">degrees</span><span class="token punctuation">(</span>angle<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">animation</span><span class="token punctuation">(</span><span class="token punctuation">.</span>easeIn<span class="token punctuation">,</span> value<span class="token punctuation">:</span> angle<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),H={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-basic-animations-3.zip",target:"_blank",rel:"noopener noreferrer"},I={class:"hint-container details"},q=n("summary",null,"Similar solutions…",-1);function V(r,E){const a=p("VPCard"),i=p("FontIcon"),o=p("VidStack");return k(),d("div",null,[n("h1",w,[n("a",f,[n("span",null,m(r.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),b,v,s(a,t(e({title:"How to create basic animations | SwiftUI by Example",desc:"How to create basic animations",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-create-basic-animations",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),g,n("blockquote",null,[n("p",null,[n("a",y,[s(i,{icon:"fas fa-file-zipper"}),c("Download this as an Xcode project")])])]),s(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-basic-animations-1~dark.mp4"}),_,n("blockquote",null,[n("p",null,[n("a",S,[s(i,{icon:"fas fa-file-zipper"}),c("Download this as an Xcode project")])])]),s(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-basic-animations-2~dark.mp4"}),x,n("blockquote",null,[n("p",null,[n("a",H,[s(i,{icon:"fas fa-file-zipper"}),c("Download this as an Xcode project")])])]),s(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-basic-animations-3~dark.mp4"}),n("details",I,[q,s(a,t(e({title:"How to create multi-step animations using phase animators | SwiftUI by Example",desc:"How to create multi-step animations using phase animators",link:"/hackingwithswift.com/swiftui/how-to-create-multi-step-animations-using-phase-animators.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to synchronize animations from one view to another with matchedGeometryEffect() | SwiftUI by Example",desc:"How to synchronize animations from one view to another with matchedGeometryEffect()",link:"/hackingwithswift.com/swiftui/how-to-synchronize-animations-from-one-view-to-another-with-matchedgeometryeffect.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to override animations with transactions | SwiftUI by Example",desc:"How to override animations with transactions",link:"/hackingwithswift.com/swiftui/how-to-override-animations-with-transactions.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to apply multiple animations to a view | SwiftUI by Example",desc:"How to apply multiple animations to a view",link:"/hackingwithswift.com/swiftui/how-to-apply-multiple-animations-to-a-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to reduce animations when requested | SwiftUI by Example",desc:"How to reduce animations when requested",link:"/hackingwithswift.com/swiftui/how-to-reduce-animations-when-requested.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const z=u(h,[["render",V],["__file","how-to-create-basic-animations.html.vue"]]),B=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-create-basic-animations.html","title":"How to create basic animations","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to create basic animations","description":"Article(s) > How to create basic animations","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to create basic animations"},{"property":"og:description","content":"How to create basic animations"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-basic-animations.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-basic-animations.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to create basic animations"}],["meta",{"property":"og:description","content":"Article(s) > How to create basic animations"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to create basic animations\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"prev":"/hackingwithswift.com/swiftui/how-to-create-custom-text-effects-and-animations.md"},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.63,"words":790},"filePathRelative":"hackingwithswift.com/swiftui/how-to-create-basic-animations.md","excerpt":"\\n"}');export{z as comp,B as data};
