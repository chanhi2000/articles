import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as n,t as u,e as s,n as t,g as e,a as r,d as k,f as d,r as o,o as m}from"./app-BgNevrm5.js";const f={},h={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},g=n("nav",{class:"table-of-contents"},[n("ul")],-1),v=n("hr",null,null,-1),b=d(`<blockquote><p>Available from Swift 3.0</p></blockquote><p>The way we call functions and methods already changed in Swift 2.0, but it&#39;s changing again and this time it&#39;s going to break <em>everything</em>. In Swift 2.x and earlier, method names did not require a label for their first parameter, so the name of the first parameter was usually built into the method name. For example:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line">names<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Taylor&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token string-literal"><span class="token string">&quot;Taylor&quot;</span></span><span class="token punctuation">.</span><span class="token function">writeToFile</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;filename&quot;</span></span><span class="token punctuation">,</span> atomically<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> encoding<span class="token punctuation">:</span> <span class="token class-name">NSUTF8StringEncoding</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">rotateByAngle</span><span class="token punctuation">(</span><span class="token class-name">CGFloat</span><span class="token punctuation">(</span>M_PI_2<span class="token punctuation">)</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token class-name">UIFont</span><span class="token punctuation">.</span><span class="token function">preferredFontForTextStyle</span><span class="token punctuation">(</span><span class="token class-name">UIFontTextStyleSubheadline</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">numberOfSectionsInTableView</span><span class="token punctuation">(</span>tableView<span class="token punctuation">:</span> <span class="token class-name">UITableView</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Int</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function-definition function">viewForZoomingInScrollView</span><span class="token punctuation">(</span>scrollView<span class="token punctuation">:</span> <span class="token class-name">UIScrollView</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">UIView</span><span class="token operator">?</span></span>
<span class="line"><span class="token class-name">NSTimer</span><span class="token punctuation">.</span><span class="token function">scheduledTimerWithTimeInterval</span><span class="token punctuation">(</span><span class="token number">0.35</span><span class="token punctuation">,</span> target<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">,</span> selector<span class="token punctuation">:</span> <span class="token other-directive property">#selector</span><span class="token punctuation">(</span>createEnemy<span class="token punctuation">)</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> repeats<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Swift 3 makes all labels required unless you specify otherwise, which means the method names no longer detail their parameters. In practice, this often means the last part of the method name gets moved to be the name of the first parameter.</p><p>To show you how that looks, here is that Swift 2.2 code followed by its equivalent in Swift 3:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line">names<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Taylor&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">names<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Taylor&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token string-literal"><span class="token string">&quot;Taylor&quot;</span></span><span class="token punctuation">.</span><span class="token function">writeToFile</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;filename&quot;</span></span><span class="token punctuation">,</span> atomically<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> encoding<span class="token punctuation">:</span> <span class="token class-name">NSUTF8StringEncoding</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token string-literal"><span class="token string">&quot;Taylor&quot;</span></span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>toFile<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;somefile&quot;</span></span><span class="token punctuation">,</span> atomically<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> encoding<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token class-name">Encoding</span><span class="token punctuation">.</span>utf8<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">rotateByAngle</span><span class="token punctuation">(</span><span class="token class-name">CGFloat</span><span class="token punctuation">(</span>M_PI_2<span class="token punctuation">)</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token class-name">SKAction</span><span class="token punctuation">.</span><span class="token function">rotate</span><span class="token punctuation">(</span>byAngle<span class="token punctuation">:</span> <span class="token class-name">CGFloat</span><span class="token punctuation">(</span>M_PI_2<span class="token punctuation">)</span><span class="token punctuation">,</span> duration<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">UIFont</span><span class="token punctuation">.</span><span class="token function">preferredFontForTextStyle</span><span class="token punctuation">(</span><span class="token class-name">UIFontTextStyleSubheadline</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token class-name">UIFont</span><span class="token punctuation">.</span><span class="token function">preferredFont</span><span class="token punctuation">(</span>forTextStyle<span class="token punctuation">:</span> <span class="token class-name">UIFontTextStyle</span><span class="token punctuation">.</span>subheadline<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">numberOfSectionsInTableView</span><span class="token punctuation">(</span>tableView<span class="token punctuation">:</span> <span class="token class-name">UITableView</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Int</span></span>
<span class="line"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">numberOfSections</span><span class="token punctuation">(</span><span class="token keyword">in</span> tableView<span class="token punctuation">:</span> <span class="token class-name">UITableView</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Int</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">func</span> <span class="token function-definition function">viewForZoomingInScrollView</span><span class="token punctuation">(</span>scrollView<span class="token punctuation">:</span> <span class="token class-name">UIScrollView</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">UIView</span><span class="token operator">?</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function-definition function">viewForZooming</span><span class="token punctuation">(</span><span class="token keyword">in</span> scrollView<span class="token punctuation">:</span> <span class="token class-name">UIScrollView</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">UIView</span><span class="token operator">?</span></span>
<span class="line"></span>
<span class="line"><span class="token class-name">NSTimer</span><span class="token punctuation">.</span><span class="token function">scheduledTimerWithTimeInterval</span><span class="token punctuation">(</span><span class="token number">0.35</span><span class="token punctuation">,</span> target<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">,</span> selector<span class="token punctuation">:</span> <span class="token other-directive property">#selector</span><span class="token punctuation">(</span>createEnemy<span class="token punctuation">)</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> repeats<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token class-name">Timer</span><span class="token punctuation">.</span><span class="token function">scheduledTimer</span><span class="token punctuation">(</span>timeInterval<span class="token punctuation">:</span> <span class="token number">0.35</span><span class="token punctuation">,</span> target<span class="token punctuation">:</span> <span class="token keyword">self</span><span class="token punctuation">,</span> selector<span class="token punctuation">:</span> <span class="token other-directive property">#selector</span><span class="token punctuation">(</span>createEnemy<span class="token punctuation">)</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> repeats<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In that last call, notice how <code>NSTimer</code> is now just called <code>Timer</code>. Several other basic types have also dropped the &quot;NS&quot; prefix, so you&#39;ll now see <code>UserDefaults</code>, <code>FileManager</code>, <code>Data</code>, <code>Date</code>, <code>URL</code> <code>URLRequest</code>, <code>UUID</code>, <code>NotificationCenter</code>, and more.</p><p>Those are methods you <em>call</em>, but this has a knock-on effect for many methods that <em>get called</em> too: when you&#39;re connecting to frameworks such as UIKit, they expect to follow the old-style &quot;no first parameter name&quot; rule even in Swift 3.</p><p>Here are some example signatures from Swift 2.2:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">viewWillAppear</span><span class="token punctuation">(</span>animated<span class="token punctuation">:</span> <span class="token class-name">Bool</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">tableView</span><span class="token punctuation">(</span>tableView<span class="token punctuation">:</span> <span class="token class-name">UITableView</span><span class="token punctuation">,</span> numberOfRowsInSection section<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Int</span></span>
<span class="line"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">didMoveToView</span><span class="token punctuation">(</span>view<span class="token punctuation">:</span> <span class="token class-name">SKView</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">traitCollectionDidChange</span><span class="token punctuation">(</span>previousTraitCollection<span class="token punctuation">:</span> <span class="token class-name">UITraitCollection</span><span class="token operator">?</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function-definition function">textFieldShouldReturn</span><span class="token punctuation">(</span>textField<span class="token punctuation">:</span> <span class="token class-name">UITextField</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Bool</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In Swift 3, they all need an underscore before the first parameter, to signal that the caller (Objective-C code) won&#39;t be using a parameter label:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">viewWillAppear</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> animated<span class="token punctuation">:</span> <span class="token class-name">Bool</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">tableView</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> tableView<span class="token punctuation">:</span> <span class="token class-name">UITableView</span><span class="token punctuation">,</span> numberOfRowsInSection section<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Int</span></span>
<span class="line"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">didMoveToView</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> view<span class="token punctuation">:</span> <span class="token class-name">SKView</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">override</span> <span class="token keyword">func</span> <span class="token function-definition function">traitCollectionDidChange</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> previousTraitCollection<span class="token punctuation">:</span> <span class="token class-name">UITraitCollection</span><span class="token operator">?</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">func</span> <span class="token function-definition function">textFieldShouldReturn</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> textField<span class="token punctuation">:</span> <span class="token class-name">UITextField</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Bool</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),y={class:"hint-container details"},S=n("summary",null,"Changes in Swift 3.0",-1),I={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-2-2-to-3-0.playground.zip",target:"_blank",rel:"noopener noreferrer"};function T(p,_){const a=o("VPCard"),c=o("FontIcon");return m(),l("div",null,[n("h1",h,[n("a",w,[n("span",null,u(p.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),g,v,s(a,t(e({title:"All function parameters have labels unless you request otherwise | Changes in Swift 3.0",desc:"All function parameters have labels unless you request otherwise",link:"https://hackingwithswift.com/swift/3.0/function-parameters",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("details",y,[S,r(` 
\`\`\`component VPCard
{
  "title": "All function parameters have labels unless you request otherwise | Changes in Swift 3.0",
  "desc": "All function parameters have labels unless you request otherwise",
  "link": "/hackingwithswift.com/swift/3.0/function-parameters.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),s(a,t(e({title:"Omit needless words | Changes in Swift 3.0",desc:"Omit needless words",link:"/hackingwithswift.com/swift/3.0/omit-needless-words.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"UpperCamelCase has been replaced with lowerCamelCase for enums and properties | Changes in Swift 3.0",desc:"UpperCamelCase has been replaced with lowerCamelCase for enums and properties",link:"/hackingwithswift.com/swift/3.0/lower-camel-case.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Swifty importing of C functions | Changes in Swift 3.0",desc:"Swifty importing of C functions",link:"/hackingwithswift.com/swift/3.0/c-functions.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Verbs and nouns | Changes in Swift 3.0",desc:"Verbs and nouns",link:"/hackingwithswift.com/swift/3.0/verbs-and-nouns.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n("p",null,[n("a",I,[s(c,{icon:"fas fa-file-zipper"}),k("Download Swift 3.0 playground")])])])])}const C=i(f,[["render",T],["__file","function-parameters.html.vue"]]),F=JSON.parse('{"path":"/hackingwithswift.com/swift/3.0/function-parameters.html","title":"All function parameters have labels unless you request otherwise","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"All function parameters have labels unless you request otherwise","description":"Article(s) > All function parameters have labels unless you request otherwise","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-3.0"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > All function parameters have labels unless you request otherwise"},{"property":"og:description","content":"All function parameters have labels unless you request otherwise"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/3.0/function-parameters.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/3.0/function-parameters.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"All function parameters have labels unless you request otherwise"}],["meta",{"property":"og:description","content":"Article(s) > All function parameters have labels unless you request otherwise"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-3.0"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"All function parameters have labels unless you request otherwise\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"prev":"/hackingwithswift.com/swift/3.1/prefix-drop.md","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.52,"words":756},"filePathRelative":"hackingwithswift.com/swift/3.0/function-parameters.md","excerpt":"\\n"}');export{C as comp,F as data};
