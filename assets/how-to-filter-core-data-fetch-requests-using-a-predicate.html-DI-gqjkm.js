import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as t,t as u,e,n as s,g as n,d as o,w as h,f as d,r as i,o as f}from"./app-BgNevrm5.js";const w={},m={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},k=t("nav",{class:"table-of-contents"},[t("ul")],-1),y=t("hr",null,null,-1),b=t("blockquote",null,[t("p",null,"Updated for Xcode 15")],-1),v=t("p",null,[o("Core Data fetch requests can use predicates in SwiftUI just like they can with UIKit, all by providing a "),t("code",null,"predicate"),o(" property to your "),t("code",null,"@FetchRequest"),o(" property wrapper.")],-1),q=d(`<p>Once thatâ€™s done, you can create a fetch request for one of your entities, passing in one or more sort descriptors and a predicate. These predicates are the same instances of <code>NSPredicate</code> that you would use without SwiftUI, which means you can use the same variety of string operations you would normally use.</p><p>For example, using the example data from my setup instructions we could create a predicate like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">NSPredicate</span><span class="token punctuation">(</span>format<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;name == %@&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Python&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>That will show details about Python, while ignoring other data.</p><p>We could use that inside a fetch request like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@FetchRequest</span><span class="token punctuation">(</span></span>
<span class="line">    sortDescriptors<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    predicate<span class="token punctuation">:</span> <span class="token class-name">NSPredicate</span><span class="token punctuation">(</span>format<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;name == %@&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Python&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span> <span class="token keyword">var</span> languages<span class="token punctuation">:</span> <span class="token class-name">FetchedResults</span><span class="token operator">&lt;</span><span class="token class-name">ProgrammingLanguage</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Because <code>@FetchRequest</code> uses standard Core Data predicates, you can create compound predicates too.</p>`,7),_={class:"hint-container details"},S=t("summary",null,"Similar solutionsâ€¦",-1);function x(c,C){const a=i("VPCard"),r=i("RouteLink");return f(),p("div",null,[t("h1",m,[t("a",g,[t("span",null,u(c.$frontmatter.title)+" ê´€ë ¨",1)])]),e(a,s(n({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),k,y,e(a,s(n({title:"How to filter Core Data fetch requests using a predicate | SwiftUI by Example",desc:"How to filter Core Data fetch requests using a predicate",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-filter-core-data-fetch-requests-using-a-predicate",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,v,t("p",null,[o("If you followed my "),e(r,{to:"/hackingwithswift.com/swiftui/how-to-configure-core-data-to-work-with-swiftui.html"},{default:h(()=>[o("Core Data and SwiftUI set up instructions")]),_:1}),o(", youâ€™ve already injected your managed object context into the SwiftUI environment.")]),q,t("details",_,[S,e(a,s(n({title:"How to create a Core Data fetch request using @FetchRequest | SwiftUI by Example",desc:"How to create a Core Data fetch request using @FetchRequest",link:"/hackingwithswift.com/swiftui/how-to-create-a-core-data-fetch-request-using-fetchrequest.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(a,s(n({title:"How to limit the number of items in a fetch request | SwiftUI by Example",desc:"How to limit the number of items in a fetch request",link:"/hackingwithswift.com/swiftui/how-to-limit-the-number-of-items-in-a-fetch-request.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(a,s(n({title:"How to add a search bar to filter your data | SwiftUI by Example",desc:"How to add a search bar to filter your data",link:"/hackingwithswift.com/swiftui/how-to-add-a-search-bar-to-filter-your-data.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(a,s(n({title:"All SwiftUI property wrappers explained and compared | SwiftUI by Example",desc:"All SwiftUI property wrappers explained and compared",link:"/hackingwithswift.com/swiftui/all-swiftui-property-wrappers-explained-and-compared.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(a,s(n({title:"How to configure Core Data to work with SwiftUI | SwiftUI by Example",desc:"How to configure Core Data to work with SwiftUI",link:"/hackingwithswift.com/swiftui/how-to-configure-core-data-to-work-with-swiftui.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const U=l(w,[["render",x],["__file","how-to-filter-core-data-fetch-requests-using-a-predicate.html.vue"]]),I=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-filter-core-data-fetch-requests-using-a-predicate.html","title":"How to filter Core Data fetch requests using a predicate","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to filter Core Data fetch requests using a predicate","description":"Article(s) > How to filter Core Data fetch requests using a predicate","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to filter Core Data fetch requests using a predicate"},{"property":"og:description","content":"How to filter Core Data fetch requests using a predicate"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-filter-core-data-fetch-requests-using-a-predicate.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-filter-core-data-fetch-requests-using-a-predicate.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"How to filter Core Data fetch requests using a predicate"}],["meta",{"property":"og:description","content":"Article(s) > How to filter Core Data fetch requests using a predicate"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to filter Core Data fetch requests using a predicate\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.92,"words":575},"filePathRelative":"hackingwithswift.com/swiftui/how-to-filter-core-data-fetch-requests-using-a-predicate.md","excerpt":"\\n"}');export{U as comp,I as data};
