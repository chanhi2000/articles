import{_ as f}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as b,b as e,t as v,e as a,n as u,g as h,w as t,d as n,f as r,r as i,o as w}from"./app-BgNevrm5.js";const y={},_={id:"frontmatter-title-관련",tabindex:"-1"},S={class:"header-anchor",href:"#frontmatter-title-관련"},x={class:"table-of-contents"},T=e("hr",null,null,-1),R={href:"https://nextjs.org/",target:"_blank",rel:"noopener noreferrer"},P={href:"https://gatsbyjs.com/",target:"_blank",rel:"noopener noreferrer"},j=e("a",{href:"https://remix.run/",target:"_blank",rel:"noopener noreferrer"},"Remix",-1),H=e("p",null,"These frameworks use the concepts of Pre-rendering and Hydration, which represent significant advancements in the history of web development.",-1),A=e("p",null,"These frameworks leverage these concepts to create toolchains that build efficient web applications. In this article, we’ll discuss Pre-rendering and Hydration and why they are important features to use when building single-page applications.",-1),D=e("p",null,"To understand these concepts, we need to explore why they were created and what problem they are trying to solve. Let's take a look at the beginning of web applications.",-1),W=e("hr",null,null,-1),I=e("h2",{id:"web-development-in-the-past-traditional-server-side-rendering",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#web-development-in-the-past-traditional-server-side-rendering"},[e("span",null,"Web Development in the Past: Traditional Server-Side Rendering")])],-1),E={href:"https://nodejs.org/en",target:"_blank",rel:"noopener noreferrer"},M={href:"https://php.net/",target:"_blank",rel:"noopener noreferrer"},L={href:"https://java.com/en/",target:"_blank",rel:"noopener noreferrer"},J={href:"https://rubyonrails.org/",target:"_blank",rel:"noopener noreferrer"},N=e("strong",null,"views",-1),C={href:"https://en.wikipedia.org/wiki/Jakarta_Server_Pages",target:"_blank",rel:"noopener noreferrer"},F=e("a",{href:"https://ejs.co/",target:"_blank",rel:"noopener noreferrer"},"EJS",-1),G={href:"https://jquery.com/",target:"_blank",rel:"noopener noreferrer"},q=r('<h3 id="the-downside-of-traditional-server-side-rendering" tabindex="-1"><a class="header-anchor" href="#the-downside-of-traditional-server-side-rendering"><span>The Downside of Traditional Server-Side Rendering</span></a></h3><h4 id="_1-performance-issues" tabindex="-1"><a class="header-anchor" href="#_1-performance-issues"><span>1. Performance Issues</span></a></h4><ul><li>A request to the server needed to be made every time the user requested a page! <ul><li>This meant there would be a full-page reload.</li><li>Complex queries could result in slower speeds.</li></ul></li></ul><h4 id="_2-scalability-challenges" tabindex="-1"><a class="header-anchor" href="#_2-scalability-challenges"><span>2. Scalability Challenges</span></a></h4>',4),V=e("strong",null,"Global Reach",-1),z=e("strong",null,"Dynamic CDN",-1),O={href:"https://cloudflare.com/products/cloudflare-workers/",target:"_blank",rel:"noopener noreferrer"},U=e("li",null,[e("strong",null,"Upscaling Servers"),n(": If more users started using the application, there would be an increase in demand on the server. You might have needed to invest more in resources such as scaling up by adding more servers.")],-1),B=e("h4",{id:"_3-duplicate-logic",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-duplicate-logic"},[e("span",null,"3. Duplicate Logic")])],-1),Y=e("ul",null,[e("li",null,"You may have duplicate code. For example, if you were trying to validate form fields, you'd have to validate in both the EJS file and your API endpoint.")],-1),Z=e("p",null,"Let's look at the code snippet below to see an example of this duplicate Logic:",-1),Q=e("div",{class:"language-javascript line-numbers-mode","data-highlighter":"prismjs","data-ext":"js","data-title":"js"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token operator"},"<"),n("form action"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},"'/submit-form'"),n(" method"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},"'POST'"),n(" id"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},'"myForm"'),e("span",{class:"token operator"},">")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token operator"},"<"),n("label "),e("span",{class:"token keyword"},"for"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},'"email"'),e("span",{class:"token operator"},">"),n("Email"),e("span",{class:"token operator"},":"),e("span",{class:"token operator"},"<"),e("span",{class:"token operator"},"/"),n("label"),e("span",{class:"token operator"},">")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token operator"},"<"),n("input type"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},'"email"'),n(" id"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},'"email"'),n(" name"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},'"email"'),n(),e("span",{class:"token operator"},"/"),e("span",{class:"token operator"},">")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token operator"},"<"),n("button type"),e("span",{class:"token operator"},"="),e("span",{class:"token string"},'"submit"'),e("span",{class:"token operator"},">"),n("Submit"),e("span",{class:"token operator"},"<"),e("span",{class:"token operator"},"/"),n("button"),e("span",{class:"token operator"},">")]),n(`
`),e("span",{class:"line"},[e("span",{class:"token operator"},"<"),e("span",{class:"token operator"},"/"),n("form"),e("span",{class:"token operator"},">")]),n(`
`),e("span",{class:"line"}),n(`
`),e("span",{class:"line"},[e("span",{class:"token operator"},"<"),n("script"),e("span",{class:"token operator"},">")]),n(`
`),e("span",{class:"line"},"  document"),n(`
`),e("span",{class:"line"},[n("    "),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"getElementById"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},"'myForm'"),e("span",{class:"token punctuation"},")")]),n(`
`),e("span",{class:"line"},[n("    "),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"addEventListener"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},"'submit'"),e("span",{class:"token punctuation"},","),n(),e("span",{class:"token keyword"},"function"),n(),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},"event"),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token punctuation"},"{")]),n(`
`),e("span",{class:"line"},[n("      "),e("span",{class:"token keyword"},"const"),n(" email "),e("span",{class:"token operator"},"="),n(" document"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"getElementById"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},"'email'"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"."),n("value"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"}),n(`
`),e("span",{class:"line"},[n("      "),e("span",{class:"token keyword"},"if"),n(),e("span",{class:"token punctuation"},"("),e("span",{class:"token operator"},"!"),n("email"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"includes"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},"'@'"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token punctuation"},"{")]),n(`
`),e("span",{class:"line"},[n("        "),e("span",{class:"token function"},"alert"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},"'Please enter a valid email.'"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"},[n("        event"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"preventDefault"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"},[n("      "),e("span",{class:"token punctuation"},"}")]),n(`
`),e("span",{class:"line"},[n("    "),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"},[e("span",{class:"token operator"},"<"),e("span",{class:"token operator"},"/"),n("script"),e("span",{class:"token operator"},">")]),n(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),K=e("div",{class:"language-javascript line-numbers-mode","data-highlighter":"prismjs","data-ext":"js","data-title":"js"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[e("span",{class:"token keyword"},"import"),n(" express "),e("span",{class:"token keyword"},"from"),n(),e("span",{class:"token string"},'"express"'),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"},[e("span",{class:"token keyword"},"const"),n(" app "),e("span",{class:"token operator"},"="),n(),e("span",{class:"token function"},"express"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"},[e("span",{class:"token keyword"},"const"),n(" path "),e("span",{class:"token operator"},"="),n(),e("span",{class:"token function"},"require"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},'"path"'),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"},[e("span",{class:"token keyword"},"const"),n(" port "),e("span",{class:"token operator"},"="),n(),e("span",{class:"token number"},"3000"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"}),n(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"// To received form data")]),n(`
`),e("span",{class:"line"},[n("app"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"use"),e("span",{class:"token punctuation"},"(")]),n(`
`),e("span",{class:"line"},[n("  express"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"urlencoded"),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},"{")]),n(`
`),e("span",{class:"line"},[n("    "),e("span",{class:"token literal-property property"},"extended"),e("span",{class:"token operator"},":"),n(),e("span",{class:"token boolean"},"true"),e("span",{class:"token punctuation"},",")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},",")]),n(`
`),e("span",{class:"line"},[e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"}),n(`
`),e("span",{class:"line"},[e("span",{class:"token comment"},"// view engine setup. Need a folder called views")]),n(`
`),e("span",{class:"line"},[n("app"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"set"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},'"views"'),e("span",{class:"token punctuation"},","),n(" path"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"join"),e("span",{class:"token punctuation"},"("),n("__dirname"),e("span",{class:"token punctuation"},","),n(),e("span",{class:"token string"},'"views"'),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"},[n("app"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"set"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},'"view engine"'),e("span",{class:"token punctuation"},","),n(),e("span",{class:"token string"},'"ejs"'),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"}),n(`
`),e("span",{class:"line"},[n("app"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"get"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},'"/"'),e("span",{class:"token punctuation"},","),n(),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},[n("req"),e("span",{class:"token punctuation"},","),n(" res")]),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token operator"},"=>"),n(),e("span",{class:"token punctuation"},"{")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token comment"},"// To render the view")]),n(`
`),e("span",{class:"line"},[n("  res"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"render"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},'"index"'),e("span",{class:"token punctuation"},","),n(),e("span",{class:"token punctuation"},"{"),n(),e("span",{class:"token literal-property property"},"errors"),e("span",{class:"token operator"},":"),n(),e("span",{class:"token keyword"},"null"),n(),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"},[e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"}),n(`
`),e("span",{class:"line"},[n("app"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"post"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},'"/submit-form"'),e("span",{class:"token punctuation"},","),n(),e("span",{class:"token punctuation"},"("),e("span",{class:"token parameter"},[n("req"),e("span",{class:"token punctuation"},","),n(" res")]),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token operator"},"=>"),n(),e("span",{class:"token punctuation"},"{")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token keyword"},"const"),n(" email "),e("span",{class:"token operator"},"="),n(" req"),e("span",{class:"token punctuation"},"."),n("body"),e("span",{class:"token punctuation"},"."),n("email"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"}),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token keyword"},"if"),n(),e("span",{class:"token punctuation"},"("),e("span",{class:"token operator"},"!"),n("email"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"includes"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},'"@"'),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token punctuation"},"{")]),n(`
`),e("span",{class:"line"},[n("    res"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"status"),e("span",{class:"token punctuation"},"("),e("span",{class:"token number"},"400"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"send"),e("span",{class:"token punctuation"},"("),e("span",{class:"token string"},'"Invalid email."'),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"},[n("    "),e("span",{class:"token keyword"},"return"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token punctuation"},"}")]),n(`
`),e("span",{class:"line"},[n("  "),e("span",{class:"token comment"},"// Proceed with form processing")]),n(`
`),e("span",{class:"line"},[e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"}),n(`
`),e("span",{class:"line"},[n("app"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"listen"),e("span",{class:"token punctuation"},"("),n("port"),e("span",{class:"token punctuation"},","),n(),e("span",{class:"token punctuation"},"("),e("span",{class:"token punctuation"},")"),n(),e("span",{class:"token operator"},"=>"),n(),e("span",{class:"token punctuation"},"{")]),n(`
`),e("span",{class:"line"},[n("  console"),e("span",{class:"token punctuation"},"."),e("span",{class:"token function"},"log"),e("span",{class:"token punctuation"},"("),e("span",{class:"token template-string"},[e("span",{class:"token template-punctuation string"},"`"),e("span",{class:"token string"},"Sandbox listening on port "),e("span",{class:"token interpolation"},[e("span",{class:"token interpolation-punctuation punctuation"},"${"),n("port"),e("span",{class:"token interpolation-punctuation punctuation"},"}")]),e("span",{class:"token template-punctuation string"},"`")]),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"},[e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},")"),e("span",{class:"token punctuation"},";")]),n(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),X=e("p",null,[n("Traditional Server-Side Rendering had significant downsides, but the introduction of "),e("strong",null,"single-page applications"),n(" marked a new era in web development.")],-1),$=e("hr",null,null,-1),ee=e("h2",{id:"traditional-server-side-rendering-vs-single-page-applications",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#traditional-server-side-rendering-vs-single-page-applications"},[e("span",null,"Traditional Server-Side Rendering vs. Single-Page Applications")])],-1),ne={class:"hint-container info"},ae=e("p",{class:"hint-container-title"},"What is a Single Page Application (SPA)?",-1),se=e("p",null,"A Single-page application (SPA) is a web app implementation that loads only a single web document and then updates the body content of that single document via JavaScript APIs such as Fetch when different content is to be shown. Allows users to use websites without loading whole new pages from the server.",-1),te={href:"https://developer.mozilla.org/en-US/docs/Glossary/SPA",target:"_blank",rel:"noopener noreferrer"},oe=e("p",null,"A popular way to implement SPA is by using React. React lets you create fast applications and simplifies updating the UI more easily than DOM manipulation methods.",-1),ie=e("p",null,"It offers several advantages:",-1),re=e("li",null,[e("strong",null,"Improved User Experience"),e("ul",null,[e("li",null,"An SPA loads a single HTML file and dynamically updates the content as the user interacts with it. All of this is done without a full page reload."),e("li",null,"An SPA can update the state of the UI easily and provide instant feedback to users based on actions taken on the app.")])],-1),le=e("li",null,[e("strong",null,"Reduced Server Load"),e("ul",null,[e("li",null,"Most of the work is done by the browser. This reduces the load on the server!")])],-1),ce=e("strong",null,"Better Scalability",-1),pe={href:"https://aws.amazon.com/lambda/",target:"_blank",rel:"noopener noreferrer"},de={href:"https://docs.netlify.com/platform/what-is-netlify/",target:"_blank",rel:"noopener noreferrer"},ue={href:"https://vitejs.dev/",target:"_blank",rel:"noopener noreferrer"},he={href:"https://create-react-app.dev/",target:"_blank",rel:"noopener noreferrer"},ge=e("p",null,"There are some downsides to implementing SPAs. The big one is that it relies on the browser to load all the JavaScript and HTML for us. This means that on mobile devices and for people with slow internet, users may experience delays in seeing the page. Let’s examine the flow to explain this:",-1),me=e("h3",{id:"single-page-application-flow",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#single-page-application-flow"},[e("span",null,"Single Page Application Flow")])],-1),ke=e("img",{src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1725392287290/04dba828-9903-4ca6-bf8e-0c0d875d587b.png?auto=compress,format&format=webp",alt:'Single Page Application React Flow.<br/>(<FontIcon icon="fa-brands fa-youtube"/>Source: How NextJS REALLY Works)',tabindex:"0",loading:"lazy"},null,-1),fe=e("br",null,null,-1),be={href:"https://youtu.be/d2yNsZd5PMs?si=RmnywZJEAuurseQm",target:"_blank",rel:"noopener noreferrer"},ve=r('<p>Several steps are needed for the users to finally see the HTML page.</p><p>First, the browser fetches the HTML. This initial HTML will be blank and incorrect. Why? Because the content comes from JavaScript. This means that it takes time for the browser to fetch JavaScript, load it, and execute it. Since the initial HTML is wrong, web crawlers and search engines will not find relevant content on the website and skip it.</p><p>Take a look at the below GIF. Here JavaScript is disabled on the Chrome Developer Tools. The website fails to load without JavaScript. If JavaScript is enabled but the internet connection is slow, users may see a blank page for an extended period.</p><figure><img src="https://cdn.hashnode.com/res/hashnode/image/upload/v1725392877108/d5a2eb1c-f784-4879-b02f-8c340d405c9c.gif?auto=format,compress&amp;gif-q=60&amp;format=webm" alt="Single Page Application JavaScript Disabled Test." tabindex="0" loading="lazy"><figcaption>Single Page Application JavaScript Disabled Test.</figcaption></figure><p>This was a big problem. This led to Web Development evolving into <strong>the Pre-Rendering era.</strong></p><hr><h2 id="entering-a-new-world-with-pre-rendering-and-hydration" tabindex="-1"><a class="header-anchor" href="#entering-a-new-world-with-pre-rendering-and-hydration"><span>Entering a New World with Pre-Rendering and Hydration</span></a></h2><h3 id="why-is-pre-rendering-important" tabindex="-1"><a class="header-anchor" href="#why-is-pre-rendering-important"><span>Why is Pre-Rendering Important?</span></a></h3><p>People realized that we could generate the HTML in advance. It could be generated from our server or at build time, depending on the methods used.</p>',9),we={href:"https://nextjs.org/docs/pages/building-your-application/rendering/server-side-rendering",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://nextjs.org/docs/pages/building-your-application/rendering/static-site-generation",target:"_blank",rel:"noopener noreferrer"},_e=r('<h3 id="what-is-server-side-rendering" tabindex="-1"><a class="header-anchor" href="#what-is-server-side-rendering"><span>What is Server Side Rendering?</span></a></h3><p>React components are rendered on the server, and the resulting HTML is sent to the browser. This can improve SEO and initial load times. <strong>The rendering process occurs on each page request.</strong></p><h3 id="what-is-static-site-generation-ssg" tabindex="-1"><a class="header-anchor" href="#what-is-static-site-generation-ssg"><span>What is Static Site Generation (SSG)?</span></a></h3><p><strong>Static HTML pages are generated at build time.</strong> These pages can be served quickly without requiring a server to render them on the fly.</p><p>Either method is beneficial! <strong>Now the HTML that the user receives will be correct.</strong> They will see a page with content instead of a blank page as seen using Vite or Create React App.</p><p>But there is a problem: the HTML the user receives is not interactive. They cannot click on it or submit a form. How can we add interactivity to our app? By Hydrating properly🚰 🌊!</p><h3 id="what-is-hydration" tabindex="-1"><a class="header-anchor" href="#what-is-hydration"><span>What is Hydration?</span></a></h3>',7),Se={href:"https://react.dev/reference/react-dom/hydrate#hydrating-server-rendered-html",target:"_blank",rel:"noopener noreferrer"},xe={class:"hint-container info"},Te=e("p",{class:"hint-container-title"},"Info",-1),Re=e("p",null,'In React, "hydration" is how React "attaches" to existing HTML that was already rendered by React in a server environment. During hydration, React will attempt to attach event listeners to the existing markup and take over rendering the app on the client.',-1),Pe={href:"https://react.dev/reference/react-dom/hydrate#hydrating-server-rendered-html",target:"_blank",rel:"noopener noreferrer"},je=e("p",null,"Let's see what the flow looks like for an app that uses Pre-Rendering and Hydration:",-1),He=e("figure",null,[e("img",{src:"https://cdn.hashnode.com/res/hashnode/image/upload/v1725392958385/eaee78cb-736c-4d49-8fb7-c9cb098d3652.png?auto=compress,format&format=webp",alt:"Pre-rendering flow.",tabindex:"0",loading:"lazy"}),e("figcaption",null,"Pre-rendering flow.")],-1),Ae=e("h3",{id:"what-is-reconciliation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#what-is-reconciliation"},[e("span",null,"What is Reconciliation?")])],-1),De={class:"hint-container info"},We=e("p",{class:"hint-container-title"},"Info",-1),Ie=e("p",null,"Reconciliation is the process by which React determines the most efficient way to update the UI in response to changes in data or component hierarchy.",-1),Ee={href:"https://educative.io/answers/what-is-the-concept-of-reconciliation-in-react",target:"_blank",rel:"noopener noreferrer"},Me=e("p",null,"Reconciliation is when React figures out how to update the UI in response to changes in data or components hierarchy.",-1),Le=e("p",null,[n("When components are rendered, a Virtual DOM is created. If there are changes in state or props, then a new Virtual DOM is created. React then uses its diff algorithm to compare the new Virtual DOM with the previous Virtual DOM to check for changes. This is "),e("strong",null,"reconciliation"),n(".")],-1),Je=e("strong",null,"React is not going to update the entire UI",-1),Ne=e("strong",null,"select which elements need to be updated.",-1),Ce={href:"https://educative.io/answers/what-is-the-concept-of-reconciliation-in-react",target:"_blank",rel:"noopener noreferrer"},Fe=e("h3",{id:"pre-rendering-and-hydration-in-action",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#pre-rendering-and-hydration-in-action"},[e("span",null,"Pre-rendering and Hydration in Action")])],-1),Ge=e("p",null,"During the Pre-rendering and Hydration flow, first, the user will see HTML with the correct content.",-1),qe=e("p",null,"Then Hydration kicks in and loads JavaScript to give interactivity to the application.",-1),Ve=e("p",null,"Let's simulate the process of what happens if the Hydration process takes a long time (due to a slow internet connection) or if the user has JavaScript disabled.",-1),ze={href:"https://gatsbyjs.com/",target:"_blank",rel:"noopener noreferrer"},Oe=r('<figure><img src="https://cdn.hashnode.com/res/hashnode/image/upload/v1725554638438/698fd854-e828-44cd-996a-e01b154803d1.gif?auto=format,compress&amp;gif-q=60&amp;format=webm" alt="Portfolio JavaScript Disabled Test." tabindex="0" loading="lazy"><figcaption>Portfolio JavaScript Disabled Test.</figcaption></figure><p>Even though there is no JavaScript, I can still see content on my portfolio. That’s because the user received <strong>pre-render HTML</strong>! You can see that I cannot click on the <strong>dropdown menu items or the buttons</strong> that say About Me, Projects, and Experience. That’s because the JavaScript did not load so the user cannot interact with it.</p><h3 id="a-mental-model-for-hydration" tabindex="-1"><a class="header-anchor" href="#a-mental-model-for-hydration"><span>A Mental Model for Hydration</span></a></h3><p><a href="https://joshwcomeau.com/" target="_blank" rel="noopener noreferrer"><strong>Josh Comeau</strong></a> created a cool mental model for Hydration. Josh calls it the <strong>“Two Pass Rendering.”</strong></p>',4),Ue={class:"hint-container info"},Be=e("p",{class:"hint-container-title"},"Info",-1),Ye=e("p",null,"***The first pass, at compile-time, produces all of the static non-personal content and leaves holes where the dynamic content will go. Then, after the React app has mounted on the user's device, a second pass stamps in all the dynamic bits that depend on the client state.",-1),Ze={href:"https://joshwcomeau.com/react/the-perils-of-rehydration/#mental-models-13",target:"_blank",rel:"noopener noreferrer"},Qe=r(`<p>To Summarize:</p><ol><li><strong>The First Pass</strong>: the user sees the pre-render HTML. It contains static content, but it is missing the dynamic content.</li><li><strong>The Second Pass:</strong> JavaScript starts loading and fills in the missing dynamic pieces that depend on the client state.</li></ol><h3 id="potential-errors-when-working-with-pre-rendering-and-hydration-frameworks" tabindex="-1"><a class="header-anchor" href="#potential-errors-when-working-with-pre-rendering-and-hydration-frameworks"><span>Potential Errors When Working with Pre-rendering and Hydration Frameworks</span></a></h3><p>When working with frameworks like Next.js, the server will return static pre-render HTML, and then Hydration occurs which loads JavaScript.</p><p>But we must be careful when working with dynamic data and client-only properties. For example, take a look at this code:</p><h4 id="dynamic-data-error" tabindex="-1"><a class="header-anchor" href="#dynamic-data-error"><span>Dynamic Data Error</span></a></h4><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx" data-title="jsx"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">HydrationErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hydration Errors</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Today date in milliseconds is </span><span class="token punctuation">{</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here, the server will generate HTML with a timestamp in milliseconds. For example: <code>1724869161034</code>. The Hydration process begins, and then the client loads the HTML. Time has passed and the timestamp is different, it is now <code>172486193750</code>! This scenario causes the following error:</p><figure><img src="https://cdn.hashnode.com/res/hashnode/image/upload/v1725555403697/ebb398ec-cd58-4b9a-aa63-c43a9b511eeb.png?auto=compress,format&amp;format=webp" alt="Mismatch text content from server and client hydration error." tabindex="0" loading="lazy"><figcaption>Mismatch text content from server and client hydration error.</figcaption></figure><p>This happens because the <code>getTime()</code> function will generate a different timestamp.</p><p>This means that the server and client generate different HTML. The Network Tab shows us the server&#39;s response. It is a different HTML from what the client loads.</p><p><strong>The server&#39;s response below:</strong></p><figure><img src="https://cdn.hashnode.com/res/hashnode/image/upload/v1725555472118/d76c7ad0-92ab-4b77-92ea-b3d9d6a3b4fe.png?auto=compress,format&amp;format=webp" alt="Different server html generated." tabindex="0" loading="lazy"><figcaption>Different server html generated.</figcaption></figure><p><strong>The client&#39;s response below:</strong></p><figure><img src="https://cdn.hashnode.com/res/hashnode/image/upload/v1725555518535/af27855d-d362-44e3-8007-b01fde1d2455.png?auto=compress,format&amp;format=webp" alt="Different client html generated." tabindex="0" loading="lazy"><figcaption>Different client html generated.</figcaption></figure><p><strong>To Fix the Error:</strong></p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx" data-title="jsx"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">HydrationErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>date<span class="token punctuation">,</span> setDate<span class="token punctuation">]</span> <span class="token operator">=</span> useState<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>number</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">();</span>
<span class="line"></span>
<span class="line">  useEffect(() =&gt; </span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">setDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token plain-text">, []);</span>
<span class="line"></span>
<span class="line">  return (</span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hydration Errors</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Today date in milliseconds is </span><span class="token punctuation">{</span>date<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">  );</span>
<span class="line">}</span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can use the <code>useEffect</code> hook. Why would this work? Because the HTML that the server and client render will contain an empty <code>date</code> state variable.</p><p>Once the component mounts, the <code>useEffect</code> activates and adds the dynamic data from the state variable or you can use the <code>suppressHydrationWarning</code> flag and set it to true.</p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx" data-title="jsx"><pre><code><span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">suppressHydrationWarning</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Today date in milliseconds is </span><span class="token punctuation">{</span>date<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="using-client-only-properties-error" tabindex="-1"><a class="header-anchor" href="#using-client-only-properties-error"><span>Using Client-Only Properties Error</span></a></h4><p>Remember you cannot use <code>window</code> or <code>localStorage</code>. They do not exist on the server. Take the following example:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">HydrationErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">&gt;</span></span>
<span class="line">      <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token punctuation">{</span><span class="token keyword">typeof</span> window <span class="token operator">!==</span> <span class="token string">&quot;undefined&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>This p tag will appear<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span><span class="token punctuation">}</span></span>
<span class="line">      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here, the server returns HTML with an empty <code>&lt;div&gt;</code> tag, but the client loads HTML that includes the <code>&lt;p&gt;</code> tag. This creates a <strong>HYDRATION ERROR!</strong></p><p>This is the error that you get:</p><figure><img src="https://cdn.hashnode.com/res/hashnode/image/upload/v1725555844562/443c435c-308a-4422-b184-b2f321672519.png?auto=compress,format&amp;format=webp" alt="Cannot use client-side properties hydration error." tabindex="0" loading="lazy"><figcaption>Cannot use client-side properties hydration error.</figcaption></figure><p>The Network Tab shows us the server&#39;s response. It is an empty <code>&lt;div&gt;</code> tag.</p><p><strong>The server&#39;s response below:</strong></p><figure><img src="https://cdn.hashnode.com/res/hashnode/image/upload/v1725555958286/aeeaa522-3266-4b60-856d-d0cd3bf4d9c9.png?auto=compress,format&amp;format=webp" alt="Different server html generated." tabindex="0" loading="lazy"><figcaption>Different server html generated.</figcaption></figure><p>But the client loads HTML that says &quot;This p tag will appear&quot;.</p><p><strong>The client&#39;s response below:</strong></p><figure><img src="https://cdn.hashnode.com/res/hashnode/image/upload/v1725556187527/173bf82a-1754-4835-9921-adea0f2e864a.png?auto=compress,format&amp;format=webp" alt="Different client html generated." tabindex="0" loading="lazy"><figcaption>Different client html generated.</figcaption></figure>`,32),Ke={href:"https://youtube.com/@deeecode",target:"_blank",rel:"noopener noreferrer"},Xe=e("code",null,"@deeecode",-1),$e={href:"https://youtu.be/7UOyuEHYmSE?si=Ql8z5D_pAryvTyFf",target:"_blank",rel:"noopener noreferrer"},en=r('<hr><h2 id="how-does-it-relate-to-frameworks-like-gatsby-js-next-js-and-remix" tabindex="-1"><a class="header-anchor" href="#how-does-it-relate-to-frameworks-like-gatsby-js-next-js-and-remix"><span>How Does it Relate to Frameworks like Gatsby.js, Next.js, and Remix?</span></a></h2><p>Everything we have discussed is what all these frameworks focus on.</p><p>Static-Site Generation and Server-Side Rendering can be implemented using Gatsby.js, Next.js, and Remix. They focus on creating a pre-render HTML ready for the user to see, then initiate Hydration to add interactivity to the app.</p><p>Gatsby.js, Next.js, and Remix do not replace the concept of single-page applications – they add to the process. Take a look at this flow:</p><figure><img src="https://cdn.hashnode.com/res/hashnode/image/upload/v1725556321232/7d8629fd-b528-4cd7-9bc2-7de0bf1ab630.png?auto=compress,format&amp;format=webp" alt="Pre-rendering and Single Page Application combined flow. (Source: How NextJS REALLY Works)" tabindex="0" loading="lazy"><figcaption>Pre-rendering and Single Page Application combined flow. (Source: How NextJS REALLY Works)</figcaption></figure><p>It is adding to the current SPA flow! If you did not have Pre-rendering, the process starts where the pink box begins, with an incomplete HTML.</p><hr><h2 id="moving-forward" tabindex="-1"><a class="header-anchor" href="#moving-forward"><span>Moving Forward</span></a></h2><p>This article is meant as an introduction to pre-rendering and hydration.</p>',10),nn={href:"https://nextjs.org/docs/pages",target:"_blank",rel:"noopener noreferrer"},an=e("code",null,"getServerSideProps",-1),sn=e("code",null,"getStaticPaths",-1),tn=e("code",null,"getStaticProps",-1),on={class:"hint-container info"},rn=e("p",{class:"hint-container-title"},"Info",-1),ln=e("p",null,[n("These implementations had their pros and cons. For example, Josh W Comeau mentioned that with "),e("code",null,"getServerSideProps"),n(":")],-1),cn=e("ol",null,[e("li",null,"This strategy only works at the route level, for components at the very top of the tree. We can't do this in any component."),e("li",null,"Each meta-framework came up with its own approach. Next.js has one approach, Gatsby has another, Remix has yet another. It hasn't been standardized."),e("li",null,[n("All of our React components will "),e("em",null,"always"),n(" hydrate on the client, even when there's no need for them to do so.")])],-1),pn={href:"https://joshwcomeau.com/react/server-components/",target:"_blank",rel:"noopener noreferrer"},dn={href:"https://react.dev/reference/rsc/server-components",target:"_blank",rel:"noopener noreferrer"},un={href:"https://nextjs.org/docs/app",target:"_blank",rel:"noopener noreferrer"},hn=e("code",null,"getStaticProps",-1),gn=e("code",null,"getStaticPaths",-1),mn=e("code",null,"getServerSideProps",-1),kn=e("hr",null,null,-1),fn=e("h2",{id:"conclusion",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#conclusion"},[e("span",null,"Conclusion")])],-1),bn=e("p",null,"Thanks for reading this far 😃!",-1),vn={href:"https://salvador-villalon.netlify.app/",target:"_blank",rel:"noopener noreferrer"},wn=e("p",null,"I made a web application to demonstrate the topics covered in the article.",-1),yn={href:"https://the-nextjs-pagesrouter-guide.vercel.app/",target:"_blank",rel:"noopener noreferrer"},_n={href:"https://github.com/salvillalon45/the-nextjs-pagesrouter-guide",target:"_blank",rel:"noopener noreferrer"},Sn=e("code",null,"salvillalon45/the-nextjs-pagesrouter-guide",-1),xn=e("p",null,"In the GitHub repo you can find the code snippets for the following:",-1),Tn=e("ul",null,[e("li",null,"A page implementing getStaticProps and getStaticPaths"),e("li",null,"A page implementing getStaticProps"),e("li",null,"A page implementing getServerSideProps with Client Side fetching"),e("li",null,"A page to demonstrate Hydration Errors"),e("li",null,"Using the API directory to implement our own API routes")],-1),Rn=e("h3",{id:"resources",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#resources"},[e("span",null,"Resources")])],-1),Pn=e("p",null,"Here are some key learning resources I used to write this article in case you want to dig in even deeper:",-1),jn={href:"https://youtu.be/R-BKadZWYnQ?si=imNFJL36knSPdF7S",target:"_blank",rel:"noopener noreferrer"},Hn={href:"https://youtu.be/87i0pejrULw?si=e179x9x2KkaR8AxL",target:"_blank",rel:"noopener noreferrer"},An={href:"https://youtu.be/d2yNsZd5PMs?si=UZYKHUrajdXQd1y4&t=1",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://youtu.be/xfX8nVpaycU?si=ZV-r2piDoWhLAKMi",target:"_blank",rel:"noopener noreferrer"};function Wn(g,In){const p=i("VPCard"),o=i("router-link"),m=i("SiteInfo"),s=i("FontIcon"),k=i("Tabs"),d=i("VidStack");return w(),b("div",null,[e("h1",_,[e("a",S,[e("span",null,v(g.$frontmatter.title)+" 관련",1)])]),a(p,u(h({title:"Next.js > Article(s)",desc:"Article(s)",link:"/programming/js-next/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),a(p,u(h({title:"Gatsby > Article(s)",desc:"Article(s)",link:"/programming/js-gatsby/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),e("nav",x,[e("ul",null,[e("li",null,[a(o,{to:"#web-development-in-the-past-traditional-server-side-rendering"},{default:t(()=>[n("Web Development in the Past: Traditional Server-Side Rendering")]),_:1}),e("ul",null,[e("li",null,[a(o,{to:"#the-downside-of-traditional-server-side-rendering"},{default:t(()=>[n("The Downside of Traditional Server-Side Rendering")]),_:1})])])]),e("li",null,[a(o,{to:"#traditional-server-side-rendering-vs-single-page-applications"},{default:t(()=>[n("Traditional Server-Side Rendering vs. Single-Page Applications")]),_:1}),e("ul",null,[e("li",null,[a(o,{to:"#single-page-application-flow"},{default:t(()=>[n("Single Page Application Flow")]),_:1})])])]),e("li",null,[a(o,{to:"#entering-a-new-world-with-pre-rendering-and-hydration"},{default:t(()=>[n("Entering a New World with Pre-Rendering and Hydration")]),_:1}),e("ul",null,[e("li",null,[a(o,{to:"#why-is-pre-rendering-important"},{default:t(()=>[n("Why is Pre-Rendering Important?")]),_:1})]),e("li",null,[a(o,{to:"#what-is-server-side-rendering"},{default:t(()=>[n("What is Server Side Rendering?")]),_:1})]),e("li",null,[a(o,{to:"#what-is-static-site-generation-ssg"},{default:t(()=>[n("What is Static Site Generation (SSG)?")]),_:1})]),e("li",null,[a(o,{to:"#what-is-hydration"},{default:t(()=>[n("What is Hydration?")]),_:1})]),e("li",null,[a(o,{to:"#what-is-reconciliation"},{default:t(()=>[n("What is Reconciliation?")]),_:1})]),e("li",null,[a(o,{to:"#pre-rendering-and-hydration-in-action"},{default:t(()=>[n("Pre-rendering and Hydration in Action")]),_:1})]),e("li",null,[a(o,{to:"#a-mental-model-for-hydration"},{default:t(()=>[n("A Mental Model for Hydration")]),_:1})]),e("li",null,[a(o,{to:"#potential-errors-when-working-with-pre-rendering-and-hydration-frameworks"},{default:t(()=>[n("Potential Errors When Working with Pre-rendering and Hydration Frameworks")]),_:1})])])]),e("li",null,[a(o,{to:"#how-does-it-relate-to-frameworks-like-gatsby-js-next-js-and-remix"},{default:t(()=>[n("How Does it Relate to Frameworks like Gatsby.js, Next.js, and Remix?")]),_:1})]),e("li",null,[a(o,{to:"#moving-forward"},{default:t(()=>[n("Moving Forward")]),_:1})]),e("li",null,[a(o,{to:"#conclusion"},{default:t(()=>[n("Conclusion")]),_:1}),e("ul",null,[e("li",null,[a(o,{to:"#resources"},{default:t(()=>[n("Resources")]),_:1})])])])])]),T,a(m,{name:"What are Pre-Rendering and Hydration in Web Development? A Deep Dive for Devs",desc:"Have you ever wondered how Frameworks like Next.js, Gatsby.js, and Remix work? These frameworks use the concepts of Pre-rendering and Hydration, which represent significant advancements in the history of web development. These frameworks leverage the...",url:"https://freecodecamp.org/what-are-pre-rendering-and-hydration-in-web-dev",logo:"https://cdn.freecodecamp.org/universal/favicons/favicon.ico",preview:"https://cdn.hashnode.com/res/hashnode/image/upload/v1727985850590/fdb7eb16-52bd-41ec-8e1a-e4fb9068a535.png"}),e("p",null,[n("Have you ever wondered how Frameworks like "),e("a",R,[a(s,{icon:"iconfont icon-nextjs"}),n("Next.js")]),n(", "),e("a",P,[a(s,{icon:"iconfont icon-gatsby"}),n("Gatsby.js")]),n(", and "),j,n(" work?")]),H,A,D,W,I,e("p",null,[n("Back in the days of traditional server-side rendering, rendering and interactivity were separated. We used server-side languages like "),e("a",E,[a(s,{icon:"fa-brands fa-node"}),n("Node.js")]),n(", "),e("a",M,[a(s,{icon:"fa-brands fa-php"}),n("PHP")]),n(", "),e("a",L,[a(s,{icon:"fa-brands fa-java"}),n("Java")]),n(", and "),e("a",J,[a(s,{icon:"iconfont icon-ruby"}),n("Ruby on Rails")]),n(".")]),e("p",null,[n("Within our servers, we created "),N,n(" using templating languages like "),e("a",C,[a(s,{icon:"fa-brands fa-wikipedia-w"}),n("JSP")]),n(" and "),F,n(". Views are HTML pages, and you could inject JavaScript or Java inside them to add functionality, dynamic data retrieved from database queries, and interactive segments with languages like "),e("a",G,[a(s,{icon:"iconfont icon-jquery"}),n("JQuery")]),n(".")]),q,e("ul",null,[e("li",null,[V,n(": A "),z,n(" was needed to cache your dynamic files. CDNs are better suited for static content, but companies like Cloudflare created "),e("a",O,[a(s,{icon:"fa-brands fa-cloudflare"}),n("Cloudflare-Workers")]),n(" to help with the process.")]),U]),B,Y,Z,a(k,{id:"85",data:[{id:"Code in EJS"},{id:"Code in Express.js"}],active:0},{title0:t(({value:l,isActive:c})=>[n("Code in EJS")]),title1:t(({value:l,isActive:c})=>[n("Code in Express.js")]),tab0:t(({value:l,isActive:c})=>[Q]),tab1:t(({value:l,isActive:c})=>[K]),_:1}),X,$,ee,e("div",ne,[ae,se,e("blockquote",null,[e("p",null,[n("Source: ("),e("a",te,[a(s,{icon:"fa-brands fa-firefox"}),n("Source: MDN")]),n(")")])])]),oe,ie,e("ul",null,[re,le,e("li",null,[ce,e("ul",null,[e("li",null,[n("The browser is now doing most of the work. We can now deploy dedicated servers focused on serving data via APIs. We can easily scale horizontally. We have the option of using servers or serverless functions like "),e("a",pe,[a(s,{icon:"fa-brands fa-aws"}),n("AWS lambda")]),n(".")]),e("li",null,[n("An SPA can be hosted on a static CDN like "),e("a",de,[a(s,{icon:"fas fa-globe"}),n("Netlify")]),n(".")])])])]),e("p",null,[n("With the addition of toolchains like "),e("a",ue,[a(s,{icon:"fas fa-globe"}),n("Vite")]),n(" and "),e("a",he,[a(s,{icon:"fa-brands fa-react"}),n("Create React App")]),n(" to automate the setup of a modern JavaScript application, engineers no longer had to worry about configuring Webpack manually.")]),ge,me,e("blockquote",null,[e("figure",null,[ke,e("figcaption",null,[n("Single Page Application React Flow."),fe,n("("),e("a",be,[a(s,{icon:"fa-brands fa-youtube"}),n("Source: How NextJS REALLY Works")]),n(")")])])]),a(d,{src:"youtube/d2yNsZd5PMs"}),ve,e("p",null,[n("Pre-rendering can be done in two ways - "),e("a",we,[a(s,{icon:"iconfont icon-nextjs"}),n("Server Side Rendering (SSR)")]),n(" or "),e("a",ye,[a(s,{icon:"iconfont icon-nextjs"}),n("Static Site Generation (SSG)")])]),_e,e("p",null,[e("a",Se,[a(s,{icon:"fa-brands fa-react"}),n("Hydration")]),n(" is what adds interactivity to our app. It loads the JavaScript that makes our app interactive.")]),e("div",xe,[Te,Re,e("blockquote",null,[e("p",null,[e("em",null,[e("a",Pe,[a(s,{icon:"fa-brands fa-react"}),n("Source: React Docs")]),n(")")])])])]),je,He,Ae,e("div",De,[We,Ie,e("blockquote",null,[e("p",null,[e("em",null,[n("(Source: "),e("a",Ee,[a(s,{icon:"fas fa-globe"}),n("What is the difference between virtual and real DOM (React)?")]),n(")")])])])]),Me,Le,e("p",null,[n("Based on the changes found, "),Je,n(". Instead, it will "),Ne,n(" This "),e("a",Ce,[a(s,{icon:"fas fa-globe"}),n("article")]),n(" helped me understand Reconciliation.")]),Fe,Ge,qe,Ve,e("p",null,[n("Here is a gif where I disable JavaScript on my Portfolio. I created my portfolio using "),e("a",ze,[a(s,{icon:"iconfont icon-gatsby"}),n("Gatsby")]),n(" a static-site-generation framework (it also has server-side rendering capabilities):")]),Oe,e("div",Ue,[Be,Ye,e("blockquote",null,[e("p",null,[e("em",null,[n("Source: "),e("a",Ze,[a(s,{icon:"fas fa-globe"}),n("The Perils of Hydration")])])])])]),Qe,e("p",null,[n("This demo was inspired by "),e("a",Ke,[n("Deeecode The Web ("),a(s,{icon:"fa-brands fa-youtube"}),Xe,n(")")]),n(" in "),e("a",$e,[a(s,{icon:"fa-brands fa-youtube"}),n("Why Do HYDRATION ERRORS Exist? And how to solve them")]),n(". He gives a great explanation of why Hydration Errors occur. I recommend watching it!")]),a(d,{src:"youtube/7UOyuEHYmSE"}),en,e("p",null,[n("Next.js first implemented these concepts with the "),e("a",nn,[a(s,{icon:"iconfont icon-nextjs"}),n("Pages Router")]),n(". Pages Router was great and introduced the world to functions like "),an,n(", "),sn,n(", and "),tn,n(" to implement Static-Site Generation and Server-Side Rendering.")]),e("div",on,[rn,ln,cn,e("blockquote",null,[e("p",null,[e("em",null,[n("Source: "),e("a",pn,[a(s,{icon:"fas fa-globe"}),n("Making Sense of React Server Components")])])])])]),e("p",null,[n("The React team saw this too and created a new paradigm called "),e("a",dn,[a(s,{icon:"fa-brands fa-react"}),n("React Server Components (RSC)")]),n(". To implement RSC, the Vercel team created the "),e("a",un,[a(s,{icon:"iconfont icon-nextjs"}),n("App Router")]),n(". App Router still uses the concepts of pre-rendering and hydration, but it no longer uses "),hn,n(", "),gn,n(", and "),mn,n(". It uses RSC and other great App Router features to implement better web applications. I recommend taking a look at App Router when you get a chance.")]),kn,fn,bn,e("p",null,[n("I learned a lot from writing this article. I started this research because I used Gatsby to create my "),e("a",vn,[a(s,{icon:"fas fa-globe"}),n("portfolio version 4")]),n(" and Next.js in my job, but I did not understand the concepts behind these frameworks and why they were created.")]),wn,e("ul",null,[e("li",null,[e("a",yn,[a(s,{icon:"fas fa-globe"}),n("Application")])]),e("li",null,[e("a",_n,[n("GitHub Repo ("),a(s,{icon:"iconfont icon-github"}),Sn,n(")")])])]),xn,Tn,Rn,Pn,e("ul",null,[e("li",null,[e("a",jn,[a(s,{icon:"fa-brands fa-youtube"}),n("What is Hydration?")]),n(" by Builder")]),e("li",null,[e("a",Hn,[a(s,{icon:"fa-brands fa-youtube"}),n("What Exactly is REACT HYDRATION? And why does it matter?")]),n(" by Deeecode The Web")]),e("li",null,[e("a",An,[a(s,{icon:"fa-brands fa-youtube"}),n("How NextJS REALLY Works")]),n(" by Theo Browne")]),e("li",null,[e("a",Dn,[a(s,{icon:"fa-brands fa-youtube"}),n("Next.js - GetServerSideProps vs GetStaticProps")]),n(" by Morado Web Development")])])])}const Ln=f(y,[["render",Wn],["__file","what-are-pre-rendering-and-hydration-in-web-dev.html.vue"]]),Jn=JSON.parse('{"path":"/freecodecamp.org/what-are-pre-rendering-and-hydration-in-web-dev.html","title":"What are Pre-Rendering and Hydration in Web Development? A Deep Dive for Devs","lang":"en-US","frontmatter":{"lang":"en-US","title":"What are Pre-Rendering and Hydration in Web Development? A Deep Dive for Devs","description":"Article(s) > What are Pre-Rendering and Hydration in Web Development? A Deep Dive for Devs","icon":"iconfont icon-nextjs","category":["Node.js","Next.js","Gatsby","Article(s)"],"tag":["blog","freecodecamp.org","node","nodejs","node-js","next","nextjs","next-js","gatsby"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > What are Pre-Rendering and Hydration in Web Development? A Deep Dive for Devs"},{"property":"og:description","content":"What are Pre-Rendering and Hydration in Web Development? A Deep Dive for Devs"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/freecodecamp.org/what-are-pre-rendering-and-hydration-in-web-dev.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/freecodecamp.org/what-are-pre-rendering-and-hydration-in-web-dev.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"What are Pre-Rendering and Hydration in Web Development? A Deep Dive for Devs"}],["meta",{"property":"og:description","content":"Article(s) > What are Pre-Rendering and Hydration in Web Development? A Deep Dive for Devs"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://cdn.hashnode.com/res/hashnode/image/upload/v1727985850590/fdb7eb16-52bd-41ec-8e1a-e4fb9068a535.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://cdn.hashnode.com/res/hashnode/image/upload/v1727985850590/fdb7eb16-52bd-41ec-8e1a-e4fb9068a535.png"}],["meta",{"name":"twitter:image:alt","content":"What are Pre-Rendering and Hydration in Web Development? A Deep Dive for Devs"}],["meta",{"property":"article:author","content":"Salvador Villalon Jr"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"freecodecamp.org"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"nodejs"}],["meta",{"property":"article:tag","content":"node-js"}],["meta",{"property":"article:tag","content":"next"}],["meta",{"property":"article:tag","content":"nextjs"}],["meta",{"property":"article:tag","content":"next-js"}],["meta",{"property":"article:tag","content":"gatsby"}],["meta",{"property":"article:published_time","content":"2024-10-07T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"What are Pre-Rendering and Hydration in Web Development? A Deep Dive for Devs\\",\\"image\\":[\\"https://youtu.be/d2yNsZd5PMs?si=RmnywZJEAuurseQm\\",\\"https://cdn.hashnode.com/res/hashnode/image/upload/v1725392877108/d5a2eb1c-f784-4879-b02f-8c340d405c9c.gif?auto=format,compress&gif-q=60&format=webm\\",\\"https://cdn.hashnode.com/res/hashnode/image/upload/v1725392958385/eaee78cb-736c-4d49-8fb7-c9cb098d3652.png?auto=compress,format&format=webp\\",\\"https://cdn.hashnode.com/res/hashnode/image/upload/v1725554638438/698fd854-e828-44cd-996a-e01b154803d1.gif?auto=format,compress&gif-q=60&format=webm\\",\\"https://cdn.hashnode.com/res/hashnode/image/upload/v1725555403697/ebb398ec-cd58-4b9a-aa63-c43a9b511eeb.png?auto=compress,format&format=webp\\",\\"https://cdn.hashnode.com/res/hashnode/image/upload/v1725555472118/d76c7ad0-92ab-4b77-92ea-b3d9d6a3b4fe.png?auto=compress,format&format=webp\\",\\"https://cdn.hashnode.com/res/hashnode/image/upload/v1725555518535/af27855d-d362-44e3-8007-b01fde1d2455.png?auto=compress,format&format=webp\\",\\"https://cdn.hashnode.com/res/hashnode/image/upload/v1725555844562/443c435c-308a-4422-b184-b2f321672519.png?auto=compress,format&format=webp\\",\\"https://cdn.hashnode.com/res/hashnode/image/upload/v1725555958286/aeeaa522-3266-4b60-856d-d0cd3bf4d9c9.png?auto=compress,format&format=webp\\",\\"https://cdn.hashnode.com/res/hashnode/image/upload/v1725556187527/173bf82a-1754-4835-9921-adea0f2e864a.png?auto=compress,format&format=webp\\",\\"https://cdn.hashnode.com/res/hashnode/image/upload/v1725556321232/7d8629fd-b528-4cd7-9bc2-7de0bf1ab630.png?auto=compress,format&format=webp\\"],\\"datePublished\\":\\"2024-10-07T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Salvador Villalon Jr\\"}]}"]],"prev":"/programming/js-next/articles/README.md","date":"2024-10-07T00:00:00.000Z","isOriginal":false,"author":"Salvador Villalon Jr","cover":"https://cdn.hashnode.com/res/hashnode/image/upload/v1727985850590/fdb7eb16-52bd-41ec-8e1a-e4fb9068a535.png"},"headers":[{"level":2,"title":"Web Development in the Past: Traditional Server-Side Rendering","slug":"web-development-in-the-past-traditional-server-side-rendering","link":"#web-development-in-the-past-traditional-server-side-rendering","children":[{"level":3,"title":"The Downside of Traditional Server-Side Rendering","slug":"the-downside-of-traditional-server-side-rendering","link":"#the-downside-of-traditional-server-side-rendering","children":[]}]},{"level":2,"title":"Traditional Server-Side Rendering vs. Single-Page Applications","slug":"traditional-server-side-rendering-vs-single-page-applications","link":"#traditional-server-side-rendering-vs-single-page-applications","children":[{"level":3,"title":"Single Page Application Flow","slug":"single-page-application-flow","link":"#single-page-application-flow","children":[]}]},{"level":2,"title":"Entering a New World with Pre-Rendering and Hydration","slug":"entering-a-new-world-with-pre-rendering-and-hydration","link":"#entering-a-new-world-with-pre-rendering-and-hydration","children":[{"level":3,"title":"Why is Pre-Rendering Important?","slug":"why-is-pre-rendering-important","link":"#why-is-pre-rendering-important","children":[]},{"level":3,"title":"What is Server Side Rendering?","slug":"what-is-server-side-rendering","link":"#what-is-server-side-rendering","children":[]},{"level":3,"title":"What is Static Site Generation (SSG)?","slug":"what-is-static-site-generation-ssg","link":"#what-is-static-site-generation-ssg","children":[]},{"level":3,"title":"What is Hydration?","slug":"what-is-hydration","link":"#what-is-hydration","children":[]},{"level":3,"title":"What is Reconciliation?","slug":"what-is-reconciliation","link":"#what-is-reconciliation","children":[]},{"level":3,"title":"Pre-rendering and Hydration in Action","slug":"pre-rendering-and-hydration-in-action","link":"#pre-rendering-and-hydration-in-action","children":[]},{"level":3,"title":"A Mental Model for Hydration","slug":"a-mental-model-for-hydration","link":"#a-mental-model-for-hydration","children":[]},{"level":3,"title":"Potential Errors When Working with Pre-rendering and Hydration Frameworks","slug":"potential-errors-when-working-with-pre-rendering-and-hydration-frameworks","link":"#potential-errors-when-working-with-pre-rendering-and-hydration-frameworks","children":[]}]},{"level":2,"title":"How Does it Relate to Frameworks like Gatsby.js, Next.js, and Remix?","slug":"how-does-it-relate-to-frameworks-like-gatsby-js-next-js-and-remix","link":"#how-does-it-relate-to-frameworks-like-gatsby-js-next-js-and-remix","children":[]},{"level":2,"title":"Moving Forward","slug":"moving-forward","link":"#moving-forward","children":[]},{"level":2,"title":"Conclusion","slug":"conclusion","link":"#conclusion","children":[{"level":3,"title":"Resources","slug":"resources","link":"#resources","children":[]}]}],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":1}]},"readingTime":{"minutes":11.34,"words":3403},"filePathRelative":"freecodecamp.org/what-are-pre-rendering-and-hydration-in-web-dev.md","localizedDate":"October 7, 2024","excerpt":"\\n","copyright":{"author":"Salvador Villalon Jr"}}');export{Ln as comp,Jn as data};
