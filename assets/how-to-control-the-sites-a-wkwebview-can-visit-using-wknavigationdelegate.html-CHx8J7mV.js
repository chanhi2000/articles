import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as e,t as l,e as o,n as a,g as n,a as t,r as w,o as h}from"./app-BgNevrm5.js";const g={},d={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},p={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},m=e("nav",{class:"table-of-contents"},[e("ul")],-1),v=e("hr",null,null,-1),u=e("blockquote",null,[e("p",null,"Available from iOS 9.0")],-1),b=e("details",{class:"hint-container details"},[e("summary",null,"Similar solutions‚Ä¶"),t(`
/example-code/wkwebview/how-to-control-the-user-interface-of-a-wkwebview-using-wkuidelegate">How to control the user interface of a WKWebView using WKUIDelegate 
/quick-start/concurrency/what-is-an-actor-and-why-does-swift-have-them">What is an actor and why does Swift have them? 
/example-code/wkwebview/whats-the-difference-between-uiwebview-and-wkwebview">What's the difference between UIWebView and WKWebView? 
/example-code/wkwebview/how-to-run-javascript-on-a-wkwebview-with-evaluatejavascript">How to run JavaScript on a WKWebView with evaluateJavaScript() 
/example-code/wkwebview/how-to-monitor-wkwebview-page-load-progress-using-key-value-observing">How to monitor WKWebView page load progress using key-value observing</a>
`)],-1);function f(s,k){const i=w("VPCard");return h(),r("div",null,[e("h1",d,[e("a",p,[e("span",null,l(s.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),o(i,a(n({title:"WKWebView - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/wkwebview/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),m,v,o(i,a(n({title:"How to control the sites a WKWebView can visit using WKNavigationDelegate | WKWebView - free Swift example code",desc:"How to control the sites a WKWebView can visit using WKNavigationDelegate",link:"https://hackingwithswift.com/example-code/wkwebview/how-to-control-the-sites-a-wkwebview-can-visit-using-wknavigationdelegate",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),u,t(" TODO: ÏûëÏÑ± "),t(' \nBy default a `WKWebView` can navigate to any links the user selects, but it‚Äôs common to want to restrict that. It only takes three steps to accomplish this:\n\n1. Make your view controller conform to `WKNavigationDelegate`.\n<li>Assign your view controller to be your web view‚Äôs `navigationDelegate`.\n<li>Implement the `decidePolicyFor` method to decide whether each URL should be allowed or denied.\n\nLet‚Äôs try it out now. First, make your view controller conform to `WKNavigationDelegate`.\n\nSecond, set your view controller to be the `navigationDelegate` property of your web view. This might be done in `viewDidLoad()`, but you can also change the delegate dynamically. Either way, you need to use this code:\n\n```swift\nyourWebView.navigationDelegate = self\n```\n\nFinally, implement the `decidePolicyFor` method. This is the only part that takes any work: you need to pull out the host of the URL that was requested, run any checks you want to make sure it‚Äôs OK, then call the `decisionHandler()` closure with either `.allow` to allow the URL or `.cancel` to deny access.\n\nHere‚Äôs an example to get you started:\n\n```swift\nfunc webView(_ webView: WKWebView, decidePolicyFor navigationAction: WKNavigationAction, decisionHandler: @escaping (WKNavigationActionPolicy) -> Void) {\n    if let host = navigationAction.request.url?.host {\n        if host.contains("hackingwithswift.com") {\n            decisionHandler(.allow)\n            return\n        }\n    }\n\n    decisionHandler(.cancel)\n}\n```\n\nThat code will allow navigation only to URLs that contain ‚Äúhackingwithswift.com‚Äù.\n\n'),b])}const K=c(g,[["render",f],["__file","how-to-control-the-sites-a-wkwebview-can-visit-using-wknavigationdelegate.html.vue"]]),V=JSON.parse('{"path":"/hackingwithswift.com/example-code/wkwebview/how-to-control-the-sites-a-wkwebview-can-visit-using-wknavigationdelegate.html","title":"How to control the sites a WKWebView can visit using WKNavigationDelegate","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to control the sites a WKWebView can visit using WKNavigationDelegate","description":"Article(s) > How to control the sites a WKWebView can visit using WKNavigationDelegate","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-9.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to control the sites a WKWebView can visit using WKNavigationDelegate"},{"property":"og:description","content":"How to control the sites a WKWebView can visit using WKNavigationDelegate"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/wkwebview/how-to-control-the-sites-a-wkwebview-can-visit-using-wknavigationdelegate.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/wkwebview/how-to-control-the-sites-a-wkwebview-can-visit-using-wknavigationdelegate.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to control the sites a WKWebView can visit using WKNavigationDelegate"}],["meta",{"property":"og:description","content":"Article(s) > How to control the sites a WKWebView can visit using WKNavigationDelegate"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-9.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-09-19T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to control the sites a WKWebView can visit using WKNavigationDelegate\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-09-19T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-09-19T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.75,"words":526},"filePathRelative":"hackingwithswift.com/example-code/wkwebview/how-to-control-the-sites-a-wkwebview-can-visit-using-wknavigationdelegate.md","localizedDate":"2019ÎÖÑ 9Ïõî 19Ïùº","excerpt":"\\n"}');export{K as comp,V as data};
