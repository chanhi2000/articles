import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as n,t as r,e as s,n as t,g as e,f as u,r as o,o as d}from"./app-BgNevrm5.js";const k={},m={id:"frontmatter-title-관련",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-관련"},g=n("nav",{class:"table-of-contents"},[n("ul")],-1),w=n("hr",null,null,-1),v=n("blockquote",null,[n("p",null,"Updated for Xcode 15")],-1),y=u(`<p>The easy way to sort your SwiftData queries is by passing extra options to the <code>@Query</code> macro.</p><p>For example, we might want to store destinations alphabetically by their name, so we&#39;d</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@Query</span><span class="token punctuation">(</span>sort<span class="token punctuation">:</span> <span class="token punctuation">\\</span><span class="token class-name">Destination</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Or we can sort by priority in descending order like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@Query</span><span class="token punctuation">(</span>sort<span class="token punctuation">:</span> <span class="token punctuation">\\</span><span class="token class-name">Destination</span><span class="token punctuation">.</span>priority<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span> <span class="token keyword">var</span> destinations<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Destination</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>That handles only one property, but so if you need more than one – if you want to sort by priority descending then name ascending, for example, you need to use a <code>SortDescriptor</code> array:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@Query</span><span class="token punctuation">(</span>sort<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token class-name">Destination</span><span class="token punctuation">.</span>priority<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token class-name">Destination</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">var</span> destinations<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Destination</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>You can have as many sort descriptors as you need in that array, and SwiftData will work through them one by one.</p><p>This approach works great when you know your sort order at compile time, but very often you want your user to be able to sort their data however they want.</p><p>This takes quite a bit more work, because properties created with <code>@Query</code> don&#39;t have any sort of simple <code>sortOrder</code> property we can use. Instead, you need to move your <code>@Query</code> property down one view in SwiftUI’s hierarchy – you need to put it into a subview where you can inject a sort using the view&#39;s initializer.</p><p>The first step is to make a new SwiftUI view called <code>DestinationListingView</code>, then giving it a SwiftData import line at the top.</p><p>Next, we need to move some code from <code>ContentView</code> into <code>DestinationListingView</code>:</p><ol><li>The <code>destinations</code> property.</li><li>The whole <code>List</code> into there, but not its modifiers.</li><li>The <code>deleteDestinations()</code> method.</li></ol><p>You should also <em>copy</em> the <code>@Environment</code> property for <code>modelContext</code> into <code>DestinationListingView</code> – this should be copied rather than moved, because we need it in both places.</p><p>Finally, put <code>DestinationListingView</code> where the <code>List</code> was in <code>ContentView</code>, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">NavigationStack</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> $path<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">DestinationListingView</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">navigationDestination</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Destination</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> destination<span class="token punctuation">:</span> <span class="token class-name">EditDestinationView</span><span class="token punctuation">.</span><span class="token keyword">init</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;iTour&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span>toolbar <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Add Destination&quot;</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;plus&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> addDestination<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>All we&#39;ve done is move the code around a little, which means the app will look identical when it runs. However, because <code>DestinationListingView</code> is a subview of <code>ContentView</code>, we’re now able to send values into there to control the SwiftData query.</p><p>This takes five steps in in total:</p><ol><li>Making some storage to hold whatever is the user&#39;s current sort order.</li><li>Creating some UI to adjust that sort order based on the user’s settings.</li><li>Telling the <code>DestinationListingView</code> that it needs to be created with some kind of sort order.</li><li>Updating its preview to pass in an example sort order.</li><li>Passing the sort order into <code>DestinationListingView</code> when it’s created.</li></ol><p>We’ll work through those step by step.</p><p>First, add this property to <code>ContentView</code>, which will contain the current sort order with a sensible default:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> sortOrder <span class="token operator">=</span> <span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token class-name">Destination</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Second, we&#39;ll create a menu button in our toolbar that lets the user switch between sort orders. Add this to the toolbar in <code>ContentView</code>:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Sort&quot;</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;arrow.up.arrow.down&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Picker</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Sort&quot;</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">:</span> $sortOrder<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Name&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token class-name">Destination</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Priority&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token class-name">Destination</span><span class="token punctuation">.</span>priority<span class="token punctuation">,</span> order<span class="token punctuation">:</span> <span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Date&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token class-name">Destination</span><span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">pickerStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>inline<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Third, we need to add an initializer to <code>DestinationListingView</code> so that it accepts a destination sort order to use its query. Because we&#39;re trying to change the query itself rather than the array of data it returned, we need to use the underscored property name like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">init</span><span class="token punctuation">(</span>sort<span class="token punctuation">:</span> <span class="token class-name">SortDescriptor</span><span class="token operator">&lt;</span><span class="token class-name">Destination</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    _destinations <span class="token operator">=</span> <span class="token class-name">Query</span><span class="token punctuation">(</span>sort<span class="token punctuation">:</span> <span class="token punctuation">[</span>sort<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Fourth, we need to update the preview code to pass in a sample sort option:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token other-directive property">#Preview</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">DestinationListingView</span><span class="token punctuation">(</span>sort<span class="token punctuation">:</span> <span class="token class-name">SortDescriptor</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token class-name">Destination</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And finally, we need to adjust <code>ContentView</code> so that it sends its sorting value into <code>DestinationListingView</code>, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">DestinationListingView</span><span class="token punctuation">(</span>sort<span class="token punctuation">:</span> sortOrder<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>All that work has moved the sort ordering up one level from <code>DestinationListingView</code>, which means we can now control it dynamically.</p>`,31);function b(i,f){const a=o("VPCard"),p=o("VidStack");return d(),l("div",null,[n("h1",m,[n("a",h,[n("span",null,r(i.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"SwiftData by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftdata/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,w,s(a,t(e({title:"Sorting query results | SwiftData by Example",desc:"Sorting query results",link:"https://hackingwithswift.com/quick-start/swiftdata/sorting-query-results",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,s(p,{src:"youtube/mqLDroFreFE"}),y])}const S=c(k,[["render",b],["__file","sorting-query-results.html.vue"]]),_=JSON.parse('{"path":"/hackingwithswift.com/swiftdata/sorting-query-results.html","title":"Sorting query results","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Sorting query results","description":"Article(s) > Sorting query results","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftdata","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Sorting query results"},{"property":"og:description","content":"Sorting query results"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/sorting-query-results.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/sorting-query-results.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Sorting query results"}],["meta",{"property":"og:description","content":"Article(s) > Sorting query results"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftdata"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2023-10-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Sorting query results\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2023-10-01T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.52,"words":757},"filePathRelative":"hackingwithswift.com/swiftdata/sorting-query-results.md","localizedDate":"2023년 10월 1일","excerpt":"\\n"}');export{S as comp,_ as data};
