import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as h,b as t,t as d,e as o,n as r,g as n,d as e,w as c,f as u,r as s,o as m}from"./app-BgNevrm5.js";const g={},w={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},y=t("nav",{class:"table-of-contents"},[t("ul")],-1),_=t("hr",null,null,-1),k=u("<p>This was an epic tutorial: epic in length, epic in breadth, and I hope you&#39;ll agree epic in what we&#39;ve accomplished. You&#39;ve built another real app, you&#39;ve learned about <code>AVAudioRecorder</code>, <code>CKQuery</code>, <code>CKRecord</code>, <code>CKAsset</code>, <code>CKQueryOperation</code>, <code>CKQuerySubscription</code>, <code>NSPredicate</code>, <code>NSSortDescriptor</code> and more, while also having some bonus practice working with <code>UIStackView</code>, <code>UITableView</code> and <code>NSAttributedString</code>.</p><p>So yes, the tutorial was long, but even though you&#39;re tired I&#39;d like to think you&#39;re pleased with the end result. Take a break, perhaps even a couple of days, then come back and have a think about how you could improve this project. It&#39;s so big there are lots of possibilities, not least:</p>",2),b=t("li",null,'If the iCloud fetch fails, we tell the user. How about adding a "Retry" button to the user interface?',-1),v=t("code",null,"Whistle",-1),S=t("code",null,"NSObject",-1),C=t("code",null,"NSCoding",-1),A=t("code",null,"NSCoding",-1),W=t("code",null,"UserDefaults",-1),x=t("code",null,"AddCommentsViewController",-1),N=t("li",null,"Stop people from posting too many line breaks in their comments, or at least trim the comments when shown in the main table view.",-1),R=t("p",null,"Of course, the other thing you could do is perhaps the most important of all: go back through all your code and make sure you handle CloudKit errors gracefully. Seriously, put your hand in the air and repeat after me: I promise to show meaningful iCloud errors to my users.",-1),O=t("p",null,[e("Now, I know you didn't actually do that, but you really ought to at least "),t("em",null,"mean"),e(" it. As Apple has said, handling errors is the difference between working apps and non-working apps, and you don't want a non-working app, do you?")],-1);function V(l,I){const a=s("VPCard"),i=s("RouteLink");return m(),h("div",null,[t("h1",w,[t("a",f,[t("span",null,d(l.$frontmatter.title)+" ê´€ë ¨",1)])]),o(a,r(n({title:"Hacking with iOS â€“ learn to code iPhone and iPad apps with free Swift tutorials",desc:"Learn Swift coding for iOS with these free tutorials â€“ learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/read/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),y,_,o(a,r(n({title:"Wrap up | Hacking with iOS",desc:"Wrap up",link:"https://hackingwithswift.com/read/33/9/wrap-up",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),k,t("ul",null,[b,t("li",null,[e("We made the "),v,e(" class inherit from "),S,e(". Can you make it conform to the "),C,e(" protocol? You might find project 12â€™s "),o(i,{to:"/hackingwithswift.com/read/12/overview.html"},{default:c(()=>[e("guide to "),A,e(" and "),W,e(" in Swift")]),_:1}),e(" useful.")]),t("li",null,[e("Fix the "),x,e(" class so that it correctly adjusts the text view when the keyboard appears. I already showed you how to do this in "),o(i,{to:"/hackingwithswift.com/read/16/overview.html"},{default:c(()=>[e("project 16")]),_:1}),e(".")]),N]),R,O])}const j=p(g,[["render",V],["__file","09-wrap-up.html.vue"]]),T=JSON.parse('{"path":"/hackingwithswift.com/read/33/09-wrap-up.html","title":"Wrap up","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Wrap up","description":"Article(s) > Wrap up","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","xcode","appstore","ios"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Wrap up"},{"property":"og:description","content":"Wrap up"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/read/33/09-wrap-up.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/read/33/09-wrap-up.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"Wrap up"}],["meta",{"property":"og:description","content":"Article(s) > Wrap up"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:tag","content":"ios"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Wrap up\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"next":"/hackingwithswift.com/read/34/overview.md","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.45,"words":435},"filePathRelative":"hackingwithswift.com/read/33/09-wrap-up.md","excerpt":"\\n"}');export{j as comp,T as data};
