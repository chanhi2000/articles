import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,t as u,e as a,n as t,g as e,d as o,f as d,r as i,o as m}from"./app-BgNevrm5.js";const k={},w={id:"frontmatter-title-관련",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-관련"},f=n("nav",{class:"table-of-contents"},[n("ul")],-1),g=n("hr",null,null,-1),v=d(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in iOS 15</strong></p><p>SwiftUI’s <code>Canvas</code> view lets us have free control over drawing in our app, and its <code>TimelineView</code> lets us redraw views as often as we need. If we combine these two views together we can create much more advanced effects, including particle systems to simulate rain, snow, fog, fire, and more.</p><p>To demonstrate this we can produce some code that creates a simple rain effect.</p><p>This starts by defining the data a single drop of rain needs to know in order to work: where it is located horizontally, and when it should be removed from the screen, and how the speed it should fall. That speed property is important, because it means our raindrops won’t all fall at a uniform speed – it makes the whole effect look a lot more realistic.</p><p>Alongside a single raindrop, we’re also going to create a class to manage the whole rainstorm. This will have a set of <code>Raindrop</code> instances, and a method that removes any old raindrops, and creates a new one with a random location and speed.</p><p>Start with this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">Raindrop</span><span class="token punctuation">:</span> <span class="token class-name">Hashable</span><span class="token punctuation">,</span> <span class="token class-name">Equatable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> x<span class="token punctuation">:</span> <span class="token class-name">Double</span></span>
<span class="line">    <span class="token keyword">var</span> removalDate<span class="token punctuation">:</span> <span class="token class-name">Date</span></span>
<span class="line">    <span class="token keyword">var</span> speed<span class="token punctuation">:</span> <span class="token class-name">Double</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Storm</span><span class="token punctuation">:</span> <span class="token class-name">ObservableObject</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> drops <span class="token operator">=</span> <span class="token class-name">Set</span><span class="token operator">&lt;</span><span class="token class-name">Raindrop</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">update</span><span class="token punctuation">(</span>to date<span class="token punctuation">:</span> <span class="token class-name">Date</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        drops <span class="token operator">=</span> drops<span class="token punctuation">.</span>filter <span class="token punctuation">{</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>removalDate <span class="token operator">&gt;</span> date <span class="token punctuation">}</span></span>
<span class="line">        drops<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token class-name">Raindrop</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token operator">...</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> removalDate<span class="token punctuation">:</span> date <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> speed<span class="token punctuation">:</span> <span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token operator">...</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>There are two important things about that code:</p><ol><li>Each rain drop’s X position is a value between 0 and 1, meaning somewhere between the left edge (0) and the right (1).</li><li>The <code>removalDate</code> property is set to the current time plus 1 second, so all our raindrops live for 1 second.</li></ol><p>Finally, we can create a <code>TimelineView</code> and <code>Canvas</code>. This will:</p><ol><li>Use the <code>.animation</code> schedule for the timeline so that it draws as fast as possible.</li><li>Call <code>update()</code> on our storm, passing in the current date.</li><li>For each rain drop, figure out how much time we have until it is removed.</li><li>The drop’s X position is calculated as its <code>x</code> value multiplied by the width of our drawing context. Remember, <code>x</code> will be between 0 and 1, so this will produce a value between 0 and the width of our drawing context.</li><li>The drop’s Y position will be its age multiplied by its speed, multiplied by the height of the canvas. If we left it there our drops would “fall” upwards, but we subtract that from the canvas height they will fall downwards.</li><li>We can now fill a thin and long capsule at that X and Y coordinate, with a suitably rainy color.</li></ol><p>Here’s that in code:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@StateObject</span> <span class="token keyword">private</span> <span class="token keyword">var</span> storm <span class="token operator">=</span> <span class="token class-name">Storm</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">let</span> rainColor <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>red<span class="token punctuation">:</span> <span class="token number">0.25</span><span class="token punctuation">,</span> green<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> blue<span class="token punctuation">:</span> <span class="token number">0.75</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">TimelineView</span><span class="token punctuation">(</span><span class="token punctuation">.</span>animation<span class="token punctuation">)</span> <span class="token punctuation">{</span> timeline <span class="token keyword">in</span></span>
<span class="line">            <span class="token class-name">Canvas</span> <span class="token punctuation">{</span> context<span class="token punctuation">,</span> size <span class="token keyword">in</span></span>
<span class="line">                storm<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> timeline<span class="token punctuation">.</span>date<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">                <span class="token keyword">for</span> drop <span class="token keyword">in</span> storm<span class="token punctuation">.</span>drops <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">let</span> age <span class="token operator">=</span> timeline<span class="token punctuation">.</span>date<span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> drop<span class="token punctuation">.</span>removalDate<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token keyword">let</span> rect <span class="token operator">=</span> <span class="token class-name">CGRect</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> drop<span class="token punctuation">.</span>x <span class="token operator">*</span> size<span class="token punctuation">.</span>width<span class="token punctuation">,</span> y<span class="token punctuation">:</span> size<span class="token punctuation">.</span>height <span class="token operator">-</span> <span class="token punctuation">(</span>size<span class="token punctuation">.</span>height <span class="token operator">*</span> age <span class="token operator">*</span> drop<span class="token punctuation">.</span>speed<span class="token punctuation">)</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token keyword">let</span> shape <span class="token operator">=</span> <span class="token class-name">Capsule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> rect<span class="token punctuation">)</span></span>
<span class="line">                    context<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span>shape<span class="token punctuation">,</span> with<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">color</span><span class="token punctuation">(</span>rainColor<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">background</span><span class="token punctuation">(</span><span class="token punctuation">.</span>black<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">ignoresSafeArea</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That’s not a huge amount of code, but it already creates a pretty compelling effect. From here you can start to consider things like having different opacities for raindrops, placing them at a slight angle, and more.</p>`,15),b=n("code",null,"Canvas",-1),y=n("code",null,"TimelineView",-1),_={href:"https://hackingwithswift.com/plus/remaking-apps",target:"_blank",rel:"noopener noreferrer"},x={class:"hint-container details"},S=n("summary",null,"Similar solutions…",-1);function T(p,C){const s=i("VPCard"),c=i("FontIcon");return m(),r("div",null,[n("h1",w,[n("a",h,[n("span",null,u(p.$frontmatter.title)+" 관련",1)])]),a(s,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,g,a(s,t(e({title:"How to create custom animated drawings with TimelineView and Canvas | SwiftUI by Example",desc:"How to create custom animated drawings with TimelineView and Canvas",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-create-custom-animated-drawings-with-timelineview-and-canvas",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,n("p",null,[o("Over on Hacking with Swift+ I have a whole series of tutorials teaching you how to recreate the particle effects in Apple’s Weather app using "),b,o(" and "),y,o(": "),n("a",_,[a(c,{icon:"fas fa-globe"})]),o(".")]),n("details",x,[S,a(s,t(e({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"All SwiftUI property wrappers explained and compared | SwiftUI by Example",desc:"All SwiftUI property wrappers explained and compared",link:"/hackingwithswift.com/swiftui/all-swiftui-property-wrappers-explained-and-compared.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to add Metal shaders to SwiftUI views using layer effects | SwiftUI by Example",desc:"How to add Metal shaders to SwiftUI views using layer effects",link:"/hackingwithswift.com/swiftui/how-to-add-metal-shaders-to-swiftui-views-using-layer-effects.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"How to use Instruments to profile your SwiftUI code and identify slow layouts | SwiftUI by Example",desc:"How to use Instruments to profile your SwiftUI code and identify slow layouts",link:"/hackingwithswift.com/swiftui/how-to-use-instruments-to-profile-your-swiftui-code-and-identify-slow-layouts.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(s,t(e({title:"Building a menu using List | SwiftUI by Example",desc:"Building a menu using List",link:"/hackingwithswift.com/swiftui/building-a-menu-using-list.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const U=l(k,[["render",T],["__file","how-to-create-custom-animated-drawings-with-timelineview-and-canvas.html.vue"]]),H=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-create-custom-animated-drawings-with-timelineview-and-canvas.html","title":"How to create custom animated drawings with TimelineView and Canvas","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to create custom animated drawings with TimelineView and Canvas","description":"Article(s) > How to create custom animated drawings with TimelineView and Canvas","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to create custom animated drawings with TimelineView and Canvas"},{"property":"og:description","content":"How to create custom animated drawings with TimelineView and Canvas"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-custom-animated-drawings-with-timelineview-and-canvas.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-custom-animated-drawings-with-timelineview-and-canvas.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to create custom animated drawings with TimelineView and Canvas"}],["meta",{"property":"og:description","content":"Article(s) > How to create custom animated drawings with TimelineView and Canvas"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to create custom animated drawings with TimelineView and Canvas\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.22,"words":966},"filePathRelative":"hackingwithswift.com/swiftui/how-to-create-custom-animated-drawings-with-timelineview-and-canvas.md","excerpt":"\\n"}');export{U as comp,H as data};
