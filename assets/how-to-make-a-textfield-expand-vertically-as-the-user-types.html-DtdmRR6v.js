import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as s,t as d,e as a,n as e,g as t,d as i,f as l,r as p,o as k}from"./app-BgNevrm5.js";const m={},h={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},v=s("nav",{class:"table-of-contents"},[s("ul")],-1),f=s("hr",null,null,-1),g=l(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI&#39;s <code>TextField</code> has a single line by default, and <code>TextEditor</code> is a multiline alternative based on how much space you want to allocate. But there&#39;s a middle ground: if we pass an <code>axis</code> parameter to <code>TextField</code>, we can ask it to <em>start</em> as a single line and grow upwards as the user types, optionally switching to scrolling once the text goes past a certain length.</p><p>For example, this creates a <code>TextField</code> that automatically expands as the user enters more and more text:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> bio <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;About me&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Describe yourself&quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $bio<span class="token punctuation">,</span> axis<span class="token punctuation">:</span> <span class="token punctuation">.</span>vertical<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">textFieldStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>roundedBorder<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span>bio<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),b={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-make-a-textfield-expand-vertically-as-the-user-types-1.zip",target:"_blank",rel:"noopener noreferrer"},y=l(`<p>You can control how big the <code>TextField</code> can grow by adding a <code>lineLimit()</code> modifier. For example, we might want to say that it should start out as a single line, but allow growth up to a maximum of five lines:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> bio <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;About me&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Describe yourself&quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $bio<span class="token punctuation">,</span> axis<span class="token punctuation">:</span> <span class="token punctuation">.</span>vertical<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">textFieldStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>roundedBorder<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">lineLimit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span>bio<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-make-a-textfield-expand-vertically-as-the-user-types-2.zip",target:"_blank",rel:"noopener noreferrer"},T=l(`<p>That doesn&#39;t mean the user can&#39;t type <em>more</em> than five lines, only that once the <code>TextField</code> goes beyond that limit it will switch to scrolling rather than growing further.</p><p>You can pass a range here if you want, for example using <code>lineLimit(2...5)</code> to mean “always be at least two lines high, but grow up to five.”</p><p>You can also use the <code>reservesSpace</code> parameter to <code>lineLimit()</code> so that the view automatically allocates enough space for the maximum size it can have. For example, this creates a <code>TextField</code> that reserves enough layout space to hold up to five lines of text:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> bio <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;About me&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Describe yourself&quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $bio<span class="token punctuation">,</span> axis<span class="token punctuation">:</span> <span class="token punctuation">.</span>vertical<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">textFieldStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>roundedBorder<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">lineLimit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> reservesSpace<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span>bio<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),_={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-make-a-textfield-expand-vertically-as-the-user-types-3.zip",target:"_blank",rel:"noopener noreferrer"},F=s("p",null,[i("The combination of this growing behavior and its ability to have a placeholder makes "),s("code",null,"TextField"),i(" a really great choice for entering user text, and preferable to "),s("code",null,"TextEditor"),i(" in situations where you aren't relying on an exact view frame and you don't need search and replace functionality.")],-1),S={class:"hint-container details"},H=s("summary",null,"Similar solutions…",-1);function V(c,q){const n=p("VPCard"),o=p("FontIcon");return k(),u("div",null,[s("h1",h,[s("a",w,[s("span",null,d(c.$frontmatter.title)+" 관련",1)])]),a(n,e(t({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),v,f,a(n,e(t({title:"How to make a TextField expand vertically as the user types | SwiftUI by Example",desc:"How to make a TextField expand vertically as the user types",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-make-a-textfield-expand-vertically-as-the-user-types",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),g,s("blockquote",null,[s("p",null,[s("a",b,[a(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),y,s("blockquote",null,[s("p",null,[s("a",x,[a(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),T,s("blockquote",null,[s("p",null,[s("a",_,[a(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),F,s("details",S,[H,a(n,e(t({title:"How to take action when the user submits a TextField | SwiftUI by Example",desc:"How to take action when the user submits a TextField",link:"/hackingwithswift.com/swiftui/how-to-take-action-when-the-user-submits-a-textfield.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(n,e(t({title:"How to make a TextField or TextEditor have default focus | SwiftUI by Example",desc:"How to make a TextField or TextEditor have default focus",link:"/hackingwithswift.com/swiftui/how-to-make-a-textfield-or-texteditor-have-default-focus.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(n,e(t({title:"How to make TextField uppercase or lowercase using textCase() | SwiftUI by Example",desc:"How to make TextField uppercase or lowercase using textCase()",link:"/hackingwithswift.com/swiftui/how-to-make-textfield-uppercase-or-lowercase-using-textcase.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(n,e(t({title:"How to dismiss the keyboard for a TextField | SwiftUI by Example",desc:"How to dismiss the keyboard for a TextField",link:"/hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-for-a-textfield.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(n,e(t({title:"How to add a TextField to an alert | SwiftUI by Example",desc:"How to add a TextField to an alert",link:"/hackingwithswift.com/swiftui/how-to-add-a-textfield-to-an-alert.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const I=r(m,[["render",V],["__file","how-to-make-a-textfield-expand-vertically-as-the-user-types.html.vue"]]),U=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-make-a-textfield-expand-vertically-as-the-user-types.html","title":"How to make a TextField expand vertically as the user types","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to make a TextField expand vertically as the user types","description":"Article(s) > How to make a TextField expand vertically as the user types","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to make a TextField expand vertically as the user types"},{"property":"og:description","content":"How to make a TextField expand vertically as the user types"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-make-a-textfield-expand-vertically-as-the-user-types.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-make-a-textfield-expand-vertically-as-the-user-types.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to make a TextField expand vertically as the user types"}],["meta",{"property":"og:description","content":"Article(s) > How to make a TextField expand vertically as the user types"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to make a TextField expand vertically as the user types\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.78,"words":833},"filePathRelative":"hackingwithswift.com/swiftui/how-to-make-a-textfield-expand-vertically-as-the-user-types.md","excerpt":"\\n"}');export{I as comp,U as data};
