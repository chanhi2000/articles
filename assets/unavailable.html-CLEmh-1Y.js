import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as t,t as h,e,n as a,g as o,d as n,a as u,f as c,r as l,o as f}from"./app-BgNevrm5.js";const g={},m={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},b=t("nav",{class:"table-of-contents"},[t("ul")],-1),v=t("hr",null,null,-1),k=t("blockquote",null,[t("p",null,"Available from Swift 5.6")],-1),y={href:"https://github.com/apple/swift-evolution/blob/main/proposals/0290-negative-availability.md",target:"_blank",rel:"noopener noreferrer"},_=t("code",null,"apple/swift-evolution",-1),S=t("code",null,"#available",-1),C=t("code",null,"#unavailable",-1),O=c(`<p>This is going to be particularly useful in places where you were previously using <code>#available</code> with an empty true block because you only wanted to run code if a specific operating system was <em>unavailable</em>. So, rather than writing code like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token other-directive property">#available</span><span class="token punctuation">(</span>iOS <span class="token number">15</span><span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Code to make iOS 14 and earlier work correctly</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We can now write this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">if</span> <span class="token other-directive property">#unavailable</span><span class="token punctuation">(</span>iOS <span class="token number">15</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Code to make iOS 14 and earlier work correctly</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),P=t("code",null,"#available",-1),A={href:"https://github.com/signalapp/Signal-iOS/blob/fb2e0d785081d4f4b2d2f568f1f2a4f8e94ee5a2/Signal/src/ViewControllers/ConversationView/ConversationViewLayout.swift#L890",target:"_blank",rel:"noopener noreferrer"},U=t("code",null,"signalapp/Signal-iOS",-1),x={href:"https://github.com/videolan/vlc-ios/blob/82e93d7b3e1ce607bacfa61bd4938f36a816be74/SharedSources/Store%20Integration/StoreViewController.swift#L48",target:"_blank",rel:"noopener noreferrer"},I=t("code",null,"videolan/vlc-ios",-1),V={href:"https://github.com/ProtonMail/ios-mail/blob/bad1e950430f3ae1d893dc8e4ad5f4833ecfbfe2/ProtonMail/ProtonMail/AppDelegate.swift#L226",target:"_blank",rel:"noopener noreferrer"},M=t("code",null,"ProtonMail/ios-mail",-1),T=c("<p>Apart from their flipped behavior, one key difference between <code>#available</code> and <code>#unavailable</code> is the platform wildcard, <code>*</code>. This is required with <code>#available</code> to allow for potential future platforms, which meant that writing <code>if #available(iOS 15, *)</code> would mark some code as being available on iOS versions 15 or later, or all other platforms ‚Äì macOS, tvOS, watchOS, and any future unknown platforms.</p><p>With <code>#unavailable</code>, this behavior no longer makes sense: would writing <code>if #unavailable(iOS 15, *)</code> mean ‚Äúthe following code should be run on iOS 14 and earlier,‚Äù or should it also include macOS, tvOS, watchOS, Linux, and more, where iOS 15 is also unavailable? To avoid this ambiguity, the platform wildcard is <em>not</em> allowed with <code>#unavailable</code>: only platforms you specifically list are considered for the test.</p>",2),K={class:"hint-container details"},N=t("summary",null,"Other Changes in Swift 5.6",-1),D={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-5-5-to-5-6.playground.zip",target:"_blank",rel:"noopener noreferrer"};function R(r,L){const i=l("VPCard"),s=l("FontIcon");return f(),p("div",null,[t("h1",m,[t("a",w,[t("span",null,h(r.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),e(i,a(o({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,v,e(i,a(o({title:"Unavailability condition | Changes in Swift 5.6",desc:"Unavailability condition",link:"https://hackingwithswift.com/swift/5.6/unavailable",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k,t("p",null,[t("a",y,[n("SE-0290 ("),e(s,{icon:"iconfont icon-github"}),_,n(")")]),n(" introduces an inverted form of "),S,n(" called "),C,n(", which will run some code if an availability check fails.")]),O,t("p",null,[n("This problem wasn‚Äôt just theoretical ‚Äì using an empty "),P,n(" block was a "),t("a",A,[n("fairly ("),e(s,{icon:"iconfont icon-github"}),U,n(")")]),n(),t("a",x,[n("common ("),e(s,{icon:"iconfont icon-github"}),I,n(")")]),n(),t("a",V,[n("workaround ("),e(s,{icon:"iconfont icon-github"}),M,n(")")]),n(", particularly in the transition to the scene-based UIKit APIs in iOS 13.")]),T,t("details",K,[N,e(i,a(o({title:"Introduce existential any | Changes in Swift 5.6",desc:"Introduce existential any",link:"/hackingwithswift.com/swift/5.6/existential-any.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(i,a(o({title:"Type placeholders | Changes in Swift 5.6",desc:"Type placeholders",link:"/hackingwithswift.com/swift/5.6/type-placeholders.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(i,a(o({title:"Allow coding of non String/Int keyed Dictionary into a KeyedContainer | Changes in Swift 5.6",desc:"Allow coding of non String/Int keyed Dictionary into a KeyedContainer",link:"/hackingwithswift.com/swift/5.6/codingkeyrepresentable.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),u(` 
\`\`\`component VPCard
{
  "title": "Unavailability condition | Changes in Swift 5.6",
  "desc": "Unavailability condition",
  "link": "/hackingwithswift.com/swift/5.6/unavailable.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),e(i,a(o({title:"More concurrency changes | Changes in Swift 5.6",desc:"More concurrency changes",link:"/hackingwithswift.com/swift/5.6/preconcurrency.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),e(i,a(o({title:"Plugins for Swift Package Manager | Changes in Swift 5.6",desc:"Plugins for Swift Package Manager",link:"/hackingwithswift.com/swift/5.6/swiftpm-plugins.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t("p",null,[t("a",D,[e(s,{icon:"fas fa-file-zipper"}),n("Download Swift 5.6 playground")])])])])}const B=d(g,[["render",R],["__file","unavailable.html.vue"]]),E=JSON.parse('{"path":"/hackingwithswift.com/swift/5.6/unavailable.html","title":"Unavailability condition","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Unavailability condition","description":"Article(s) > Unavailability condition","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-5.6"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Unavailability condition"},{"property":"og:description","content":"Unavailability condition"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.6/unavailable.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.6/unavailable.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"Unavailability condition"}],["meta",{"property":"og:description","content":"Article(s) > Unavailability condition"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.6"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Unavailability condition\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.97,"words":592},"filePathRelative":"hackingwithswift.com/swift/5.6/unavailable.md","excerpt":"\\n"}');export{B as comp,E as data};
