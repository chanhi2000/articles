import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as t,t as n,e as a,n as r,g as i,f as c,r as h,o as l}from"./app-BgNevrm5.js";const d={},w={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},u={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},m=t("nav",{class:"table-of-contents"},[t("ul")],-1),g=t("hr",null,null,-1),f=c(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI uses the <code>@State</code> property wrapper to allow us to modify values inside a struct, which would normally not be allowed because structs are value types.</p><p>When we put <code>@State</code> before a property, we effectively move its storage out from our struct and into shared storage managed by SwiftUI. This means SwiftUI can destroy and recreate our struct whenever needed (and this can happen a lot!), without losing the state it was storing.</p><p><code>@State</code> should be used with simple struct types such as <code>String</code>, <code>Int</code>, and arrays, and generally shouldnâ€™t be shared with other views. If you want to share values across views, you should probably use <code>@ObservedObject</code> or <code>@EnvironmentObject</code> instead â€“ both of those will ensure that all views will be refreshed when the data changes.</p><p>To re-enforce the local nature of <code>@State</code> properties, Apple recommends you mark them as <code>private</code>, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> username <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This isnâ€™t required, but it seems like smart practice.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>You can use <code>@State</code> to track reference types if you want, you just wonâ€™t be notified when they change. This is particularly helpful for classes that donâ€™t conform to the <code>ObservableObject</code> protocol.</p></div>`,8),y={class:"hint-container details"},b=t("summary",null,"Similar solutionsâ€¦",-1);function k(o,v){const e=h("VPCard");return l(),p("div",null,[t("h1",w,[t("a",u,[t("span",null,n(o.$frontmatter.title)+" ê´€ë ¨",1)])]),a(e,r(i({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),m,g,a(e,r(i({title:"What is the @State property wrapper? | SwiftUI by Example",desc:"What is the @State property wrapper?",link:"https://hackingwithswift.com/quick-start/swiftui/what-is-the-state-property-wrapper",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f,t("details",y,[b,a(e,r(i({title:"What is the @GestureState property wrapper? | SwiftUI by Example",desc:"What is the @GestureState property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-gesturestate-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(e,r(i({title:"What is the @Published property wrapper? | SwiftUI by Example",desc:"What is the @Published property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-published-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(e,r(i({title:"What is the @ObservedObject property wrapper? | SwiftUI by Example",desc:"What is the @ObservedObject property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-observedobject-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(e,r(i({title:"What is the @ScaledMetric property wrapper? | SwiftUI by Example",desc:"What is the @ScaledMetric property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-scaledmetric-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(e,r(i({title:"What is the @Binding property wrapper? | SwiftUI by Example",desc:"What is the @Binding property wrapper?",link:"/hackingwithswift.com/swiftui/what-is-the-binding-property-wrapper.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const W=s(d,[["render",k],["__file","what-is-the-state-property-wrapper.html.vue"]]),x=JSON.parse('{"path":"/hackingwithswift.com/swiftui/what-is-the-state-property-wrapper.html","title":"What is the @State property wrapper?","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"What is the @State property wrapper?","description":"Article(s) > What is the @State property wrapper?","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > What is the @State property wrapper?"},{"property":"og:description","content":"What is the @State property wrapper?"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/what-is-the-state-property-wrapper.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/what-is-the-state-property-wrapper.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"What is the @State property wrapper?"}],["meta",{"property":"og:description","content":"Article(s) > What is the @State property wrapper?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"What is the @State property wrapper?\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.68,"words":504},"filePathRelative":"hackingwithswift.com/swiftui/what-is-the-state-property-wrapper.md","excerpt":"\\n"}');export{W as comp,x as data};
