import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as s,t as c,e as a,n,g as e,f as l,r,o as u}from"./app-BgNevrm5.js";const m={},d={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},y=s("nav",{class:"table-of-contents"},[s("ul")],-1),w=s("hr",null,null,-1),f=l(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUIâ€™s automatic support of Dynamic Type means our views are free to grow and shrink according to the userâ€™s preference. However, sometimes you might need to place limits on just how far your user interface is able to adjust, and for that we have the <code>dynamicTypeSize()</code> modifier.</p><p>This can used with a fixed value, meaning that your view will ignore all Dynamic Type sizes:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This will stay small&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">dynamicTypeSize</span><span class="token punctuation">(</span><span class="token punctuation">.</span>xxLarge<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>This is helpful if you want to force a particular kind of preview, for example.</p><p>You can also specify ranges, such as this one that allows any size up to and including the large size:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This won&#39;t go above large&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">dynamicTypeSize</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token class-name">DynamicTypeSize</span><span class="token punctuation">.</span>large<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>If you enable Xcodeâ€™s environment overrides, you can see how each of these variants adjust:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This will stay small&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">dynamicTypeSize</span><span class="token punctuation">(</span><span class="token punctuation">.</span>small<span class="token punctuation">)</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This won&#39;t go above large&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">dynamicTypeSize</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token class-name">DynamicTypeSize</span><span class="token punctuation">.</span>large<span class="token punctuation">)</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This will scale within a range&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">dynamicTypeSize</span><span class="token punctuation">(</span><span class="token class-name">DynamicTypeSize</span><span class="token punctuation">.</span>large<span class="token operator">...</span><span class="token class-name">DynamicTypeSize</span><span class="token punctuation">.</span>xxxLarge<span class="token punctuation">)</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;This will scale to any size&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Remember, many users rely on larger Dynamic Type sizes in order to use your app, and a surprisingly large number of users use it to cram more information onto their screen. So, try to avoid limiting the sizes you support to those times when itâ€™s really necessary.</p>`,10),g={class:"hint-container details"},k=s("summary",null,"Similar solutionsâ€¦",-1);function v(i,b){const t=r("VPCard");return u(),p("div",null,[s("h1",d,[s("a",h,[s("span",null,c(i.$frontmatter.title)+" ê´€ë ¨",1)])]),a(t,n(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),y,w,a(t,n(e({title:"How to specify the Dynamic Type sizes a view supports | SwiftUI by Example",desc:"How to specify the Dynamic Type sizes a view supports",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-specify-the-dynamic-type-sizes-a-view-supports",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f,s("details",g,[k,a(t,n(e({title:"How to preview your layout at different Dynamic Type sizes | SwiftUI by Example",desc:"How to preview your layout at different Dynamic Type sizes",link:"/hackingwithswift.com/swiftui/how-to-preview-your-layout-at-different-dynamic-type-sizes.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,n(e({title:"How to provide relative sizes using GeometryReader | SwiftUI by Example",desc:"How to provide relative sizes using GeometryReader",link:"/hackingwithswift.com/swiftui/how-to-provide-relative-sizes-using-geometryreader.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,n(e({title:"How to use Dynamic Type with a custom font | SwiftUI by Example",desc:"How to use Dynamic Type with a custom font",link:"/hackingwithswift.com/swiftui/how-to-use-dynamic-type-with-a-custom-font.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,n(e({title:"How to create a list of dynamic items | SwiftUI by Example",desc:"How to create a list of dynamic items",link:"/hackingwithswift.com/swiftui/how-to-create-a-list-of-dynamic-items.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,n(e({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const S=o(m,[["render",v],["__file","how-to-specify-the-dynamic-type-sizes-a-view-supports.html.vue"]]),x=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-specify-the-dynamic-type-sizes-a-view-supports.html","title":"How to specify the Dynamic Type sizes a view supports","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to specify the Dynamic Type sizes a view supports","description":"Article(s) > How to specify the Dynamic Type sizes a view supports","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to specify the Dynamic Type sizes a view supports"},{"property":"og:description","content":"How to specify the Dynamic Type sizes a view supports"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-specify-the-dynamic-type-sizes-a-view-supports.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-specify-the-dynamic-type-sizes-a-view-supports.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"How to specify the Dynamic Type sizes a view supports"}],["meta",{"property":"og:description","content":"Article(s) > How to specify the Dynamic Type sizes a view supports"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to specify the Dynamic Type sizes a view supports\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.94,"words":582},"filePathRelative":"hackingwithswift.com/swiftui/how-to-specify-the-dynamic-type-sizes-a-view-supports.md","excerpt":"\\n"}');export{S as comp,x as data};
