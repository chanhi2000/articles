import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as t,t as c,e as o,n as e,g as n,f as l,r as h,o as m}from"./app-BgNevrm5.js";const g={},f={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},p={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},w=t("nav",{class:"table-of-contents"},[t("ul")],-1),d=t("hr",null,null,-1),u=l('<blockquote><p>Updated for Xcode 15</p></blockquote><p>With its firm focus on declarative user interfaces, it should be no surprise that SwiftUI gives us a fantastic mechanism for building forms â€“ collections of user input controls designed to gather information, such as an order form or a settings screen.</p><p>Even better, several parts of SwiftUI automatically adapt to being placed inside forms, with their appearance and behavior changing so they work better alongside other groups of input controls.</p><p>If you thought <em>that</em> was clever, you&#39;re going to love this: SwiftUI actually dynamically adjusts the layouts to the point where it can make whole new screens automatically for us depending on what platform your code is running on â€“ it fully decouples the <em>purpose</em> of our controls from their visuals. This means we describe what we <em>want</em> and SwiftUI figures out the idiomatic way to make that happen on the current platform.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Forms are regular containers just like <code>VStack</code>, so you can switch between the two freely depending on your purpose.</p></div>',5),k={class:"hint-container details"},b=t("summary",null,"Similar solutionsâ€¦",-1);function y(s,v){const i=h("VPCard");return m(),a("div",null,[t("h1",f,[t("a",p,[t("span",null,c(s.$frontmatter.title)+" ê´€ë ¨",1)])]),o(i,e(n({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,d,o(i,e(n({title:"Working with forms | SwiftUI by Example",desc:"Working with forms",link:"https://hackingwithswift.com/quick-start/swiftui/working-with-forms",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),u,t("details",k,[b,o(i,e(n({title:"Bindings and forms | SwiftUI by Example",desc:"Bindings and forms",link:"/hackingwithswift.com/swiftui/bindings-and-forms.html",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),o(i,e(n({title:"Breaking forms into sections | SwiftUI by Example",desc:"Breaking forms into sections",link:"/hackingwithswift.com/swiftui/breaking-forms-into-sections.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),o(i,e(n({title:"Pickers in forms | SwiftUI by Example",desc:"Pickers in forms",link:"/hackingwithswift.com/swiftui/pickers-in-forms.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),o(i,e(n({title:"Enabling and disabling elements in forms | SwiftUI by Example",desc:"Enabling and disabling elements in forms",link:"/hackingwithswift.com/swiftui/enabling-and-disabling-elements-in-forms.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),o(i,e(n({title:"Working with containers | SwiftUI by Example",desc:"Working with containers",link:"/hackingwithswift.com/swiftui/working-with-containers.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const x=r(g,[["render",y],["__file","working-with-forms.html.vue"]]),W=JSON.parse('{"path":"/hackingwithswift.com/swiftui/working-with-forms.html","title":"Working with forms","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Working with forms","description":"Article(s) > Working with forms","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Working with forms"},{"property":"og:description","content":"Working with forms"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/working-with-forms.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/working-with-forms.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"Working with forms"}],["meta",{"property":"og:description","content":"Article(s) > Working with forms"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Working with forms\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"prev":"/hackingwithswift.com/swiftui/how-to-change-the-tint-color-for-individual-list-rows.md"},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.42,"words":426},"filePathRelative":"hackingwithswift.com/swiftui/working-with-forms.md","excerpt":"\\n"}');export{x as comp,W as data};
