import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as t,t as u,e,n as s,g as o,d as i,f as h,r as a,o as m}from"./app-BgNevrm5.js";const g={},f={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},k=t("nav",{class:"table-of-contents"},[t("ul")],-1),b=t("hr",null,null,-1),v=t("code",null,"Main.storyboard",-1),y=h(`<p>We want our button to always stay near the bottom of the view controller, so Ctrl-drag from the button to the view directly below it and choose ‚ÄúBottom Space to Safe Area.‚Äù Now Ctrl-drag the same way again and choose &quot;Center Horizontally in Safe Area.‚Äù</p><p>That&#39;s it for Auto Layout, so please switch to the assistant view so we can add an action and an outlet. Ctrl-drag from the button to your code to create an action for the button called <code>tapped()</code>.</p><p>Every time the user taps the &quot;Tap&quot; button, we&#39;re going to execute a different animation. This will be accomplished by cycling through a counter, and moving an image view. To make all that work, you need to add two more properties to the class:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">var</span> imageView<span class="token punctuation">:</span> <span class="token class-name">UIImageView</span><span class="token operator">!</span></span>
<span class="line"><span class="token keyword">var</span> currentAnimation <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>There isn&#39;t an image view in the storyboard ‚Äì we&#39;re going to create it ourself in <code>viewDidLoad()</code> using an initializer that takes a <code>UIImage</code> and makes the image view the correct size for the image.</p><p>Add this code to <code>viewDidLoad()</code>:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line">imageView <span class="token operator">=</span> <span class="token class-name">UIImageView</span><span class="token punctuation">(</span>image<span class="token punctuation">:</span> <span class="token class-name">UIImage</span><span class="token punctuation">(</span>named<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;penguin&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">imageView<span class="token punctuation">.</span>center <span class="token operator">=</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">512</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">384</span><span class="token punctuation">)</span></span>
<span class="line">view<span class="token punctuation">.</span><span class="token function">addSubview</span><span class="token punctuation">(</span>imageView<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That places the penguin in the middle of an iPad-sized landscape screen, ready for us to animate.</p><p>There&#39;s one more thing we&#39;re going to do before we start looking at the animations, and that&#39;s to put a little bit of code into the <code>tapped()</code> method so that we cycle through animations each time the button is tapped. Put this in there:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line">currentAnimation <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> currentAnimation <span class="token operator">&gt;</span> <span class="token number">7</span> <span class="token punctuation">{</span></span>
<span class="line">    currentAnimation <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That will add 1 to the value of <code>currentAnimation</code> until it reaches 7, at which point it will set it back to 0.</p>`,11);function _(r,P){const n=a("VPCard"),c=a("VidStack"),p=a("FontIcon");return m(),d("div",null,[t("h1",f,[t("a",w,[t("span",null,u(r.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),e(n,s(o({title:"Hacking with iOS ‚Äì learn to code iPhone and iPad apps with free Swift tutorials",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/read/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),k,b,e(n,s(o({title:"Preparing for action | Hacking with iOS",desc:"Preparing for action",link:"https://hackingwithswift.com/read/15/2/preparing-for-action",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),e(c,{src:"youtube/ce5YR-M0QMw"}),t("p",null,[i("Open Interface Builder with "),e(p,{icon:"iconfont icon-xcode"}),v,i(' and place a button on there with the title "Tap" ‚Äì position it in the middle of the screen, near the bottom. Don‚Äôt worry that we‚Äôre positioning things using an iPhone XR-sized screen ‚Äì Auto Layout will automatically make it look great on iPads.')]),y])}const x=l(g,[["render",_],["__file","02-preparing-for-action.html.vue"]]),V=JSON.parse('{"path":"/hackingwithswift.com/read/15/02-preparing-for-action.html","title":"Preparing for action","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Preparing for action","description":"Article(s) > Preparing for action","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","xcode","appstore","ios"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Preparing for action"},{"property":"og:description","content":"Preparing for action"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/read/15/02-preparing-for-action.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/read/15/02-preparing-for-action.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"Preparing for action"}],["meta",{"property":"og:description","content":"Article(s) > Preparing for action"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:tag","content":"ios"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Preparing for action\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.6,"words":479},"filePathRelative":"hackingwithswift.com/read/15/02-preparing-for-action.md","excerpt":"\\n"}');export{x as comp,V as data};
