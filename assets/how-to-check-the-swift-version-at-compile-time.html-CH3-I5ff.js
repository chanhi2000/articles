import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,b as e,t as l,e as i,n as a,g as n,a as t,r as p,o as m}from"./app-BgNevrm5.js";const h={},f={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},g=e("nav",{class:"table-of-contents"},[e("ul")],-1),d=e("hr",null,null,-1),u=e("blockquote",null,[e("p",null,"Available from iOS 7.0")],-1),k=e("details",{class:"hint-container details"},[e("summary",null,"Similar solutions‚Ä¶"),t(`
/example-code/language/how-to-install-a-beta-version-of-swift">How to install a beta version of Swift 
/example-code/system/how-to-read-your-apps-version-from-your-infoplist-file">How to read your app‚Äôs version from your Info.plist file 
/example-code/language/how-to-fix-the-error-expression-was-too-complex-to-be-solved-in-reasonable-time">How to fix the error ‚ÄúExpression was too complex to be solved in reasonable time‚Äù 
/example-code/testing/how-to-benchmark-app-launch-time-using-xctossignpostmetricapplicationlaunch">How to benchmark app launch time using XCTOSSignpostMetric.applicationLaunch 
/example-code/system/how-to-run-code-at-a-specific-time">How to run code at a specific time</a>
`)],-1);function v(c,y){const o=p("VPCard");return m(),s("div",null,[e("h1",f,[e("a",w,[e("span",null,l(c.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),i(o,a(n({title:"Language - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/language/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,d,i(o,a(n({title:"How to check the Swift version at compile time | Language - free Swift example code",desc:"How to check the Swift version at compile time",link:"https://hackingwithswift.com/example-code/language/how-to-check-the-swift-version-at-compile-time",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),u,t(" TODO: ÏûëÏÑ± "),t(` 
Swift gives us the \`#if swift\` build configuration option, which lets you compile certain code only if a specific version of the Swift compiler is detected. This is particularly useful for libraries that need to support multiple incompatible versions of Swift at the same time, because only one version of their code will ever be compiled.

In the example below, the \`print()\` code will display one of two messages depending on whether you're using an old version of Swift:

\`\`\`swift
#if swift(>=5.0)
print("Running Swift 5.0 or later")
#else
print("Running old Swift")
#endif
\`\`\`

`),k])}const x=r(h,[["render",v],["__file","how-to-check-the-swift-version-at-compile-time.html.vue"]]),_=JSON.parse('{"path":"/hackingwithswift.com/example-code/language/how-to-check-the-swift-version-at-compile-time.html","title":"How to check the Swift version at compile time","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to check the Swift version at compile time","description":"Article(s) > How to check the Swift version at compile time","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-7.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to check the Swift version at compile time"},{"property":"og:description","content":"How to check the Swift version at compile time"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/language/how-to-check-the-swift-version-at-compile-time.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/language/how-to-check-the-swift-version-at-compile-time.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to check the Swift version at compile time"}],["meta",{"property":"og:description","content":"Article(s) > How to check the Swift version at compile time"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-7.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to check the Swift version at compile time\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.29,"words":387},"filePathRelative":"hackingwithswift.com/example-code/language/how-to-check-the-swift-version-at-compile-time.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{x as comp,_ as data};
