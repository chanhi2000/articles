import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as n,t as r,e as s,n as a,g as e,d as g,f as d,r as o,o as m}from"./app-BgNevrm5.js";const k={},h={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},f=n("nav",{class:"table-of-contents"},[n("ul")],-1),b=n("hr",null,null,-1),y=d(`<blockquote><p>Updated for Xcode 16</p></blockquote><p>SwiftUI gives us the <code>ToggleStyle</code> protocol to customize the way <code>Toggle</code> switches look and work. Any struct that conforms to this protocol must implement a <code>makeBody()</code> method that renders the <code>Toggle</code> however you want it, and you’re giving both the label used for the toggle and an <code>isOn</code> binding that you can flip to adjust the toggle.</p><div class="hint-container important"><p class="hint-container-title">Important</p><p>When you customize a <code>Toggle</code> switch like this, it’s down to you to flip the on state yourself somehow – SwiftUI will <em>not</em> do it for you.</p></div><p>To demonstrate custom <code>Toggle</code> styles, here’s one that uses a button to flip the on state, then adds a custom label to show that state. Rather than use a moving circle like the standard iOS <code>Toggle</code>, I’ve made this show one of two SF Symbols:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">CheckToggleStyle</span><span class="token punctuation">:</span> <span class="token class-name">ToggleStyle</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">makeBody</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> <span class="token class-name">Configuration</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span> <span class="token punctuation">{</span></span>
<span class="line">            configuration<span class="token punctuation">.</span>isOn<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> label<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Label</span> <span class="token punctuation">{</span></span>
<span class="line">                configuration<span class="token punctuation">.</span>label</span>
<span class="line">            <span class="token punctuation">}</span> icon<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token string-literal"><span class="token string">&quot;checkmark.circle.fill&quot;</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;circle&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">foregroundStyle</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token class-name">Color</span><span class="token punctuation">.</span>accentColor <span class="token punctuation">:</span> <span class="token punctuation">.</span>secondary<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">accessibility</span><span class="token punctuation">(</span>label<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>configuration<span class="token punctuation">.</span>isOn <span class="token operator">?</span> <span class="token string-literal"><span class="token string">&quot;Checked&quot;</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Unchecked&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">imageScale</span><span class="token punctuation">(</span><span class="token punctuation">.</span>large<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">buttonStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>plain<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// An example view showing the style in action</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isOn <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Switch Me&quot;</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> $isOn<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token class-name">CheckToggleStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),v={href:"https://hackingwithswift.com/files/projects/swiftui/customizing-toggle-with-togglestyle-1.zip",target:"_blank",rel:"noopener noreferrer"},S={class:"hint-container details"},T=n("summary",null,"Similar solutions…",-1);function _(i,z){const t=o("VPCard"),l=o("FontIcon"),c=o("VidStack");return m(),u("div",null,[n("h1",h,[n("a",w,[n("span",null,r(i.$frontmatter.title)+" 관련",1)])]),s(t,a(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,b,s(t,a(e({title:"Customizing Toggle with ToggleStyle | SwiftUI by Example",desc:"Customizing Toggle with ToggleStyle",link:"https://hackingwithswift.com/quick-start/swiftui/customizing-toggle-with-togglestyle",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),y,n("blockquote",null,[n("p",null,[n("a",v,[s(l,{icon:"fas fa-file-zipper"}),g("Download this as an Xcode project")])])]),s(c,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/customizing-toggle-with-togglestyle-1~dark.mp4"}),n("details",S,[T,s(t,a(e({title:"How to create a toggle switch | SwiftUI by Example",desc:"How to create a toggle switch",link:"/hackingwithswift.com/swiftui/how-to-create-a-toggle-switch.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,a(e({title:"How to hide the label of a Picker, Stepper, Toggle, and more using labelsHidden() | SwiftUI by Example",desc:"How to hide the label of a Picker, Stepper, Toggle, and more using labelsHidden()",link:"/hackingwithswift.com/swiftui/how-to-hide-the-label-of-a-picker-stepper-toggle-and-more-using-labelshidden.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,a(e({title:"Customizing Button with ButtonStyle | SwiftUI by Example",desc:"Customizing Button with ButtonStyle",link:"/hackingwithswift.com/swiftui/customizing-button-with-buttonstyle.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,a(e({title:"Customizing ProgressView with ProgressViewStyle | SwiftUI by Example",desc:"Customizing ProgressView with ProgressViewStyle",link:"/hackingwithswift.com/swiftui/customizing-progressview-with-progressviewstyle.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,a(e({title:"Two-way bindings in SwiftUI | SwiftUI by Example",desc:"Two-way bindings in SwiftUI",link:"/hackingwithswift.com/swiftui/two-way-bindings-in-swiftui.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const I=p(k,[["render",_],["__file","customizing-toggle-with-togglestyle.html.vue"]]),V=JSON.parse('{"path":"/hackingwithswift.com/swiftui/customizing-toggle-with-togglestyle.html","title":"Customizing Toggle with ToggleStyle","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Customizing Toggle with ToggleStyle","description":"Article(s) > Customizing Toggle with ToggleStyle","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Customizing Toggle with ToggleStyle"},{"property":"og:description","content":"Customizing Toggle with ToggleStyle"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/customizing-toggle-with-togglestyle.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/customizing-toggle-with-togglestyle.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Customizing Toggle with ToggleStyle"}],["meta",{"property":"og:description","content":"Article(s) > Customizing Toggle with ToggleStyle"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2023-06-16T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Customizing Toggle with ToggleStyle\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-16T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2023-06-16T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.78,"words":534},"filePathRelative":"hackingwithswift.com/swiftui/customizing-toggle-with-togglestyle.md","localizedDate":"2023년 6월 16일","excerpt":"\\n"}');export{I as comp,V as data};
