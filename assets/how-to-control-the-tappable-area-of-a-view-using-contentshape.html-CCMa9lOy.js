import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as t,t as h,e as a,n as e,g as o,d as u,f as w,r as s,o as d}from"./app-BgNevrm5.js";const f={},g={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},k=t("nav",{class:"table-of-contents"},[t("ul")],-1),b=t("hr",null,null,-1),v=w(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>If you add a tap gesture to a primitive SwiftUI view such as <code>Text</code> or <code>Image</code>, the whole view becomes tappable. If you add a tap gesture to a container SwiftUI view, such as <code>VStack</code> or <code>HStack</code>, then SwiftUI only adds the gesture to the parts of the container that have something inside â€“ large parts of the stack are likely to be untappable.</p><p>If this is what you want then the default behavior is fine. However, if you want to change the shape of hit tests â€“ the area that responds to taps â€“ then you should use the <code>contentShape()</code> modifier with the shape you want.</p><p>For example, this code creates a <code>VStack</code> containing an image, a spacer, and some text, then uses the <code>contentShape()</code> modifier to make the whole stack tappable rather than just the image and text:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Image</span><span class="token punctuation">(</span>systemName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;person.circle&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">resizable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token class-name">Spacer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Paul Hudson&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">contentShape</span><span class="token punctuation">(</span><span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">.</span>onTapGesture <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Show details for user&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-control-the-tappable-area-of-a-view-using-contentshape-1.zip",target:"_blank",rel:"noopener noreferrer"},S=t("p",null,"::: detials Similar solutionsâ€¦",-1),_=t("p",null,":::",-1);function x(i,H){const n=s("VPCard"),c=s("FontIcon"),p=s("VidStack");return d(),r("div",null,[t("h1",g,[t("a",m,[t("span",null,h(i.$frontmatter.title)+" ê´€ë ¨",1)])]),a(n,e(o({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),k,b,a(n,e(o({title:"How to control the tappable area of a view using contentShape() | SwiftUI by Example",desc:"How to control the tappable area of a view using contentShape()",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-control-the-tappable-area-of-a-view-using-contentshape",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,t("blockquote",null,[t("p",null,[t("a",y,[a(c,{icon:"fas fa-file-zipper"}),u("Download this as an Xcode project")])])]),a(p,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-control-the-tappable-area-of-a-view-using-contentshape-1~dark.mp4"}),S,a(n,e(o({title:"How to create a tappable button | SwiftUI by Example",desc:"How to create a tappable button",link:"/hackingwithswift.com/swiftui/how-to-create-a-tappable-button.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(n,e(o({title:"How to fix a Form Picker or a NavigationLink that isn't tappable | SwiftUI by Example",desc:"How to fix a Form Picker or a NavigationLink that isn't tappable",link:"/hackingwithswift.com/swiftui/how-to-fix-a-form-picker-or-a-navigationlink-that-isnt-tappable.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(n,e(o({title:"How to place content outside the safe area | SwiftUI by Example",desc:"How to place content outside the safe area",link:"/hackingwithswift.com/swiftui/how-to-place-content-outside-the-safe-area.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(n,e(o({title:"How to add extra padding to the safe area | SwiftUI by Example",desc:"How to add extra padding to the safe area",link:"/hackingwithswift.com/swiftui/how-to-add-extra-padding-to-the-safe-area.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(n,e(o({title:"How to inset the safe area with custom content | SwiftUI by Example",desc:"How to inset the safe area with custom content",link:"/hackingwithswift.com/swiftui/how-to-inset-the-safe-area-with-custom-content.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),_])}const V=l(f,[["render",x],["__file","how-to-control-the-tappable-area-of-a-view-using-contentshape.html.vue"]]),q=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-control-the-tappable-area-of-a-view-using-contentshape.html","title":"How to control the tappable area of a view using contentShape()","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to control the tappable area of a view using contentShape()","description":"Article(s) > How to control the tappable area of a view using contentShape()","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to control the tappable area of a view using contentShape()"},{"property":"og:description","content":"How to control the tappable area of a view using contentShape()"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-control-the-tappable-area-of-a-view-using-contentshape.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-control-the-tappable-area-of-a-view-using-contentshape.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"How to control the tappable area of a view using contentShape()"}],["meta",{"property":"og:description","content":"Article(s) > How to control the tappable area of a view using contentShape()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to control the tappable area of a view using contentShape()\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2,"words":600},"filePathRelative":"hackingwithswift.com/swiftui/how-to-control-the-tappable-area-of-a-view-using-contentshape.md","excerpt":"\\n"}');export{V as comp,q as data};
