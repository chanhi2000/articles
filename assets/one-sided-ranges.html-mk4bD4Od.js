import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as t,t as d,e as n,n as e,g as a,d as i,a as g,f as h,r as c,o as u}from"./app-BgNevrm5.js";const f={},m={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},w=t("nav",{class:"table-of-contents"},[t("ul")],-1),b=t("hr",null,null,-1),v=h(`<blockquote><p>Available from Swift 4.0</p></blockquote><p>Last but not least, Swift 4 introduced Python-like one-sided collection slicing, where the missing side is automatically inferred to be the start or end of the collection. This has no effect on existing code because it&#39;s a new use for the existing operator, so you don&#39;t need to worry about potential breakage.</p><p>Here&#39;s an example:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">let</span> characters <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;Dr Horrible&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Captain Hammer&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Penny&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Bad Horse&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Moist&quot;</span></span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">let</span> bigParts <span class="token operator">=</span> characters<span class="token punctuation">[</span><span class="token operator">..&lt;</span><span class="token number">3</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token keyword">let</span> smallParts <span class="token operator">=</span> characters<span class="token punctuation">[</span><span class="token number">3</span><span class="token operator">...</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span>bigParts<span class="token punctuation">)</span></span>
<span class="line"><span class="token function">print</span><span class="token punctuation">(</span>smallParts<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That code will print out <code>[&quot;Dr Horrible&quot;, &quot;Captain Hammer&quot;, &quot;Penny&quot;]</code> then <code>[&quot;Bad Horse&quot;, &quot;Moist&quot;]</code>.</p>`,5),y={href:"https://github.com/apple/swift-evolution/blob/master/proposals/0172-one-sided-ranges.md",target:"_blank",rel:"noopener noreferrer"},_=t("code",null,"apple/swift-evolution",-1),q={class:"hint-container details"},S=t("summary",null,"Other Changes in Swift 4.0",-1),C={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-3-1-to-4-0.playground.zip",target:"_blank",rel:"noopener noreferrer"};function O(r,P){const s=c("VPCard"),o=c("FontIcon");return u(),p("div",null,[t("h1",m,[t("a",k,[t("span",null,d(r.$frontmatter.title)+" ê´€ë ¨",1)])]),n(s,e(a({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),w,b,n(s,e(a({title:"One-sided ranges | Changes in Swift 4.0",desc:"One-sided ranges",link:"https://hackingwithswift.com/swift/4.0/one-sided-ranges",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,t("p",null,[i("For more information see "),t("a",y,[i("the Swift Evolution proposal for this new feature ("),n(o,{icon:"iconfont icon-github"}),_,i(")")]),i(".")]),t("details",q,[S,n(s,e(a({title:"Encoding and decoding data using Codable | Changes in Swift 4.0",desc:"Encoding and decoding data using Codable",link:"/hackingwithswift.com/swift/4.0/codable.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(s,e(a({title:"Multi-line string literals | Changes in Swift 4.0",desc:"Multi-line string literals",link:"/hackingwithswift.com/swift/4.0/multiline-strings.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(s,e(a({title:"Improved keypaths for key-value coding | Changes in Swift 4.0",desc:"Improved keypaths for key-value coding",link:"/hackingwithswift.com/swift/4.0/keypaths.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(s,e(a({title:"Improved dictionary functionality | Changes in Swift 4.0",desc:"Improved dictionary functionality",link:"/hackingwithswift.com/swift/4.0/dictionaries.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(s,e(a({title:"Strings are collections again | Changes in Swift 4.0",desc:"Strings are collections again",link:"/hackingwithswift.com/swift/4.0/strings.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),g(` 
\`\`\`component VPCard
{
  "title": "One-sided ranges | Changes in Swift 4.0",
  "desc": "One-sided ranges",
  "link": "/hackingwithswift.com/swift/4.0/one-sided-ranges.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),t("p",null,[t("a",C,[n(o,{icon:"fas fa-file-zipper"}),i("Download Swift 4.0 playground")])])])])}const I=l(f,[["render",O],["__file","one-sided-ranges.html.vue"]]),A=JSON.parse('{"path":"/hackingwithswift.com/swift/4.0/one-sided-ranges.html","title":"One-sided ranges","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"One-sided ranges","description":"Article(s) > One-sided ranges","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-4.0"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > One-sided ranges"},{"property":"og:description","content":"One-sided ranges"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/4.0/one-sided-ranges.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/4.0/one-sided-ranges.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"One-sided ranges"}],["meta",{"property":"og:description","content":"Article(s) > One-sided ranges"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-4.0"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"One-sided ranges\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"next":"/hackingwithswift.com/swift/3.1/concrete-constrained-extensions.md","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.44,"words":431},"filePathRelative":"hackingwithswift.com/swift/4.0/one-sided-ranges.md","excerpt":"\\n"}');export{I as comp,A as data};
