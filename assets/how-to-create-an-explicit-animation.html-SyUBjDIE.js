import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as m,b as t,t as h,e as a,n as i,g as e,d as o,f as u,r as s,o as w}from"./app-BgNevrm5.js";const d={},f={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},g=t("nav",{class:"table-of-contents"},[t("ul")],-1),v=t("hr",null,null,-1),b=u(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>If you attach an animation modifier to a view, you end up with implicit animation â€“ changing some state elsewhere in your view might use animation, even though youâ€™re just incrementing an integer or toggling a Boolean.</p><p>An alternative is to use <em>explicit</em> animation, where you donâ€™t attach modifiers to the view in question but instead ask SwiftUI to animate the precise change you want to make. To do this, wrap your changes in a call to <code>withAnimation()</code>.</p><p>For example, this uses explicit animation to make a button fade away slightly more each time itâ€™s tapped:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> opacity <span class="token operator">=</span> <span class="token number">1.0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Press here&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            withAnimation <span class="token punctuation">{</span></span>
<span class="line">                opacity <span class="token operator">-=</span> <span class="token number">0.2</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span>opacity<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-an-explicit-animation-1.zip",target:"_blank",rel:"noopener noreferrer"},x=t("p",null,[t("code",null,"withAnimation()"),o(" takes a parameter specifying the kind of animation you want, so you could create a three-second linear animation like this: "),t("code",null,"withAnimation(.linear(duration: 3))")],-1),_=t("p",null,"Explicit animations are often helpful because they cause every affected view to animate, not just those that have implicit animations attached. For example, if view A has to make room for view B as part of the animation, but only view B has an animation attached, then view A will jump to its new position without animating unless you use explicit animations.",-1),H={class:"hint-container details"},S=t("summary",null,"Similar solutionsâ€¦",-1);function A(c,I){const n=s("VPCard"),l=s("FontIcon"),p=s("VidStack");return w(),m("div",null,[t("h1",f,[t("a",k,[t("span",null,h(c.$frontmatter.title)+" ê´€ë ¨",1)])]),a(n,i(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,v,a(n,i(e({title:"How to create an explicit animation | SwiftUI by Example",desc:"How to create an explicit animation",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-create-an-explicit-animation",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,t("blockquote",null,[t("p",null,[t("a",y,[a(l,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),a(p,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-an-explicit-animation-1~dark.mp4"}),x,_,t("details",H,[S,a(n,i(e({title:"How to create a spring animation | SwiftUI by Example",desc:"How to create a spring animation",link:"/hackingwithswift.com/swiftui/how-to-create-a-spring-animation.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(n,i(e({title:"How to start an animation immediately after a view appears | SwiftUI by Example",desc:"How to start an animation immediately after a view appears",link:"/hackingwithswift.com/swiftui/how-to-start-an-animation-immediately-after-a-view-appears.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(n,i(e({title:"How to delay an animation | SwiftUI by Example",desc:"How to delay an animation",link:"/hackingwithswift.com/swiftui/how-to-delay-an-animation.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(n,i(e({title:"How to run a completion callback when an animation finishes | SwiftUI by Example",desc:"How to run a completion callback when an animation finishes",link:"/hackingwithswift.com/swiftui/how-to-run-a-completion-callback-when-an-animation-finishes.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(n,i(e({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const V=r(d,[["render",A],["__file","how-to-create-an-explicit-animation.html.vue"]]),B=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-create-an-explicit-animation.html","title":"How to create an explicit animation","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to create an explicit animation","description":"Article(s) > How to create an explicit animation","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to create an explicit animation"},{"property":"og:description","content":"How to create an explicit animation"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-an-explicit-animation.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-an-explicit-animation.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"How to create an explicit animation"}],["meta",{"property":"og:description","content":"Article(s) > How to create an explicit animation"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to create an explicit animation\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.89,"words":567},"filePathRelative":"hackingwithswift.com/swiftui/how-to-create-an-explicit-animation.md","excerpt":"\\n"}');export{V as comp,B as data};
