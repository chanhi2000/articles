import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as a,t as d,e as n,n as t,g as e,d as u,f as o,r as i,o as h}from"./app-BgNevrm5.js";const m={},w={id:"frontmatter-title-관련",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-관련"},g=a("nav",{class:"table-of-contents"},[a("ul")],-1),b=a("hr",null,null,-1),v=o(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>When using <code>NavigationSplitView</code> on macOS and iPadOS, SwiftUI lets us toggle showing the sidebar, content view, and detail view using the <code>NavigationSplitViewVisibility</code> enum.</p><p>This code sample shows all three variations:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> columnVisibility <span class="token operator">=</span> <span class="token class-name">NavigationSplitViewVisibility</span><span class="token punctuation">.</span>detailOnly</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationSplitView</span><span class="token punctuation">(</span>columnVisibility<span class="token punctuation">:</span> $columnVisibility<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Sidebar&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> content<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">           <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Content&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> detail<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Detail Only&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    columnVisibility <span class="token operator">=</span> <span class="token punctuation">.</span>detailOnly</span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Content and Detail&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    columnVisibility <span class="token operator">=</span> <span class="token punctuation">.</span>doubleColumn</span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Show All&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    columnVisibility <span class="token operator">=</span> <span class="token punctuation">.</span>all</span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),f={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-hide-and-show-the-sidebar-programmatically-1.zip",target:"_blank",rel:"noopener noreferrer"},y=o('<p>There are four modes to choose from:</p><ul><li>In <code>.detailOnly</code> mode, the detail view will take up all the available screen space for your app.</li><li>In <code>.doubleColumn</code> mode, you&#39;ll see both the content and detail views.</li><li>In <code>.all</code> mode, the system will attempt to show all three views if they exist. In the case where you don&#39;t have a content view (the middle view), it will only show two.</li><li>In <code>.automatic</code> mode, the system will do what it thinks is best based on the current device and orientation.</li></ul><div class="hint-container note"><p class="hint-container-title">Note</p><p>providing the <code>columnVisibility</code> is done using a binding because your value will automatically be updated as the user interacts with your UI.</p></div><p>Although SwiftUI uses different names for these three parts of our split view interface, they match up directly with UIKit counterparts: the sidebar is “primary” in UIKit, content is “supplementary”, and detail is “secondary”.</p>',4),_={class:"hint-container details"},S=a("summary",null,"Similar solutions…",-1),I=a("p",null,"How to add a sidebar for iPadOS",-1);function V(l,x){const s=i("VPCard"),c=i("FontIcon");return h(),r("div",null,[a("h1",w,[a("a",k,[a("span",null,d(l.$frontmatter.title)+" 관련",1)])]),n(s,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,b,n(s,t(e({title:"How to hide and show the sidebar programmatically | SwiftUI by Example",desc:"How to hide and show the sidebar programmatically",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-hide-and-show-the-sidebar-programmatically",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,a("blockquote",null,[a("p",null,[a("a",f,[n(c,{icon:"fas fa-file-zipper"}),u("Download this as an Xcode project")])])]),y,a("details",_,[S,I,n(s,t(e({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(s,t(e({title:"All SwiftUI property wrappers explained and compared | SwiftUI by Example",desc:"All SwiftUI property wrappers explained and compared",link:"/hackingwithswift.com/swiftui/all-swiftui-property-wrappers-explained-and-compared.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(s,t(e({title:"How to hide and reveal content using DisclosureGroup | SwiftUI by Example",desc:"How to hide and reveal content using DisclosureGroup",link:"/hackingwithswift.com/swiftui/how-to-hide-and-reveal-content-using-disclosuregroup.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(s,t(e({title:"How to hide and show the status bar | SwiftUI by Example",desc:"How to hide and show the status bar",link:"/hackingwithswift.com/swiftui/how-to-hide-and-show-the-status-bar.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const q=p(m,[["render",V],["__file","how-to-hide-and-show-the-sidebar-programmatically.html.vue"]]),A=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-hide-and-show-the-sidebar-programmatically.html","title":"How to hide and show the sidebar programmatically","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to hide and show the sidebar programmatically","description":"Article(s) > How to hide and show the sidebar programmatically","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to hide and show the sidebar programmatically"},{"property":"og:description","content":"How to hide and show the sidebar programmatically"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-hide-and-show-the-sidebar-programmatically.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-hide-and-show-the-sidebar-programmatically.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to hide and show the sidebar programmatically"}],["meta",{"property":"og:description","content":"Article(s) > How to hide and show the sidebar programmatically"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to hide and show the sidebar programmatically\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.82,"words":545},"filePathRelative":"hackingwithswift.com/swiftui/how-to-hide-and-show-the-sidebar-programmatically.md","excerpt":"\\n"}');export{q as comp,A as data};
