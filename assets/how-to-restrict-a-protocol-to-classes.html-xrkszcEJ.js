import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as t,t as l,e as a,n as s,g as r,a as e,r as p,o as h}from"./app-BgNevrm5.js";const m={},g={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},d={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},w=t("nav",{class:"table-of-contents"},[t("ul")],-1),u=t("hr",null,null,-1),f=t("blockquote",null,[t("p",null,"Available from iOS 8.0")],-1),y=t("details",{class:"hint-container details"},[t("summary",null,"Similar solutions‚Ä¶"),e(`
/quick-start/concurrency/whats-the-difference-between-actors-classes-and-structs">What‚Äôs the difference between actors, classes, and structs? 
/example-code/uikit/what-are-size-classes">What are size classes? 
/quick-start/swiftui/how-to-create-different-layouts-using-size-classes">How to create different layouts using size classes 
/example-code/language/what-is-protocol-oriented-programming">What is protocol-oriented programming? 
/example-code/language/what-is-a-protocol-associated-type">What is a protocol associated type?</a>
`)],-1);function k(c,b){const o=p("VPCard");return h(),n("div",null,[t("h1",g,[t("a",d,[t("span",null,l(c.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),a(o,s(r({title:"Language - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/language/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,u,a(o,s(r({title:"How to restrict a protocol to classes | Language - free Swift example code",desc:"How to restrict a protocol to classes",link:"https://hackingwithswift.com/example-code/language/how-to-restrict-a-protocol-to-classes",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,e(" TODO: ÏûëÏÑ± "),e(" \nThere are some occasions when your protocol relies on reference semantics to work, which in practice means it can be adopted only by classes. For example, you might want to use the identity operator (`===`) to compare two instances of a conforming type, or you might want to change properties inside the type without relying on mutating methods.\n\nTo restrict your protocol in this way, make it inherit from `AnyObject` like this:\n\n```swift\nprotocol Authenticatable: AnyObject {\n    func authenticate() -> Bool\n}\n```\n\nNote: Some older Swift code uses `class` for this restriction, but `AnyObject` is correct for modern Swift.\n\n"),y])}const S=i(m,[["render",k],["__file","how-to-restrict-a-protocol-to-classes.html.vue"]]),A=JSON.parse('{"path":"/hackingwithswift.com/example-code/language/how-to-restrict-a-protocol-to-classes.html","title":"How to restrict a protocol to classes","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to restrict a protocol to classes","description":"Article(s) > How to restrict a protocol to classes","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-8.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to restrict a protocol to classes"},{"property":"og:description","content":"How to restrict a protocol to classes"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/language/how-to-restrict-a-protocol-to-classes.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/language/how-to-restrict-a-protocol-to-classes.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to restrict a protocol to classes"}],["meta",{"property":"og:description","content":"Article(s) > How to restrict a protocol to classes"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-8.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to restrict a protocol to classes\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.11,"words":334},"filePathRelative":"hackingwithswift.com/example-code/language/how-to-restrict-a-protocol-to-classes.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{S as comp,A as data};
