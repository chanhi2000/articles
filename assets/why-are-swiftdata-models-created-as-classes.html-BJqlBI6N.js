import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as a,t as i,e,n as t,g as n,f as r,r as p,o as d}from"./app-BgNevrm5.js";const m={},u={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},w=a("nav",{class:"table-of-contents"},[a("ul")],-1),k=a("hr",null,null,-1),f=r(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>Swift developers love using structs, but SwiftData uses classes intentionally:</p><ol><li>They allow us to share SwiftData objects in many places, so that when we make a change in one place that change appears everywhere else the data is used. This is the same reason why <code>ObservableObject</code> and <code>@Observable</code> types also rely on classes.</li><li>Using a class allows a model to create a relationship to another instance of itself. For example, we might say that each employee in a company has a manager, who is also an employee.</li></ol><p>As a result, the <code>@Model</code> macro can be used only on classes.</p><p>That being said, you can <em>integrate</em> structs into your models if you want, as long as the structs conform to <code>Codable</code>. For example, you might say this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@Model</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Customer</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">var</span> address<span class="token punctuation">:</span> <span class="token class-name">Address</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">init</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> address<span class="token punctuation">:</span> <span class="token class-name">Address</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>address <span class="token operator">=</span> address</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">Address</span><span class="token punctuation">:</span> <span class="token class-name">Codable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> line1<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">var</span> line2<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">var</span> city<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">var</span> postCode<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This can be a neat way of breaking your data models up into more manageable parts, although for most relationships I would recommend using <code>@Model</code> classes across the board because it allows you to query your data more broadly.</p>`,7);function y(o,g){const s=p("VPCard");return d(),c("div",null,[a("h1",u,[a("a",h,[a("span",null,i(o.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),e(s,t(n({title:"SwiftData by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftdata/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,k,e(s,t(n({title:"Why are SwiftData models created as classes? | SwiftData by Example",desc:"Why are SwiftData models created as classes?",link:"https://hackingwithswift.com/quick-start/swiftdata/why-are-swiftdata-models-created-as-classes",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f])}const S=l(m,[["render",y],["__file","why-are-swiftdata-models-created-as-classes.html.vue"]]),_=JSON.parse('{"path":"/hackingwithswift.com/swiftdata/why-are-swiftdata-models-created-as-classes.html","title":"Why are SwiftData models created as classes?","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Why are SwiftData models created as classes?","description":"Article(s) > Why are SwiftData models created as classes?","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftdata","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Why are SwiftData models created as classes?"},{"property":"og:description","content":"Why are SwiftData models created as classes?"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/why-are-swiftdata-models-created-as-classes.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/why-are-swiftdata-models-created-as-classes.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"Why are SwiftData models created as classes?"}],["meta",{"property":"og:description","content":"Article(s) > Why are SwiftData models created as classes?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftdata"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2023-09-30T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Why are SwiftData models created as classes?\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-30T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2023-09-30T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.15,"words":346},"filePathRelative":"hackingwithswift.com/swiftdata/why-are-swiftdata-models-created-as-classes.md","localizedDate":"2023ÎÖÑ 9Ïõî 30Ïùº","excerpt":"\\n"}');export{S as comp,_ as data};
