import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as s,t as k,e as n,n as e,g as t,d as c,f as p,r as l,o as m}from"./app-BgNevrm5.js";const g={},w={id:"frontmatter-title-관련",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-관련"},v=s("nav",{class:"table-of-contents"},[s("ul")],-1),f=s("hr",null,null,-1),b=p(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>Any SwiftUI view can have gesture recognizers attached, and those gesture recognizers in turn can have closures attached that will be run when the recognizer activates.</p><p>There are several gesture recognizers to work with, and I&#39;m going to provide you with code samples for several of them to help get you started – you&#39;ll see how similar they are.</p><p>First, <code>TapGesture</code>. When you create this you can specify how many taps it takes to trigger the gesture, then attach an <code>onEnded</code> closure that will be run when the gesture happens. For example, this creates an image that gets smaller every time it&#39;s tapped:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale <span class="token operator">=</span> <span class="token number">1.0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;ireland&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span>   </span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">gesture</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token class-name">TapGesture</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span>onEnded <span class="token punctuation">{</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span></span>
<span class="line">                        scale <span class="token operator">-=</span> <span class="token number">0.1</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-a-gesture-recognizer-to-a-view-1.zip",target:"_blank",rel:"noopener noreferrer"},_=p(`<p>Second, <code>LongPressGesture</code> recognizes when the user presses and holds on a view for at least a period of time you specify. So, this creates an image view that halves in size when pressed for at least one second:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> scale <span class="token operator">=</span> <span class="token number">1.0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;cornwall&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>scale<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">gesture</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token class-name">LongPressGesture</span><span class="token punctuation">(</span>minimumDuration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span>onEnded <span class="token punctuation">{</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span></span>
<span class="line">                        scale <span class="token operator">/=</span> <span class="token number">2</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),z={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-a-gesture-recognizer-to-a-view-2.zip",target:"_blank",rel:"noopener noreferrer"},S=p(`<p>Finally, <code>DragGesture</code> triggers when the user presses down on a view and moves at least a certain distance away. So, this creates an image with a drag gesture that triggers when the user moves it at least 50 points:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> dragCompleted <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;iceland&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">gesture</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token class-name">DragGesture</span><span class="token punctuation">(</span>minimumDistance<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span>onEnded <span class="token punctuation">{</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span></span>
<span class="line">                            dragCompleted <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">                        <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">if</span> dragCompleted <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Drag completed!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),q={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-a-gesture-recognizer-to-a-view-3.zip",target:"_blank",rel:"noopener noreferrer"},V=p(`<p>Drag gestures are particularly good when combined with the <code>offset()</code> modifier, which lets us adjust the natural position of a view. For example, this offsets an image using a <code>dragOffset</code> size, which itself is attached to a drag gesture:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> dragOffset <span class="token operator">=</span> <span class="token class-name">CGSize</span><span class="token punctuation">.</span>zero</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;rome&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">offset</span><span class="token punctuation">(</span>dragOffset<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">gesture</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token class-name">DragGesture</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                        <span class="token punctuation">.</span>onChanged <span class="token punctuation">{</span> gesture <span class="token keyword">in</span></span>
<span class="line">                            dragOffset <span class="token operator">=</span> gesture<span class="token punctuation">.</span>translation</span>
<span class="line">                        <span class="token punctuation">}</span></span>
<span class="line">                        <span class="token punctuation">.</span>onEnded <span class="token punctuation">{</span> gesture <span class="token keyword">in</span></span>
<span class="line">                            dragOffset <span class="token operator">=</span> <span class="token punctuation">.</span>zero</span>
<span class="line">                        <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-a-gesture-recognizer-to-a-view-4.zip",target:"_blank",rel:"noopener noreferrer"},H=s("p",null,"If you try that code you'll see you can drag the image around now, and when you release your finger it snaps back to its original location.",-1),I={class:"hint-container details"},E=s("summary",null,"Similar solutions…",-1);function j(r,D){const a=l("VPCard"),i=l("FontIcon"),o=l("VidStack");return m(),d("div",null,[s("h1",w,[s("a",h,[s("span",null,k(r.$frontmatter.title)+" 관련",1)])]),n(a,e(t({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),v,f,n(a,e(t({title:"How to add a gesture recognizer to a view | SwiftUI by Example",desc:"How to add a gesture recognizer to a view",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-add-a-gesture-recognizer-to-a-view",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,s("blockquote",null,[s("p",null,[s("a",y,[n(i,{icon:"fas fa-file-zipper"}),c("Download this as an Xcode project")])])]),n(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-a-gesture-recognizer-to-a-view-1~dark.mp4 "}),_,s("blockquote",null,[s("p",null,[s("a",z,[n(i,{icon:"fas fa-file-zipper"}),c("Download this as an Xcode project")])])]),n(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-a-gesture-recognizer-to-a-view-2~dark.mp4"}),S,s("blockquote",null,[s("p",null,[s("a",q,[n(i,{icon:"fas fa-file-zipper"}),c("Download this as an Xcode project")])])]),n(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-a-gesture-recognizer-to-a-view-3~dark.mp4"}),V,s("blockquote",null,[s("p",null,[s("a",x,[n(i,{icon:"fas fa-file-zipper"}),c("Download this as an Xcode project")])])]),n(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-a-gesture-recognizer-to-a-view-4~dark.mp4"}),H,s("details",I,[E,n(a,e(t({title:"How to force one gesture to recognize before another using highPriorityGesture() | SwiftUI by Example",desc:"How to force one gesture to recognize before another using highPriorityGesture()",link:"/hackingwithswift.com/swiftui/how-to-force-one-gesture-to-recognize-before-another-using-highprioritygesture.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,e(t({title:"How to create gesture chains using sequenced(before:) | SwiftUI by Example",desc:"How to create gesture chains using sequenced(before:)",link:"/hackingwithswift.com/swiftui/how-to-create-gesture-chains-using-sequencedbefore.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,e(t({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,e(t({title:"How to add an inspector to any view | SwiftUI by Example",desc:"How to add an inspector to any view",link:"/hackingwithswift.com/swiftui/how-to-add-an-inspector-to-any-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,e(t({title:"How to add bar items to a navigation view | SwiftUI by Example",desc:"How to add bar items to a navigation view",link:"/hackingwithswift.com/swiftui/how-to-add-bar-items-to-a-navigation-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const G=u(g,[["render",j],["__file","how-to-add-a-gesture-recognizer-to-a-view.html.vue"]]),A=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-add-a-gesture-recognizer-to-a-view.html","title":"How to add a gesture recognizer to a view","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to add a gesture recognizer to a view","description":"Article(s) > How to add a gesture recognizer to a view","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to add a gesture recognizer to a view"},{"property":"og:description","content":"How to add a gesture recognizer to a view"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-a-gesture-recognizer-to-a-view.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-a-gesture-recognizer-to-a-view.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to add a gesture recognizer to a view"}],["meta",{"property":"og:description","content":"Article(s) > How to add a gesture recognizer to a view"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to add a gesture recognizer to a view\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"prev":"/hackingwithswift.com/swiftui/how-to-add-haptic-effects-using-sensory-feedback.md"},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.97,"words":892},"filePathRelative":"hackingwithswift.com/swiftui/how-to-add-a-gesture-recognizer-to-a-view.md","excerpt":"\\n"}');export{G as comp,A as data};
