import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as n,t as d,e as s,n as i,g as o,d as t,f as e,r as l,o as k}from"./app-BgNevrm5.js";const m={},v={id:"frontmatter-title-관련",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-관련"},w=n("nav",{class:"table-of-contents"},[n("ul")],-1),b=n("hr",null,null,-1),h=e(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI&#39;s <code>Text</code> view is able to render more advanced strings created using Foundation&#39;s <code>AttributedString</code> struct, including adding underlines, strikethrough, web links, background colors, and more. Sadly, it has a rather bafflingly opaque API so I want to show you a whole bunch of examples to help get you started.</p><p>We can create an <code>AttributedString</code> with common properties such as font, background color, and foreground color:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> message<span class="token punctuation">:</span> <span class="token class-name">AttributedString</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token class-name">AttributedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, world!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        result<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token punctuation">.</span>largeTitle</span>
<span class="line">        result<span class="token punctuation">.</span>foregroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>white</span>
<span class="line">        result<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>red</span>
<span class="line">        <span class="token keyword">return</span> result</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),f={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-advanced-text-styling-using-attributedstring-1.zip",target:"_blank",rel:"noopener noreferrer"},y=e(`<p>That simple example is something you can do using just <code>Text</code> and regular SwiftUI modifiers, but part of the power of <code>AttributedString</code> is that customizations belong to the string rather than to the <code>Text</code> view used to render it.</p><p>This means the background color is part of the string itself, so we can merge several strings together using different background colors if we want:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> message1<span class="token punctuation">:</span> <span class="token class-name">AttributedString</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token class-name">AttributedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        result<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token punctuation">.</span>largeTitle</span>
<span class="line">        result<span class="token punctuation">.</span>foregroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>white</span>
<span class="line">        result<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>red</span>
<span class="line">        <span class="token keyword">return</span> result</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> message2<span class="token punctuation">:</span> <span class="token class-name">AttributedString</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token class-name">AttributedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;World!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        result<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token punctuation">.</span>largeTitle</span>
<span class="line">        result<span class="token punctuation">.</span>foregroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>white</span>
<span class="line">        result<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>blue</span>
<span class="line">        <span class="token keyword">return</span> result</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span>message1 <span class="token operator">+</span> message2<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-advanced-text-styling-using-attributedstring-2.zip",target:"_blank",rel:"noopener noreferrer"},_=e(`<p>If you try that using <code>Text</code> and <code>background()</code> modifiers, you&#39;ll see that it just doesn&#39;t work.</p><p>There are a handful attributes we can customize, including underline pattern and color:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> message<span class="token punctuation">:</span> <span class="token class-name">AttributedString</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token class-name">AttributedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Testing 1 2 3!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        result<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token punctuation">.</span>largeTitle</span>
<span class="line">        result<span class="token punctuation">.</span>foregroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>white</span>
<span class="line">        result<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>blue</span>
<span class="line">        result<span class="token punctuation">.</span>underlineStyle <span class="token operator">=</span> <span class="token class-name">Text</span><span class="token punctuation">.</span><span class="token class-name">LineStyle</span><span class="token punctuation">(</span>pattern<span class="token punctuation">:</span> <span class="token punctuation">.</span>solid<span class="token punctuation">,</span> color<span class="token punctuation">:</span> <span class="token punctuation">.</span>white<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> result</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-advanced-text-styling-using-attributedstring-3.zip",target:"_blank",rel:"noopener noreferrer"},A=e(`<p>You can adjust the baseline offset for pieces of the string, forcing it to be placed higher or lower than default:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> message<span class="token punctuation">:</span> <span class="token class-name">AttributedString</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> string <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;The letters go up and down&quot;</span></span></span>
<span class="line">        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token class-name">AttributedString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span>index<span class="token punctuation">,</span> letter<span class="token punctuation">)</span> <span class="token keyword">in</span> string<span class="token punctuation">.</span><span class="token function">enumerated</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">var</span> letterString <span class="token operator">=</span> <span class="token class-name">AttributedString</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">(</span>letter<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            letterString<span class="token punctuation">.</span>baselineOffset <span class="token operator">=</span> <span class="token function">sin</span><span class="token punctuation">(</span><span class="token class-name">Double</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">5</span></span>
<span class="line">            result <span class="token operator">+=</span> letterString</span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        result<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token punctuation">.</span>largeTitle</span>
<span class="line">        <span class="token keyword">return</span> result</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),q={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-advanced-text-styling-using-attributedstring-4.zip",target:"_blank",rel:"noopener noreferrer"},C=e(`<p>And we can even attach tappable web links to our text using the <code>link</code> property:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> message<span class="token punctuation">:</span> <span class="token class-name">AttributedString</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token class-name">AttributedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Learn Swift here&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        result<span class="token punctuation">.</span>font <span class="token operator">=</span> <span class="token punctuation">.</span>largeTitle</span>
<span class="line">        result<span class="token punctuation">.</span>link <span class="token operator">=</span> <span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;https://hackingwithswift.com&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> result</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),V={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-advanced-text-styling-using-attributedstring-5.zip",target:"_blank",rel:"noopener noreferrer"},T=e(`<p>However, the <em>really</em> powerful feature of <code>AttributedString</code> is that it doesn&#39;t throw away all the metadata we provide it about our strings, which unlocks a huge amount of extra functionality.</p><p>For example, we can mark part of the string as needing to be spelled out for accessibility reasons, so that things like passwords are read out correctly when using VoiceOver:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> message<span class="token punctuation">:</span> <span class="token class-name">AttributedString</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> password <span class="token operator">=</span> <span class="token class-name">AttributedString</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;abCayer-muQai&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        password<span class="token punctuation">.</span>accessibilitySpeechSpellsOutCharacters <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token string-literal"><span class="token string">&quot;Your password is: &quot;</span></span> <span class="token operator">+</span> password</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),j={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-advanced-text-styling-using-attributedstring-6.zip",target:"_blank",rel:"noopener noreferrer"},H=e(`<p>Even more impressive is how it handles structured information.</p><p>For example, if we format a <code>Date</code> instance as an attributed string it retains knowledge of what each component represents – it remembers that “November” is the month part of the string, for example.</p><p>This means we can style our strings <em>semantically</em>: we can say “make the whole have a secondary color, apart from the weekday part – that should have a primary color”, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> message<span class="token punctuation">:</span> <span class="token class-name">AttributedString</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token class-name">Date</span><span class="token punctuation">.</span>now<span class="token punctuation">.</span><span class="token function">formatted</span><span class="token punctuation">(</span><span class="token punctuation">.</span>dateTime<span class="token punctuation">.</span><span class="token function">weekday</span><span class="token punctuation">(</span><span class="token punctuation">.</span>wide<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">day</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">month</span><span class="token punctuation">(</span><span class="token punctuation">.</span>wide<span class="token punctuation">)</span><span class="token punctuation">.</span>attributed<span class="token punctuation">)</span></span>
<span class="line">        result<span class="token punctuation">.</span>foregroundColor <span class="token operator">=</span> <span class="token punctuation">.</span>secondary</span>
<span class="line"></span>
<span class="line">        <span class="token keyword">let</span> weekday <span class="token operator">=</span> <span class="token class-name">AttributeContainer</span><span class="token punctuation">.</span><span class="token function">dateField</span><span class="token punctuation">(</span><span class="token punctuation">.</span>weekday<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">let</span> weekdayStyling <span class="token operator">=</span> <span class="token class-name">AttributeContainer</span><span class="token punctuation">.</span><span class="token function">foregroundColor</span><span class="token punctuation">(</span><span class="token punctuation">.</span>primary<span class="token punctuation">)</span></span>
<span class="line">        result<span class="token punctuation">.</span><span class="token function">replaceAttributes</span><span class="token punctuation">(</span>weekday<span class="token punctuation">,</span> with<span class="token punctuation">:</span> weekdayStyling<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> result</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),z={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-advanced-text-styling-using-attributedstring-7.zip",target:"_blank",rel:"noopener noreferrer"},I=e(`<p>Notice how that code has no idea where the weekday actually appears in the text – it&#39;s language and locale independent, so it will be styled correctly for everyone.</p><p>The same is true of working with the names of people using <code>PersonNameComponents</code> – this makes an <code>AttributedString</code> instance where the family name of someone is bold:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> message<span class="token punctuation">:</span> <span class="token class-name">AttributedString</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> components <span class="token operator">=</span> <span class="token class-name">PersonNameComponents</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        components<span class="token punctuation">.</span>givenName <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Taylor&quot;</span></span></span>
<span class="line">        components<span class="token punctuation">.</span>familyName <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;Swift&quot;</span></span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">var</span> result <span class="token operator">=</span> components<span class="token punctuation">.</span><span class="token function">formatted</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span>style<span class="token punctuation">:</span> <span class="token punctuation">.</span>long<span class="token punctuation">)</span><span class="token punctuation">.</span>attributed<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">let</span> familyNameStyling <span class="token operator">=</span> <span class="token class-name">AttributeContainer</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">let</span> familyName <span class="token operator">=</span> <span class="token class-name">AttributeContainer</span><span class="token punctuation">.</span><span class="token function">personNameComponent</span><span class="token punctuation">(</span><span class="token punctuation">.</span>familyName<span class="token punctuation">)</span></span>
<span class="line">        result<span class="token punctuation">.</span><span class="token function">replaceAttributes</span><span class="token punctuation">(</span>familyName<span class="token punctuation">,</span> with<span class="token punctuation">:</span> familyNameStyling<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> result</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),N={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-advanced-text-styling-using-attributedstring-8.zip",target:"_blank",rel:"noopener noreferrer"},D=e(`<p>You can even use it with measurements. For example, the following code creates a measurement of 200 kilometers, then formats that so that the value is presented much larger than the unit:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> message<span class="token punctuation">:</span> <span class="token class-name">AttributedString</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> amount <span class="token operator">=</span> <span class="token class-name">Measurement</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> unit<span class="token punctuation">:</span> <span class="token class-name">UnitLength</span><span class="token punctuation">.</span>kilometers<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">var</span> result <span class="token operator">=</span> amount<span class="token punctuation">.</span><span class="token function">formatted</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">measurement</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token punctuation">.</span>wide<span class="token punctuation">)</span><span class="token punctuation">.</span>attributed<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">let</span> distanceStyling <span class="token operator">=</span> <span class="token class-name">AttributeContainer</span><span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>title<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">let</span> distance <span class="token operator">=</span> <span class="token class-name">AttributeContainer</span><span class="token punctuation">.</span><span class="token function">measurement</span><span class="token punctuation">(</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span></span>
<span class="line">        result<span class="token punctuation">.</span><span class="token function">replaceAttributes</span><span class="token punctuation">(</span>distance<span class="token punctuation">,</span> with<span class="token punctuation">:</span> distanceStyling<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> result</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),U={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-advanced-text-styling-using-attributedstring-9.zip",target:"_blank",rel:"noopener noreferrer"},E=n("p",null,"As a bonus, that will automatically honor the user's locale preference for distance, meaning that many users will see “124 miles” rather than “200 kilometers”.",-1),X=n("div",{class:"hint-container warning"},[n("p",{class:"hint-container-title"},"Warning"),n("p",null,"If you explore the API using Xcode's autocomplete, you'll see all sorts of options that look like they ought to work but in fact do nothing at all.")],-1),P={class:"hint-container details"},F=n("summary",null,"Similar solutions…",-1);function R(c,L){const p=l("VPCard"),a=l("FontIcon");return k(),u("div",null,[n("h1",v,[n("a",g,[n("span",null,d(c.$frontmatter.title)+" 관련",1)])]),s(p,i(o({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,b,s(p,i(o({title:"How to add advanced text styling using AttributedString | SwiftUI by Example",desc:"How to add advanced text styling using AttributedString",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-add-advanced-text-styling-using-attributedstring",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),h,n("blockquote",null,[n("p",null,[n("a",f,[s(a,{icon:"fas fa-file-zipper"}),t("Download this as an Xcode project")])])]),y,n("blockquote",null,[n("p",null,[n("a",x,[s(a,{icon:"fas fa-file-zipper"}),t("Download this as an Xcode project")])])]),_,n("blockquote",null,[n("p",null,[n("a",S,[s(a,{icon:"fas fa-file-zipper"}),t("Download this as an Xcode project")])])]),A,n("blockquote",null,[n("p",null,[n("a",q,[s(a,{icon:"fas fa-file-zipper"}),t("Download this as an Xcode project")])])]),C,n("blockquote",null,[n("p",null,[n("a",V,[s(a,{icon:"fas fa-file-zipper"}),t("Download this as an Xcode project")])])]),T,n("blockquote",null,[n("p",null,[n("a",j,[s(a,{icon:"fas fa-file-zipper"}),t("Download this as an Xcode project")])])]),H,n("blockquote",null,[n("p",null,[n("a",z,[s(a,{icon:"fas fa-file-zipper"}),t("Download this as an Xcode project")])])]),I,n("blockquote",null,[n("p",null,[n("a",N,[s(a,{icon:"fas fa-file-zipper"}),t("Download this as an Xcode project")])])]),D,n("blockquote",null,[n("p",null,[n("a",U,[s(a,{icon:"fas fa-file-zipper"}),t("Download this as an Xcode project")])])]),E,X,n("details",P,[F,s(p,i(o({title:"How to stack modifiers to create more advanced effects | SwiftUI by Example",desc:"How to stack modifiers to create more advanced effects",link:"/hackingwithswift.com/swiftui/how-to-stack-modifiers-to-create-more-advanced-effects.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(p,i(o({title:"How to format text inside text views | SwiftUI by Example",desc:"How to format text inside text views",link:"/hackingwithswift.com/swiftui/how-to-format-text-inside-text-views.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(p,i(o({title:"How to add spacing between letters in text | SwiftUI by Example",desc:"How to add spacing between letters in text",link:"/hackingwithswift.com/swiftui/how-to-add-spacing-between-letters-in-text.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(p,i(o({title:"How to align form text and controls neatly with LabeledContent | SwiftUI by Example",desc:"How to align form text and controls neatly with LabeledContent",link:"/hackingwithswift.com/swiftui/how-to-align-form-text-and-controls-neatly-with-labeledcontent.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(p,i(o({title:"How to style text views with fonts, colors, line spacing, and more | SwiftUI by Example",desc:"How to style text views with fonts, colors, line spacing, and more",link:"/hackingwithswift.com/swiftui/how-to-style-text-views-with-fonts-colors-line-spacing-and-more.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const K=r(m,[["render",R],["__file","how-to-add-advanced-text-styling-using-attributedstring.html.vue"]]),M=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-add-advanced-text-styling-using-attributedstring.html","title":"How to add advanced text styling using AttributedString","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to add advanced text styling using AttributedString","description":"Article(s) > How to add advanced text styling using AttributedString","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to add advanced text styling using AttributedString"},{"property":"og:description","content":"How to add advanced text styling using AttributedString"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-advanced-text-styling-using-attributedstring.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-advanced-text-styling-using-attributedstring.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to add advanced text styling using AttributedString"}],["meta",{"property":"og:description","content":"Article(s) > How to add advanced text styling using AttributedString"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to add advanced text styling using AttributedString\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":4.59,"words":1376},"filePathRelative":"hackingwithswift.com/swiftui/how-to-add-advanced-text-styling-using-attributedstring.md","excerpt":"\\n"}');export{K as comp,M as data};
