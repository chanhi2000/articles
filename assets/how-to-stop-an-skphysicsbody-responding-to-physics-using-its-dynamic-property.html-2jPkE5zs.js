import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as t,t as c,e as s,n as i,g as n,a as e,r as h,o as l}from"./app-BgNevrm5.js";const d={},y={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},g=t("nav",{class:"table-of-contents"},[t("ul")],-1),u=t("hr",null,null,-1),w=t("blockquote",null,[t("p",null,"Available from iOS 7.0")],-1),f=t("details",{class:"hint-container details"},[t("summary",null,"Similar solutions‚Ä¶"),e(`
/quick-start/swiftui/all-swiftui-property-wrappers-explained-and-compared">All SwiftUI property wrappers explained and compared 
/example-code/games/how-to-add-physics-to-an-skspritenode">How to add physics to an SKSpriteNode 
/example-code/games/how-to-debug-physics-in-a-spritekit-scene-using-showsphysics">How to debug physics in a SpriteKit scene using showsPhysics 
/example-code/games/how-to-add-pixel-perfect-physics-to-an-skspritenode">How to add pixel-perfect physics to an SKSpriteNode 
/quick-start/swiftui/how-to-use-dynamic-type-with-a-custom-font">How to use Dynamic Type with a custom font</a>
`)],-1);function b(a,k){const o=h("VPCard");return l(),r("div",null,[t("h1",y,[t("a",m,[t("span",null,c(a.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),s(o,i(n({title:"Games - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/games/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,u,s(o,i(n({title:"How to stop an SKPhysicsBody responding to physics using its dynamic property | Games - free Swift example code",desc:"How to stop an SKPhysicsBody responding to physics using its dynamic property",link:"https://hackingwithswift.com/example-code/games/how-to-stop-an-skphysicsbody-responding-to-physics-using-its-dynamic-property",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,e(" TODO: ÏûëÏÑ± "),e(` 
Enabling physics in SpriteKit is just one line of code, but sometimes you want your physics to be a little more nuanced. For example, your player might have circle physics and should respond to gravity, whereas walls might have rectangle physics and not respond to gravity ‚Äì they are there to be bounced off, but nothing more.

This problem is solved in SpriteKit by using the \`isDynamic\` property. It's \`true\` by default, which means that your objects respond to the world's environment as you would expect, but if you set it to be \`false\` then you get an object that has active physics but doesn't move as a result of those physics.

Here's an example:

\`\`\`swift
let wall = SKSpriteNode(imageNamed: "wall")
wall.position = CGPoint(x: 512, y: 0)
wall.physicsBody = SKPhysicsBody(circleOfRadius: wall.size.width / 2.0)
wall.physicsBody?.isDynamic = false
addChild(wall)
\`\`\`

`),f])}const x=p(d,[["render",b],["__file","how-to-stop-an-skphysicsbody-responding-to-physics-using-its-dynamic-property.html.vue"]]),P=JSON.parse('{"path":"/hackingwithswift.com/example-code/games/how-to-stop-an-skphysicsbody-responding-to-physics-using-its-dynamic-property.html","title":"How to stop an SKPhysicsBody responding to physics using its dynamic property","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to stop an SKPhysicsBody responding to physics using its dynamic property","description":"Article(s) > How to stop an SKPhysicsBody responding to physics using its dynamic property","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-7.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to stop an SKPhysicsBody responding to physics using its dynamic property"},{"property":"og:description","content":"How to stop an SKPhysicsBody responding to physics using its dynamic property"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/games/how-to-stop-an-skphysicsbody-responding-to-physics-using-its-dynamic-property.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/games/how-to-stop-an-skphysicsbody-responding-to-physics-using-its-dynamic-property.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to stop an SKPhysicsBody responding to physics using its dynamic property"}],["meta",{"property":"og:description","content":"Article(s) > How to stop an SKPhysicsBody responding to physics using its dynamic property"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-7.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to stop an SKPhysicsBody responding to physics using its dynamic property\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.47,"words":441},"filePathRelative":"hackingwithswift.com/example-code/games/how-to-stop-an-skphysicsbody-responding-to-physics-using-its-dynamic-property.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{x as comp,P as data};
