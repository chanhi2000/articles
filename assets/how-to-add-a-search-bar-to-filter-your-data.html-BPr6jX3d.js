import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,b as s,t as d,e as n,n as t,g as e,d as o,f as i,r as l,o as m}from"./app-BgNevrm5.js";const v={},h={id:"frontmatter-title-관련",tabindex:"-1"},b={class:"header-anchor",href:"#frontmatter-title-관련"},w=s("nav",{class:"table-of-contents"},[s("ul")],-1),g=s("hr",null,null,-1),f=i(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>Updated in iOS 17</strong></p><p>SwiftUI&#39;s <code>searchable()</code> modifier lets us place a search bar directly into a <code>NavigationStack</code>, which will either stay fixed for simple layouts or automatically appear and scroll when used with a list. For more power, you can also use <code>searchScopes()</code> to control where the search takes place.</p><p>In its simplest form, this is just a matter of adding <code>searchable()</code> to some view inside a navigation stack, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Searching for </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">searchText</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Searchable Example&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $searchText<span class="token punctuation">)</span>            </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-a-search-bar-to-filter-your-data-1.zip",target:"_blank",rel:"noopener noreferrer"},x=i(`<div class="hint-container tip"><p class="hint-container-title">Tips</p><p>By attaching <code>searchable()</code> to <code>NavigationStack</code> or <code>NavigationSplitView</code>, we&#39;re leaving it to the system to decide where is most appropriate to display the search box. If you specifically want it attached to one view, you can move it as needed, or try its <code>placement</code> parameter.</p></div><p>If you want to track when searching is currently active, in iOS 17 you can bind an <code>isPresented</code> Boolean to <code>searchable()</code> like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> searchIsActive <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Searching for </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">searchText</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Searching: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">searchIsActive <span class="token operator">?</span> <span class="token string-literal"><span class="token string">&quot;Yes&quot;</span></span> <span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;No&quot;</span></span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $searchText<span class="token punctuation">,</span> isPresented<span class="token punctuation">:</span> $searchIsActive<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),q={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-a-search-bar-to-filter-your-data-2.zip",target:"_blank",rel:"noopener noreferrer"},S=i(`<p>For further customization, you can provide a string to display as a prompt for the search box like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Searching for </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">searchText</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Searchable Example&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $searchText<span class="token punctuation">,</span> prompt<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Look for something&quot;</span></span><span class="token punctuation">)</span>            </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),_={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-a-search-bar-to-filter-your-data-3.zip",target:"_blank",rel:"noopener noreferrer"},T=i(`<p>In practice, though, you&#39;re more likely to use it to filter a <code>List</code> of data, something like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;Holly&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Josh&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Rhonda&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Ted&quot;</span></span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">List</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>searchResults<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> name <span class="token keyword">in</span></span>
<span class="line">                    <span class="token class-name">NavigationLink</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token class-name">Text</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span> label<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token class-name">Text</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Contacts&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $searchText<span class="token punctuation">)</span>            </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> searchResults<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> searchText<span class="token punctuation">.</span>isEmpty <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> names</span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> names<span class="token punctuation">.</span>filter <span class="token punctuation">{</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>searchText<span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),V={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-a-search-bar-to-filter-your-data-4.zip",target:"_blank",rel:"noopener noreferrer"},I=i(`<p>As the search bar now appears inside a list, it will usually start life hidden – users need to tug the list gently downwards at the top to reveal it.</p><p>For more advanced uses, <code>searchable()</code> allows us to show a list of suggestions to our users, even adding extra completion information to save them typing so much. This is done by passing a function to <code>searchable()</code> that returns a view containing your suggestions, and if you want users to be able to tap to complete their search use the <code>searchCompletion()</code> modifier for each suggestion.</p><p>So, we could modify our previous example to provide tappable suggestions as the user types, rather than just filtering the whole list in-place:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;Holly&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Josh&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Rhonda&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&quot;Ted&quot;</span></span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">List</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>searchResults<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> name <span class="token keyword">in</span></span>
<span class="line">                    <span class="token class-name">NavigationLink</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token class-name">Text</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span> label<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token class-name">Text</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Contacts&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $searchText<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">ForEach</span><span class="token punctuation">(</span>searchResults<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> result <span class="token keyword">in</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Are you looking for </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">result</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">?&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">searchCompletion</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> searchResults<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> searchText<span class="token punctuation">.</span>isEmpty <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> names</span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> names<span class="token punctuation">.</span>filter <span class="token punctuation">{</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>searchText<span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),H={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-a-search-bar-to-filter-your-data-5.zip",target:"_blank",rel:"noopener noreferrer"},j=i(`<p>That uses “Are you looking for Holly?” and similar for each suggestion, so you can see how it looks on screen. It also uses each person&#39;s name as the completion, meaning that if you type “Ho” and tap “Holly” the search bar will autocomplete with the full name.</p><p>For more advanced searches, you can add <em>scopes</em> to your search box to let the user select what kind of search they want by adding the <code>searchScopes()</code> modifier. This needs to be bound to some state that tracks the currently active search scope, and you can then provide scopes using a trailing closure.</p><p>As an example, we could write some code to let the user choose between searching all their inbox or just their favorite messages, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">Message</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span><span class="token punctuation">,</span> <span class="token class-name">Codable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> id<span class="token punctuation">:</span> <span class="token class-name">Int</span></span>
<span class="line">    <span class="token keyword">var</span> user<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">var</span> text<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">enum</span> <span class="token class-name">SearchScope</span><span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">CaseIterable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> inbox<span class="token punctuation">,</span> favorites</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> messages <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">Message</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> searchText <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> searchScope <span class="token operator">=</span> <span class="token class-name">SearchScope</span><span class="token punctuation">.</span>inbox</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">NavigationStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">List</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>filteredMessages<span class="token punctuation">)</span> <span class="token punctuation">{</span> message <span class="token keyword">in</span></span>
<span class="line">                    <span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                        <span class="token class-name">Text</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>user<span class="token punctuation">)</span></span>
<span class="line">                            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">                        <span class="token class-name">Text</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>text<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">}</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">navigationTitle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Messages&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">searchable</span><span class="token punctuation">(</span>text<span class="token punctuation">:</span> $searchText<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">searchScopes</span><span class="token punctuation">(</span>$searchScope<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">ForEach</span><span class="token punctuation">(</span><span class="token class-name">SearchScope</span><span class="token punctuation">.</span>allCases<span class="token punctuation">,</span> id<span class="token punctuation">:</span> <span class="token punctuation">\\</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> scope <span class="token keyword">in</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span>scope<span class="token punctuation">.</span>rawValue<span class="token punctuation">.</span>capitalized<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onAppear</span><span class="token punctuation">(</span>perform<span class="token punctuation">:</span> runSearch<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onSubmit</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token punctuation">.</span>search<span class="token punctuation">,</span> runSearch<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> searchScope<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token omit keyword">_</span> <span class="token keyword">in</span> <span class="token function">runSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> filteredMessages<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Message</span><span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> searchText<span class="token punctuation">.</span>isEmpty <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> messages</span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> messages<span class="token punctuation">.</span>filter <span class="token punctuation">{</span> <span class="token short-argument">$0</span><span class="token punctuation">.</span>text<span class="token punctuation">.</span><span class="token function">localizedCaseInsensitiveContains</span><span class="token punctuation">(</span>searchText<span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">runSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Task</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">guard</span> <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;https://hws.dev/</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">searchScope<span class="token punctuation">.</span>rawValue</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">.json&quot;</span></span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">let</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token omit keyword">_</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token keyword">await</span> <span class="token class-name">URLSession</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>from<span class="token punctuation">:</span> url<span class="token punctuation">)</span></span>
<span class="line">            messages <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">JSONDecoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">Message</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> data<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),C={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-a-search-bar-to-filter-your-data-6.zip",target:"_blank",rel:"noopener noreferrer"},E=s("div",{class:"hint-container tip"},[s("p",{class:"hint-container-title"},"Tips"),s("p",null,"If you add more scopes than there is space for, your scope titles will be truncated.")],-1),A={class:"hint-container details"},N=s("summary",null,"Similar solutions…",-1);function z(u,R){const a=l("VPCard"),p=l("FontIcon"),c=l("VidStack");return m(),k("div",null,[s("h1",h,[s("a",b,[s("span",null,d(u.$frontmatter.title)+" 관련",1)])]),n(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,g,n(a,t(e({title:"How to add a search bar to filter your data | SwiftUI by Example",desc:"How to add a search bar to filter your data",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-add-a-search-bar-to-filter-your-data",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f,s("blockquote",null,[s("p",null,[s("a",y,[n(p,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),n(c,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-a-search-bar-to-filter-your-data-1~dark.mp4"}),x,s("blockquote",null,[s("p",null,[s("a",q,[n(p,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),S,s("blockquote",null,[s("p",null,[s("a",_,[n(p,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),n(c,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-a-search-bar-to-filter-your-data-2~dark.mp4"}),T,s("blockquote",null,[s("p",null,[s("a",V,[n(p,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),n(c,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-a-search-bar-to-filter-your-data-3~dark.mp4"}),I,s("blockquote",null,[s("p",null,[s("a",H,[n(p,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),n(c,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-a-search-bar-to-filter-your-data-4~dark.mp4"}),j,s("blockquote",null,[s("p",null,[s("a",C,[n(p,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),E,s("details",A,[N,n(a,t(e({title:"How to add search tokens to a search field | SwiftUI by Example",desc:"How to add search tokens to a search field",link:"/hackingwithswift.com/swiftui/how-to-add-search-tokens-to-a-search-field.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to filter Core Data fetch requests using a predicate | SwiftUI by Example",desc:"How to filter Core Data fetch requests using a predicate",link:"/hackingwithswift.com/swiftui/how-to-filter-core-data-fetch-requests-using-a-predicate.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"All SwiftUI property wrappers explained and compared | SwiftUI by Example",desc:"All SwiftUI property wrappers explained and compared",link:"/hackingwithswift.com/swiftui/all-swiftui-property-wrappers-explained-and-compared.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to hide the tab bar, navigation bar, or other toolbars | SwiftUI by Example",desc:"How to hide the tab bar, navigation bar, or other toolbars",link:"/hackingwithswift.com/swiftui/how-to-hide-the-tab-bar-navigation-bar-or-other-toolbars.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to add bar items to a navigation view | SwiftUI by Example",desc:"How to add bar items to a navigation view",link:"/hackingwithswift.com/swiftui/how-to-add-bar-items-to-a-navigation-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const F=r(v,[["render",z],["__file","how-to-add-a-search-bar-to-filter-your-data.html.vue"]]),$=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-add-a-search-bar-to-filter-your-data.html","title":"How to add a search bar to filter your data","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to add a search bar to filter your data","description":"Article(s) > How to add a search bar to filter your data","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to add a search bar to filter your data"},{"property":"og:description","content":"How to add a search bar to filter your data"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-a-search-bar-to-filter-your-data.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-a-search-bar-to-filter-your-data.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to add a search bar to filter your data"}],["meta",{"property":"og:description","content":"Article(s) > How to add a search bar to filter your data"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to add a search bar to filter your data\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":4.56,"words":1368},"filePathRelative":"hackingwithswift.com/swiftui/how-to-add-a-search-bar-to-filter-your-data.md","excerpt":"\\n"}');export{F as comp,$ as data};
