import{_ as g}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as f,b as e,t as v,e as a,n as b,g as k,w as n,d as t,f as u,r as s,o as y}from"./app-BgNevrm5.js";const _={},w={id:"frontmatter-title-관련",tabindex:"-1"},j={class:"header-anchor",href:"#frontmatter-title-관련"},Q={class:"table-of-contents"},q=e("hr",null,null,-1),A=e("h2",{id:"running-the-debugger-with-quarkus-dev-mode",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#running-the-debugger-with-quarkus-dev-mode"},[e("span",null,"Running the Debugger with Quarkus Dev Mode")])],-1),J=e("p",null,"Frequently, a test may fail without any apparent cause, leaving us perplexed (or perhaps not so much). Ironically, I sometimes find myself attributing my own simple errors to underlying bugs in external libraries. Thankfully, the debugger comes to our rescue, shedding light on where things took a wrong turn and often humbling me by revealing my own mistakes.",-1),x=e("code",null,"[Run]",-1),T=e("code",null,"[Edit Configurations]",-1),I=e("code",null,"[Remote JVM Debug]",-1),P=e("figure",null,[e("img",{src:"https://lh7-us.googleusercontent.com/mU5yuxU9P-ZhumCGo2fRWK__nbZA4X9JJ_2hoQSTzcFCsgVMcm_O01yyj4RODjnz_GkOZ2Lj4NwclnKyij3CilIxPthGMuMOxc1EJqB8SanULs-Aq6N011tAKqjXh6yV0Ij53h4_oUlHIdY9nsm5Btk",alt:"As Quarkus designates port 5005 for debug sessions, you simply need to specify that you want to link to a remote JVM at localhost:5005, as illustrated in the image below.",tabindex:"0",loading:"lazy"}),e("figcaption",null,"As Quarkus designates port 5005 for debug sessions, you simply need to specify that you want to link to a remote JVM at localhost:5005, as illustrated in the image below.")],-1),M=e("p",null,"Once this configuration is in place, restart Quarkus in the debug dev mode as follows:",-1),V=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[t("./mvnw compile quarkus:dev "),e("span",{class:"token parameter variable"},"-Ddebug")]),t(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1),D=u('<p>Then run your new Debug Quarkus configuration in IntelliJ to connect to the Quarkus process and proceed to use the debugger as normal.</p><h2 id="building-your-application" tabindex="-1"><a class="header-anchor" href="#building-your-application"><span>Building Your Application</span></a></h2><p>Although our application&#39;s feature set might be modest at this stage, it&#39;s fully functional and primed to potentially offer users access to film-related information. With this in mind, it&#39;s a fitting moment to prepare for deployment.</p><p>Quarkus provides two distinct build options: the Quarkus JIT HotSpot compiler and the Quarkus native build powered by Graal VM. The former enhances the standard Java JIT compiler for optimal performance, while the latter capitalizes on ahead-of-time compilation (AOT), maximizing build-time efficiency over runtime execution. While the image below is a Quarkus-provided marketing asset, my own experiments affirm the tangible performance gains it highlights.</p><figure><img src="https://lh7-us.googleusercontent.com/3Q3897mcnata_otTB57AP_TcttNaiJVd2QUXTMgMApwIaRz9-OsPliUZeCKjbbWbDjxAbACmcM2dk-Xyuuc0PwJusJAQs0EKLzUjntDriI7TTmc2ZhPAYsglS362Du793_lXxan6Ww_BVFu5kXR7Qa0" alt="Illustrations on the Quarkus website visualizes how different build processes impacts the application’s memory footprint and first response time, source: www.quarkus.io." tabindex="0" loading="lazy"><figcaption>Illustrations on the Quarkus website visualizes how different build processes impacts the application’s memory footprint and first response time, source: www.quarkus.io.</figcaption></figure><h3 id="quarkus-jit-build-via-openjdk" tabindex="-1"><a class="header-anchor" href="#quarkus-jit-build-via-openjdk"><span>Quarkus JIT Build via OpenJDK</span></a></h3><p>Since you&#39;ve already developed your project using the Quarkus platform, you have immediate access to the JIT compiler without any additional steps required. The illustration above provides a glimpse into the significant enhancements Quarkus has made to the standard compiler, potentially fulfilling your optimization requirements.</p><p>To initiate the standard Quarkus build process, simply execute the command:</p>',8),O=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},"quarkus build"),t(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1),S=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},"./gradlew quarkusBuild"),t(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1),R=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},"./mvnw quarkus:build"),t(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1),z=e("code",null,"/target/quarkus-app",-1),G=u(`<p>When you&#39;re ready to run your application, employ the following command:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">java</span> <span class="token parameter variable">-jar</span> /target/quarkus-run.jar</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Pay attention to the Quarkus prompt indicating how long it took to start your application. For reference, it took me around 1.7s to start the JIT compiled version of this application.</p><h3 id="quarkus-native-build-via-graalvm" tabindex="-1"><a class="header-anchor" href="#quarkus-native-build-via-graalvm"><span>Quarkus Native Build via GraalVM</span></a></h3><p>Now, let&#39;s delve into the more interesting aspect of Quarkus—the native build process. Although compiling natively doesn&#39;t demand additional effort on your part as a developer, it does require a bit of patience. Performing ahead-of-time compilation (AOT) takes considerably longer than the standard JVM HotSpot build. Native compilation acts as a potent compressor, best reserved for when you&#39;re preparing to deploy a fresh iteration of your software.</p>`,5),B={href:"https://quarkus.io/guides/building-native-image#configuring-graalvm",target:"_blank",rel:"noopener noreferrer"},C=u(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./mvnw package <span class="token parameter variable">-Pnative</span> -Dquarkus.native.container-build<span class="token operator">=</span>true</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Alternatively, if you possess GraalVM locally, you can proceed with the local version:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./mvnw package <span class="token parameter variable">-Pnative</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>The executable file created by the native build operates not as a JVM-based application, but as a platform-specific native application. To run it, simply execute the runner script located in the root of the target folder (The filename corresponds to your application&#39;s name):</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">./target/quarkus-tutorial-1.0.0-SNAPSHOT-runner</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Again, observe the Quarkus prompt to observe how long it took to start the native version. In my case I was down to about a tenth of a second!</p><hr><h2 id="resources" tabindex="-1"><a class="header-anchor" href="#resources"><span>Resources</span></a></h2><ul><li><a href="https://code.quarkus.io/" target="_blank" rel="noopener noreferrer">Quarkus Project Configurator</a></li><li><a href="https://quarkus.io/guides/" target="_blank" rel="noopener noreferrer">Quarkus Documentation</a></li><li><a href="https://speedment.github.io/jpa-streamer/jpa-streamer/latest/introduction/introduction.html" target="_blank" rel="noopener noreferrer">JPAStreamer Documentation</a></li><li>Complete Project Source Code</li></ul>`,9);function K(c,N){const p=s("VPCard"),o=s("router-link"),h=s("SiteInfo"),m=s("VidStack"),l=s("FontIcon"),d=s("Tabs");return y(),f("div",null,[e("h1",w,[e("a",j,[e("span",null,v(c.$frontmatter.title)+" 관련",1)])]),a(p,b(k({title:"Get started with Quarkus and JPAStreamer",desc:"In the world of software development, innovation often arrives in the form of powerful tools that transform the way we build applications - enter Quarkus, a development platform that's reshaping the Java landscape.  If you are new...",link:"/freecodecamp.org/get-started-with-quarkus-and-jpastreamer-2/README.md",logo:"https://cdn.freecodecamp.org/universal/favicons/favicon.ico",background:"rgba(10,10,35,0.2)"})),null,16),e("nav",Q,[e("ul",null,[e("li",null,[a(o,{to:"#running-the-debugger-with-quarkus-dev-mode"},{default:n(()=>[t("Running the Debugger with Quarkus Dev Mode")]),_:1})]),e("li",null,[a(o,{to:"#building-your-application"},{default:n(()=>[t("Building Your Application")]),_:1}),e("ul",null,[e("li",null,[a(o,{to:"#quarkus-jit-build-via-openjdk"},{default:n(()=>[t("Quarkus JIT Build via OpenJDK")]),_:1})]),e("li",null,[a(o,{to:"#quarkus-native-build-via-graalvm"},{default:n(()=>[t("Quarkus Native Build via GraalVM")]),_:1})])])]),e("li",null,[a(o,{to:"#resources"},{default:n(()=>[t("Resources")]),_:1})])])]),q,a(h,{name:"Get started with Quarkus and JPAStreamer",desc:"In the world of software development, innovation often arrives in the form of powerful tools that transform the way we build applications - enter Quarkus, a development platform that's reshaping the Java landscape.  If you are new...",url:"https://freecodecamp.org/news/get-started-with-quarkus-and-jpastreamer-2/",logo:"https://cdn.freecodecamp.org/universal/favicons/favicon.ico",preview:"https://freecodecamp.org/news/content/images/size/w2000/2023/11/jpastreamer_featureimage_update.png"}),a(m,{src:"youtube/KZnQ5R8Kd4I"}),A,J,e("p",null,[t("If you wish to use IntelliJ’s debugger in conjunction with the Quarkus dev mode, you need to attach the debugger manually. This process is straightforward but entails creating a personalized run configuration. Head to "),a(l,{icon:"iconfont icon-select"}),x,t(" > "),T,t(" and generate a new "),a(l,{icon:"iconfont icon-select"}),I,t(' configuration. Opt for a clear label like "Debug Quarkus" to easily distinguish it from other configurations.')]),P,M,a(d,{id:"26",data:[{id:"mvn"}],active:0},{title0:n(({value:i,isActive:r})=>[t("mvn")]),tab0:n(({value:i,isActive:r})=>[V]),_:1}),D,a(d,{id:"55",data:[{id:"quarkus"},{id:"gradle"},{id:"mvn"}],active:0},{title0:n(({value:i,isActive:r})=>[t("quarkus")]),title1:n(({value:i,isActive:r})=>[t("gradle")]),title2:n(({value:i,isActive:r})=>[t("mvn")]),tab0:n(({value:i,isActive:r})=>[O]),tab1:n(({value:i,isActive:r})=>[S]),tab2:n(({value:i,isActive:r})=>[R]),_:1}),e("p",null,[t("The resulting build is stored in "),a(l,{icon:"fas fa-folder-open"}),z,t(". However, it's important to note that the generated JAR isn't an über-jar and therefore lacks standalone functionality. For successful deployment, ensure that the entire quarkus-app folder is included, to guarantee the availability of all necessary resources.")]),G,e("p",null,[t("As Quarkus have introduced the option to build nativelty using a containerized variant of GraalVM, I won't delve into "),e("a",B,[a(l,{icon:"fas fa-globe"}),t("GraalVM installation instructions")]),t(". To execute a native build using the GraalVM Docker container, issue the following command:")]),C])}const X=g(_,[["render",K],["__file","others.html.vue"]]),F=JSON.parse('{"path":"/freecodecamp.org/get-started-with-quarkus-and-jpastreamer-2/others.html","title":"5. Others","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"5. Others","description":"(5/5) Get started with Quarkus and JPAStreamer","category":["Java","Quarkus","Youtube"],"tag":["blog","freecodecamp.org","java","jdk","jdk8","stream","quarkus","jpa","jpastreamer"],"head":[[{"meta":null},{"property":"og:title","content":"(5/5) Get started with Quarkus and JPAStreamer"},{"property":"og:description","content":"5. Others"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/freecodecamp.org/get-started-with-quarkus-and-jpastreamer-2/others.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/freecodecamp.org/get-started-with-quarkus-and-jpastreamer-2/others.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"5. Others"}],["meta",{"property":"og:description","content":"(5/5) Get started with Quarkus and JPAStreamer"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://freecodecamp.org/news/content/images/size/w2000/2023/11/jpastreamer_featureimage_update.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://freecodecamp.org/news/content/images/size/w2000/2023/11/jpastreamer_featureimage_update.png"}],["meta",{"name":"twitter:image:alt","content":"5. Others"}],["meta",{"property":"article:author","content":"Julia Gustafsson"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"freecodecamp.org"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"jdk8"}],["meta",{"property":"article:tag","content":"stream"}],["meta",{"property":"article:tag","content":"quarkus"}],["meta",{"property":"article:tag","content":"jpa"}],["meta",{"property":"article:tag","content":"jpastreamer"}],["meta",{"property":"article:published_time","content":"2023-11-03T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"5. Others\\",\\"image\\":[\\"https://lh7-us.googleusercontent.com/mU5yuxU9P-ZhumCGo2fRWK__nbZA4X9JJ_2hoQSTzcFCsgVMcm_O01yyj4RODjnz_GkOZ2Lj4NwclnKyij3CilIxPthGMuMOxc1EJqB8SanULs-Aq6N011tAKqjXh6yV0Ij53h4_oUlHIdY9nsm5Btk\\",\\"https://lh7-us.googleusercontent.com/3Q3897mcnata_otTB57AP_TcttNaiJVd2QUXTMgMApwIaRz9-OsPliUZeCKjbbWbDjxAbACmcM2dk-Xyuuc0PwJusJAQs0EKLzUjntDriI7TTmc2ZhPAYsglS362Du793_lXxan6Ww_BVFu5kXR7Qa0\\"],\\"datePublished\\":\\"2023-11-03T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Julia Gustafsson\\"}]}"]],"date":"2023-11-03T00:00:00.000Z","isOriginal":false,"author":"Julia Gustafsson","cover":"https://freecodecamp.org/news/content/images/size/w2000/2023/11/jpastreamer_featureimage_update.png"},"headers":[{"level":2,"title":"Running the Debugger with Quarkus Dev Mode","slug":"running-the-debugger-with-quarkus-dev-mode","link":"#running-the-debugger-with-quarkus-dev-mode","children":[]},{"level":2,"title":"Building Your Application","slug":"building-your-application","link":"#building-your-application","children":[{"level":3,"title":"Quarkus JIT Build via OpenJDK","slug":"quarkus-jit-build-via-openjdk","link":"#quarkus-jit-build-via-openjdk","children":[]},{"level":3,"title":"Quarkus Native Build via GraalVM","slug":"quarkus-native-build-via-graalvm","link":"#quarkus-native-build-via-graalvm","children":[]}]},{"level":2,"title":"Resources","slug":"resources","link":"#resources","children":[]}],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.34,"words":1001},"filePathRelative":"freecodecamp.org/get-started-with-quarkus-and-jpastreamer-2/others.md","localizedDate":"2023년 11월 3일","excerpt":"\\n","copyright":{"author":"Julia Gustafsson"}}');export{X as comp,F as data};
