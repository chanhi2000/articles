import{_ as m}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as g,b as e,t as v,e as n,n as f,g as k,w as s,d as a,a as b,f as i,r as c,o as y}from"./app-BgNevrm5.js";const _={},w={id:"frontmatter-title-관련",tabindex:"-1"},x={class:"header-anchor",href:"#frontmatter-title-관련"},j={class:"table-of-contents"},S=e("hr",null,null,-1),A={href:"https://facebook.github.io/react/",target:"_blank",rel:"noopener noreferrer"},R=e("p",null,[a("What makes React Native different from other frameworks such as "),e("a",{href:"http://phonegap.com/",target:"_blank",rel:"noopener noreferrer"},"PhoneGap (Apache Cordova)"),a(" or "),e("a",{href:"http://www.appcelerator.com/mobile-app-development-products/",target:"_blank",rel:"noopener noreferrer"},"Appcelerator Titanium"),a(", that use JavaScript to create iOS apps?")],-1),N=e("ol",null,[e("li",null,"(Unlike PhoneGap) with React Native your code may be written in JavaScript but the app’s UI is fully native. It doesn’t have the drawbacks typically associated with a hybrid HTML5 app."),e("li",null,"Additionally (unlike Titanium), React introduces a novel, radical and highly functional approach to constructing user interfaces. Your UI is simply a function of the current app state.")],-1),T={href:"http://facebook.github.io/react/",target:"_blank",rel:"noopener noreferrer"},I=i('<p>The community has even added tools such as <a href="https://expo.io/" target="_blank" rel="noopener noreferrer">Expo</a> and <a href="https://github.com/react-community/create-react-native-app" target="_blank" rel="noopener noreferrer">Create React Native App</a> to help you quickly build React Native apps without having to touch Xcode or Android Studio!</p><p>While you can write React Native apps for iOS and Android, this tutorial only covers Android. You can also check out our tutorial focused on <a href="https://kodeco.com/485-react-native-tutorial-building-ios-apps-with-javascript" target="_blank" rel="noopener noreferrer">React Native for iOS</a>.</p><figure><img src="https://koenig-media.raywenderlich.com/uploads/2017/11/app_overview.png" alt="The tutorial takes you through the process of building an Android app for searching UK property listings" width="240" tabindex="0" loading="lazy"><figcaption>The tutorial takes you through the process of building an Android app for searching UK property listings</figcaption></figure><p>Don’t worry if you’ve never written any JavaScript or used the CSS-like properties you’ll see. This tutorial will guide you through every step and provide resources where you can learn more.</p><p>Ready to get going? Read on!</p><div class="hint-container tip"><p class="hint-container-title">Note</p><p>We also have an <a href="https://www.raywenderlich.com/165140/react-native-tutorial-building-ios-android-apps-javascript" target="_blank" rel="noopener noreferrer">iOS version of this tutorial</a> that you may be interested in.</p></div><hr><h2 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started"><span>Getting Started</span></a></h2><h3 id="node-and-java-development-kit" tabindex="-1"><a class="header-anchor" href="#node-and-java-development-kit"><span>Node and Java Development Kit</span></a></h3>',9),J={href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},C=e("p",null,[a("First install Homebrew using the instructions on the "),e("a",{href:"http://brew.sh/",target:"_blank",rel:"noopener noreferrer"},"Homebrew website"),a(". Then install Node.js by executing the following in Terminal:")],-1),P=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[a("brew "),e("span",{class:"token function"},"install"),a(),e("span",{class:"token function"},"node")]),a(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1),D=e("p",null,[a("Next, use "),e("code",null,"homebrew"),a(" to install "),e("a",{href:"https://facebook.github.io/watchman/",target:"_blank",rel:"noopener noreferrer"},"watchman"),a(", a file watcher from Facebook:")],-1),B=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[a("brew "),e("span",{class:"token function"},"install"),a(" watchman")]),a(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1),F=e("p",null,"This is used by React Native to figure out when your code changes and rebuild accordingly. It’s like having Android Studio do a build each time you save your file.",-1),q=e("p",null,[a("Finally, "),e("a",{href:"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html",target:"_blank",rel:"noopener noreferrer"},"download and install JDK 8 or newer"),a(" if needed.")],-1),K=e("p",null,"First install Chocolatey using the instructions on the Chocolatey website.",-1),M=e("p",null,[a("Install Node.js if you don’t have it or have a version older than 4. Run the following command as Administrator (Right-click on Command Prompt and select "),e("code",null,"[“Run as Administrator”]"),a("):")],-1),E=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[a("choco "),e("span",{class:"token function"},"install"),a(),e("span",{class:"token parameter variable"},"-y"),a(" nodejs.install")]),a(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1),O=e("p",null,"Python is needed to run the React Native build scripts. Run the following command as Administrator if you don’t have Python 2:",-1),L=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[a("choco "),e("span",{class:"token function"},"install"),a(),e("span",{class:"token parameter variable"},"-y"),a(" python2")]),a(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1),U=e("p",null,"Run the following command as Administrator if you don’t have a JDK or have a version older than 8:",-1),Y=e("div",{class:"language-bash line-numbers-mode","data-highlighter":"prismjs","data-ext":"sh","data-title":"sh"},[e("pre",null,[e("code",null,[e("span",{class:"line"},[a("choco "),e("span",{class:"token function"},"install"),a(),e("span",{class:"token parameter variable"},"-y"),a(" jdk8")]),a(`
`),e("span",{class:"line"})])]),e("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[e("div",{class:"line-number"})])],-1),W=e("a",{href:"https://nodejs.org/en/download/package-manager/",target:"_blank",rel:"noopener noreferrer"},"installation instructions for your Linux distribution",-1),z=e("p",null,[a("Finally, "),e("a",{href:"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html",target:"_blank",rel:"noopener noreferrer"},"download and install JDK 8 or newer"),a(" if needed.")],-1),V=e("h3",{id:"react-native-cli",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#react-native-cli"},[e("span",null,"React Native CLI")])],-1),G={href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"},H=i(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> react-native-cli</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1),X={href:"https://bintray.com/bintray/jcenter",target:"_blank",rel:"noopener noreferrer"},Z=i(`<p>Next, install Yarn using the instructions on the <a href="https://yarnpkg.com/en/docs/install" target="_blank" rel="noopener noreferrer">Yarn website</a>. Yarn is a fast npm client. <!-- TODO: find yarn iconfont --></p><h3 id="android-development-environment" tabindex="-1"><a class="header-anchor" href="#android-development-environment"><span>Android Development Environment</span></a></h3><p>Set up your <a href="https://kodeco.com/478209-beginning-android-development-with-kotlin-part-one-installing-android-studio" target="_blank" rel="noopener noreferrer">Android development environment</a>, if haven’t done so. Make sure you can successfully run an Android app on an emulator. <!-- TODO: 작성 (/kodeco.com/478209-beginning-android-development-with-kotlin-part-one-installing-android-studi.md) --></p><p>React Native requires <code>Android 6.0 (Marshmallow)</code>. In Android Studio, go to <em>Tools\\Android\\SDK Manager</em>. Select <em>SDK Platforms</em> and check <em>Show Package Details</em>. Make sure that the following items are checked.</p><ul><li>Google APIs, Android 23</li><li>Android SDK Platform 23</li><li>Intel x86 Atom_64 System Image</li><li>Google APIs Intel x86 Atom_64 System Image</li></ul><figure><img src="https://koenig-media.raywenderlich.com/uploads/2017/11/as_sdk_platforms.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Next, select <em>SDK Tools</em> and check <em>Show Package Details</em>. Expand <em>Android SDK Build-Tools</em> and make sure <code>23.0.1</code> is selected.</p><p>Finally, tap <em>Apply</em> to install your selections.</p><p>When the Android components are finished installing, create a new emulator running SDK Platform 23.</p><h3 id="create-the-starter-app" tabindex="-1"><a class="header-anchor" href="#create-the-starter-app"><span>Create the Starter App</span></a></h3><p>Navigate to the folder where you would like to develop your app and run the following in your terminal:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">react-native init PropertyFinder</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This uses the CLI tool to create a starter project containing everything you need to build and run a React Native app.</p><p>In a terminal, run:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token builtin class-name">cd</span> PropertyFinder</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>In the created folders and files you will find a few items of note:</p><ul><li><strong>node_modules</strong> is a folder which contains the React Native framework</li><li><strong>index.js</strong> is the entry point created by the CLI tool</li><li><strong>App.js</strong> is the skeletal app created by the CLI tool</li><li><strong>android</strong> is a folder containing an Android project and the code required to <em>bootstrap</em> your application</li><li><strong>ios</strong> is a folder containing iOS-related code, which you won’t be touching in this tutorial.</li></ul><p>Start your Android emulator running SDK 23 if it isn’t running.</p><p>Run the following command in a terminal:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">react-native run-android</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><figure><img src="https://koenig-media.raywenderlich.com/uploads/2017/11/emulator_starter.png" alt="The emulator will display the following" tabindex="0" loading="lazy"><figcaption>The emulator will display the following</figcaption></figure><p>If you receive an error related to “SDK location not found”, then perform the following steps:</p>`,22),$=e("code",null,"android/",-1),Q=e("code",null,"local.properties",-1),ee=i(`<div class="language-properties line-numbers-mode" data-highlighter="prismjs" data-ext="properties" data-title="properties"><pre><code><span class="line"><span class="token key attr-name">sdk.dir</span> <span class="token punctuation">=</span> <span class="token value attr-value">{PATH TO ANDROID SDK}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1),ae=e("code",null,"/Users/USERNAME/Library/Android/sdk",-1),ne=e("p",null,"You might also have noticed that a terminal window has popped up, displaying something like this:",-1),te=e("figure",null,[e("img",{src:"https://koenig-media.raywenderlich.com/uploads/2017/11/terminal_metro.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),se={href:"https://github.com/facebook/metro-bundler",target:"_blank",rel:"noopener noreferrer"},oe=e("code",null,"facebook/metro-bundler",-1),ie=i(`<p>Don’t close the terminal window; just keep it running in the background. If you do close it by mistake, simply run the following in terminal:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">react-native start</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,2),le={class:"hint-container note"},re=e("p",{class:"hint-container-title"},"Note",-1),ce={href:"http://www.sublimetext.com",target:"_blank",rel:"noopener noreferrer"},pe=e("a",{href:"https://atom.io",target:"_blank",rel:"noopener noreferrer"},"Atom",-1),de=e("a",{href:"http://brackets.io",target:"_blank",rel:"noopener noreferrer"},"Brackets",-1),ue=e("hr",null,null,-1),he=e("h2",{id:"react-native-basics",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#react-native-basics"},[e("span",null,"React Native Basics")])],-1),me=e("p",null,"In this section, you’ll learn React Native basics as you begin working on PropertyFinder.",-1),ge=e("code",null,"App.js",-1),ve=i(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span> <span class="token comment">// 1</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>Platform<span class="token punctuation">,</span> StyleSheet<span class="token punctuation">,</span> Text<span class="token punctuation">,</span> View<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-native&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> instructions <span class="token operator">=</span> Platform<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span></span>
<span class="line"></span>
<span class="line">type Props <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span><span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token comment">// 3</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> styles <span class="token operator">=</span> StyleSheet<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Let’s go through the code step-by-step:</p><ol><li>Imports the required modules.</li><li>Sets up a platform-specific display message.</li><li>Defines the component that represents the UI.</li><li>Creates a style object that controls the component’s layout and appearance.</li></ol><p>Take a closer look at this import statement:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Component <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This uses the ECMAScript 6 (ES6) import syntax to load the <code>react</code> module and assign it to a variable called <code>React</code>. This is roughly equivalent to importing libraries in Android. It also uses what’s called a <strong>destructuring assignment</strong> to bring in the <code>Component</code> object. Destructuring lets you extract multiple object properties and assign them to variables using a single statement.</p>`,6),fe={class:"hint-container note"},ke=e("p",{class:"hint-container-title"},"Note",-1),be={href:"http://2ality.com/2014/09/es6-modules-final.html",target:"_blank",rel:"noopener noreferrer"},ye={href:"https://babeljs.io",target:"_blank",rel:"noopener noreferrer"},_e=e("code",null,"App.js",-1),we=i(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">App</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span><span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This defines a class which extends a React <code>Component</code>. The <code>export default</code> class modifier makes the class “public”, allowing it to be used in other files.</p><p>Open <strong>index.js</strong> and take a look at the entry point file:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>AppRegistry<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-native&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">&#39;./App&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span>name <span class="token keyword">as</span> appName<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./app.json&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">AppRegistry<span class="token punctuation">.</span><span class="token function">registerComponent</span><span class="token punctuation">(</span>appName<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> App<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This registers the imported component that serves as the app’s entry point.</p><p>It’s time to start building your app.</p>`,6),xe=e("code",null,"App.js",-1),je=i(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token string">&#39;use strict&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This enables <strong>Strict Mode</strong>, which adds improved error handling and disables some less-than-ideal JavaScript language features. In simple terms, it makes JavaScript better!</p><p>Inside the <code>App</code> class replace <code>render()</code> with the following:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>Text<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">style</span><span class="token operator">:</span> styles<span class="token punctuation">.</span>description<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&quot;Search for houses to buy!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>App</code> extends <code>React.Component</code>, the basic building block of the React UI. Components contain immutable properties, mutable state variables and expose a method for rendering. Your current application is quite simple and only requires a render method.</p><p>React Native components are not Android view classes; instead they are a lightweight equivalent. The framework takes care of transforming the tree of React components into the required native UI.</p><p>Next, replace the <code>const styles</code> statement with the following:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> styles <span class="token operator">=</span> StyleSheet<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#656565&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">65</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),Se={href:"https://developer.mozilla.org/en-US/docs/Web/CSS",target:"_blank",rel:"noopener noreferrer"},Ae=e("p",null,[a("Then, get rid of the "),e("code",null,"instructions"),a(" assignment code block as you no longer need it.")],-1),Re=e("code",null,"App.js",-1),Ne=e("figure",null,[e("img",{src:"https://koenig-media.raywenderlich.com/uploads/2017/11/emulator_search_text.png",alt:"Double tap <kbd>R</kbd> on your keyboard, and you’ll see your fledgling property search app starting to take shape",tabindex:"0",loading:"lazy"}),e("figcaption",null,[a("Double tap "),e("kbd",null,"R"),a(" on your keyboard, and you’ll see your fledgling property search app starting to take shape")])],-1),Te=e("p",null,"That’s a JavaScript application running in the emulator, rendering a native UI, without a browser in sight!",-1),Ie=e("code",null,"[Tools\\Android\\Layout Inspector]",-1),Je=e("code",null,"[Show All Proceses]",-1),Ce=e("strong",null,"com.propertyfinder",-1),Pe=e("code",null,"[OK]",-1),De=e("figure",null,[e("img",{src:"https://koenig-media.raywenderlich.com/uploads/2017/11/as_select_process.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),Be=e("p",null,[a("You will see no "),e("code",null,"WebView"),a(" instances anywhere!")],-1),Fe=e("figure",null,[e("img",{src:"https://koenig-media.raywenderlich.com/uploads/2017/11/as_layout_inspector.png",alt:"Your text is being displayed in a view called ",tabindex:"0",loading:"lazy"}),e("figcaption",null,[a("Your text is being displayed in a view called "),e("code",null,"ReactTextView")])],-1),qe={href:"https://github.com/facebook/react-native/find/master",target:"_blank",rel:"noopener noreferrer"},Ke=e("code",null,"facebook/react-native",-1),Me=e("code",null,"ReactTextView.java",-1),Ee=e("code",null,"ReactTextView",-1),Oe=e("code",null,"TextView",-1),Le=e("code",null,"[MainActivity.java]",-1),Ue=e("code",null,"[MainApplication.java]",-1),Ye=e("code",null,"android/app/src/main/java/com/propertyfinder",-1),We=i(`<p><code>MainApplication</code> sets up a <code>ReactNativeHost</code> which in turn creates a <code>ReactInstanceManager</code>. The instance manager handles the communication between JavaScript and native Android.</p><p><code>MainActivity</code> extends <code>ReactActivity</code> which creates a <code>ReactRootView</code> when launched. <code>ReactRootView</code> uses the instance manager to start the JavaScript application. It also renders the <code>App</code> component to set the Activity’s content view.</p><p>The terminal window that was opened when you ran this application started a packager and server that allows your JavaScript code to be fetched, by default on port 8081. For example:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line">http://localhost:8081/index.bundle?platform<span class="token operator">=</span>android</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Open this URL in your browser; you’ll see the JavaScript code for your app. You can find your “Search for houses to buy!” description code embedded among the React Native framework.</p><p>When your app starts, this code is loaded and executed by the JavaScriptCore library. In the case of your application, it loads the <code>App</code> component, then constructs the native Android view.</p><hr><h2 id="using-jsx" tabindex="-1"><a class="header-anchor" href="#using-jsx"><span>Using JSX</span></a></h2><p>Your current application uses <code>React.createElement</code> to construct the simple UI for your application, which React turns into the native equivalent. While your JavaScript code is perfectly readable in its present form, a more complex UI with nested elements would rapidly become quite a mess.</p>`,9),ze=e("code",null,"App.js",-1),Ve=e("code",null,"render",-1),Ge=i(`<div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx" data-title="jsx"><pre><code><span class="line"><span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>description<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Search for houses to buy! (Again)</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,1),He={href:"http://facebook.github.io/react/docs/jsx-in-depth.html",target:"_blank",rel:"noopener noreferrer"},Xe=e("code",null,"App.js",-1),Ze=e("figure",null,[e("img",{src:"https://koenig-media.raywenderlich.com/uploads/2017/11/emulator_jsx.png",alt:"Tap <kbd>R</kbd> twice, and you’ll see your application refresh to display the updated message",tabindex:"0",loading:"lazy"}),e("figcaption",null,[a("Tap "),e("kbd",null,"R"),a(" twice, and you’ll see your application refresh to display the updated message")])],-1),$e=e("p",null,"Re-running a React Native application is really as simple as refreshing a web browser! Note that this will only reflect changes made to your JavaScript files – native code or resource changes will require you to restart the packager.",-1),Qe=e("p",null,"You can even skip having to refresh the app by enabling live reload.",-1),ea=e("img",{src:"https://koenig-media.raywenderlich.com/uploads/2017/11/emulator_enable_live_reload.png",alt:'Press <kbd>Cmd</kbd>+<kbd>m</kbd> for Mac or <kbd>Ctrl</kbd>+<kbd>m</kbd> for <FontIcon icon="fa-brands fa-windows"/>Windows/<FontIcon icon="fa-brands fa-linux"/>Linux in the emulator then select Enable Live Reload',tabindex:"0",loading:"lazy"},null,-1),aa=e("kbd",null,"Cmd",-1),na=e("kbd",null,"m",-1),ta=e("kbd",null,"Ctrl",-1),sa=e("kbd",null,"m",-1),oa=e("strong",null,"Enable Live Reload",-1),ia=e("code",null,"App.js",-1),la=e("code",null,"render",-1),ra=i(`<div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx" data-title="jsx"><pre><code><span class="line"><span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Text</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>description<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Search for houses to buy!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Text</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Save your changes.</p><figure><img src="https://koenig-media.raywenderlich.com/uploads/2017/11/emulator_live_reload_test.png" alt="Note that the emulator automatically refreshes to reflect your changes" tabindex="0" loading="lazy"><figcaption>Note that the emulator automatically refreshes to reflect your changes</figcaption></figure><hr><h2 id="adding-navigation" tabindex="-1"><a class="header-anchor" href="#adding-navigation"><span>Adding Navigation</span></a></h2>`,5),ca=i('<hr><h2 id="building-out-the-search-page" tabindex="-1"><a class="header-anchor" href="#building-out-the-search-page"><span>Building out the Search Page</span></a></h2><hr><h2 id="styling-with-flexbox" tabindex="-1"><a class="header-anchor" href="#styling-with-flexbox"><span>Styling with Flexbox</span></a></h2><hr><h2 id="handling-assets" tabindex="-1"><a class="header-anchor" href="#handling-assets"><span>Handling Assets</span></a></h2><hr><h2 id="adding-component-state" tabindex="-1"><a class="header-anchor" href="#adding-component-state"><span>Adding Component State</span></a></h2><hr><h2 id="initiating-a-search" tabindex="-1"><a class="header-anchor" href="#initiating-a-search"><span>Initiating a Search</span></a></h2><hr><h2 id="performing-an-api-request" tabindex="-1"><a class="header-anchor" href="#performing-an-api-request"><span>Performing an API Request</span></a></h2><hr><h2 id="displaying-the-results" tabindex="-1"><a class="header-anchor" href="#displaying-the-results"><span>Displaying the Results</span></a></h2><hr><h2 id="a-touch-of-style" tabindex="-1"><a class="header-anchor" href="#a-touch-of-style"><span>A Touch of Style</span></a></h2><hr><h2 id="where-to-go-from-here" tabindex="-1"><a class="header-anchor" href="#where-to-go-from-here"><span>Where To Go From Here?</span></a></h2>',18),pa={href:"https://koenig-media.raywenderlich.com/uploads/2018/01/PropertyFinder-final-v2.zip",target:"_blank",rel:"noopener noreferrer"},da=i('<p>As a challenge, try showing a property’s details when the user selects one from the search list. You can check out <a href="https://koenig-media.raywenderlich.com/uploads/2018/01/PropertyFinder-challenge-v2.zip" target="_blank" rel="noopener noreferrer">the challenge solution</a> if you get stuck.</p><div class="hint-container tip"><p class="hint-container-title">Note</p><p>Before opening the finished project or the challenge solution, first run <code>yarn</code> in terminal in the root folder of the project.</p></div><p>Check out the <a href="http://facebook.github.io/react-native/" target="_blank" rel="noopener noreferrer">React Native’s source code</a> if you’re curious. I suggest taking a look at this <a href="https://babeljs.io/learn-es2015/" target="_blank" rel="noopener noreferrer">ES6 resource</a> to continue brushing up on modern JavaScript.</p><p>You may also want to check out the equivalent tutorial for building <a href="https://kodeco.com/485-react-native-tutorial-building-ios-apps-with-javascript" target="_blank" rel="noopener noreferrer">React Native apps on iOS</a>.</p><p>If you’re a web developer, you’ve seen how to use JavaScript to easily create a native app. If you’re a native app developer, you’ve gained some appreciation for React Native’s fast iteration cycle. Whether you decide to use React Native in a future app or simply stick with native Android, I hope you’ve learned some interesting principles to apply to your next project.</p><p>If you have any questions or comments on this React Native tutorial, feel free to join the discussion in the forums below!</p>',6);function ua(p,ha){const d=c("VPCard"),o=c("router-link"),u=c("SiteInfo"),t=c("FontIcon"),h=c("Tabs");return y(),g("div",null,[e("h1",w,[e("a",x,[e("span",null,v(p.$frontmatter.title)+" 관련",1)])]),n(d,f(k({title:"React.js > Article(s)",desc:"Article(s)",link:"/programming/js-react/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),e("nav",j,[e("ul",null,[e("li",null,[n(o,{to:"#getting-started"},{default:s(()=>[a("Getting Started")]),_:1}),e("ul",null,[e("li",null,[n(o,{to:"#node-and-java-development-kit"},{default:s(()=>[a("Node and Java Development Kit")]),_:1})]),e("li",null,[n(o,{to:"#react-native-cli"},{default:s(()=>[a("React Native CLI")]),_:1})]),e("li",null,[n(o,{to:"#android-development-environment"},{default:s(()=>[a("Android Development Environment")]),_:1})]),e("li",null,[n(o,{to:"#create-the-starter-app"},{default:s(()=>[a("Create the Starter App")]),_:1})])])]),e("li",null,[n(o,{to:"#react-native-basics"},{default:s(()=>[a("React Native Basics")]),_:1})]),e("li",null,[n(o,{to:"#using-jsx"},{default:s(()=>[a("Using JSX")]),_:1})]),e("li",null,[n(o,{to:"#adding-navigation"},{default:s(()=>[a("Adding Navigation")]),_:1})]),e("li",null,[n(o,{to:"#building-out-the-search-page"},{default:s(()=>[a("Building out the Search Page")]),_:1})]),e("li",null,[n(o,{to:"#styling-with-flexbox"},{default:s(()=>[a("Styling with Flexbox")]),_:1})]),e("li",null,[n(o,{to:"#handling-assets"},{default:s(()=>[a("Handling Assets")]),_:1})]),e("li",null,[n(o,{to:"#adding-component-state"},{default:s(()=>[a("Adding Component State")]),_:1})]),e("li",null,[n(o,{to:"#initiating-a-search"},{default:s(()=>[a("Initiating a Search")]),_:1})]),e("li",null,[n(o,{to:"#performing-an-api-request"},{default:s(()=>[a("Performing an API Request")]),_:1})]),e("li",null,[n(o,{to:"#displaying-the-results"},{default:s(()=>[a("Displaying the Results")]),_:1})]),e("li",null,[n(o,{to:"#a-touch-of-style"},{default:s(()=>[a("A Touch of Style")]),_:1})]),e("li",null,[n(o,{to:"#where-to-go-from-here"},{default:s(()=>[a("Where To Go From Here?")]),_:1})])])]),S,n(u,{name:"React Native Tutorial - Building Android Apps with JavaScript",desc:"In this React Native tutorial you’ll learn how to build native apps based on the hugely popular React JavaScript library, with a focus on Android.",url:"https://kodeco.com/247-react-native-tutorial-building-android-apps-with-javascript",logo:"https://assets.carolus.kodeco.com/assets/murakami/category-icons/category-tools-libraries-android-ac31fd227119039e3e4b8fe5b5ca86abdf928764640b62fe05286565f238b802.svg",preview:"https://koenig-media.raywenderlich.com/uploads/2018/01/React-twitter-4.png"}),e("p",null,[a("In this React Native tutorial you’ll learn how to build native apps based on the hugely popular "),e("a",A,[n(t,{icon:"fa-brands fa-react"}),a("React")]),a(" JavaScript library.")]),R,N,e("p",null,[a("React Native brings the "),e("a",T,[n(t,{icon:"fa-brands fa-react"}),a("React")]),a(" paradigm to mobile app development. It’s goal isn’t to write the code once and run it on any platform. The goal is to learn-once (the React way) and write-anywhere. An important distinction to make.")]),I,e("p",null,[a("React Native uses "),e("a",J,[n(t,{icon:"fa-brands fa-node"}),a("Node.js")]),a(", a JavaScript runtime, to build your JavaScript code. React Native also requires a recent version of the Java SE Development Kit (JDK) to run on Android. Follow the instructions for your system to make sure you install the required versions.")]),n(h,{id:"60",data:[{id:'<FontIcon icon="iconfont icon-macos"/>MacOS'},{id:'<FontIcon icon="fa-brands fa-windows"/>Windows'},{id:'<FontIcon icon="fa-brands fa-linux"/>Linux'}]},{title0:s(({value:l,isActive:r})=>[n(t,{icon:"iconfont icon-macos"}),a("MacOS")]),title1:s(({value:l,isActive:r})=>[n(t,{icon:"fa-brands fa-windows"}),a("Windows")]),title2:s(({value:l,isActive:r})=>[n(t,{icon:"fa-brands fa-linux"}),a("Linux")]),tab0:s(({value:l,isActive:r})=>[C,P,D,B,F,q]),tab1:s(({value:l,isActive:r})=>[K,M,E,O,L,U,Y]),tab2:s(({value:l,isActive:r})=>[e("p",null,[a("Install "),n(t,{icon:"fa-brands fa-node"}),a("Node.js by following the "),W,a(". You will want to install Node.js version 6 or newer.")]),z]),_:1}),V,e("p",null,[a("Use "),e("a",G,[n(t,{icon:"fa-brands fa-npm"}),a("Node Package Manager")]),a(" (or npm) to install the React Native Command Line Interface (CLI) tool. In your terminal (Terminal or Command Prompt or shell) type:")]),H,e("p",null,[a("npm fetches the CLI tool and installs it globally; npm is similar in function to "),e("a",X,[n(t,{icon:"fas fa-globe"}),a("JCenter")]),a(" and is packaged with Node.js.")]),Z,e("ul",null,[e("li",null,[a("Go to the "),n(t,{icon:"fas fa-folder-open"}),$,a(" directory of your react-native project")]),e("li",null,[a("Create a file called "),n(t,{icon:"fas fa-file-lines"}),Q,a(" with this line:")])]),ee,e("p",null,[a("For example, on macOS, the SDK path will look something like "),n(t,{icon:"fas fa-folder-open"}),ae,a(".")]),ne,te,e("p",null,[a("This is "),e("a",se,[a("Metro Bundler ("),n(t,{icon:"iconfont icon-github"}),oe,a(")")]),a(", the React Native JavaScript bundler running under Node.js. You’ll find out what it does shortly.")]),ie,e("div",le,[re,e("p",null,[a("You’ll be mostly writing JavaScript code for this React Native tutorial so no need to use Android Studio as your editor. I use "),e("a",ce,[n(t,{icon:"iconfont icon-subl"}),a("Sublime Text")]),a(", which is a cheap and versatile editor, but "),pe,a(", "),de,a(" or any other lightweight editor will do the job.")])]),ue,he,me,e("p",null,[a("Open "),n(t,{icon:"fa-brands fa-js"}),ge,a(" in your text editor of choice and take a look at the structure of the code in the file:")]),ve,e("div",fe,[ke,e("p",null,[a("For more information about ES6 modules I’d recommend reading "),e("a",be,[n(t,{icon:"fas fa-globe"}),a("this blog post by Dr. Axel Rauschmayer")]),a(".")])]),e("p",null,[a("ES6 is a much nicer way to write JavaScript, supporting features like default parameters, classes, arrow functions, and destructuring assignments. Not all browsers support ES6. React Native uses a tool called "),e("a",ye,[n(t,{icon:"fas fa-globe"}),a("Babel")]),a(" to automatically translate modern JavaScript into compatible legacy JavaScript where necessary.")]),e("p",null,[a("Back to "),n(t,{icon:"fa-brands fa-js"}),_e,a(", check out the class definition:")]),we,e("p",null,[a("In "),n(t,{icon:"fa-brands fa-js"}),xe,a(", add the following at the top of the file, just before the import statements:")]),je,e("p",null,[a("This defines a single style that you’ve applied to the description text. If you’ve done any web development before, you’ll probably recognize those property names. The React Native StyleSheet class used to style the application UI is similar to the "),e("a",Se,[n(t,{icon:"fa-brands fa-firefox"}),a("Cascading Style Sheets (CSS)")]),a(" used on the Web.")]),Ae,e("p",null,[a("Save your changes to "),n(t,{icon:"fa-brands fa-js"}),Re,a(" and return to the emulator.")]),Ne,Te,e("p",null,[a("Still don’t trust me? Verify it for yourself: within Android Studio, select "),n(t,{icon:"iconfont icon-select"}),Ie,a(". Then check "),n(t,{icon:"iconfont icon-select"}),Je,a(", select "),Ce,a(" and tap "),n(t,{icon:"iconfont icon-select"}),Pe,a(" to inspect the view hierarchy:")]),De,Be,Fe,e("p",null,[a("But what is that? Go to the "),e("a",qe,[a("project file finder ("),n(t,{icon:"iconfont icon-github"}),a(),Ke,a(")")]),a(" and enter "),n(t,{icon:"fa-brands fa-java"}),Me,a(" in the prompt. Select the result matching this file to view the source code. Notice "),Ee,a(" inherits directly from "),Oe,a(". Neat!")]),e("p",null,[a("Curious as to how it all works? Take a quick look at "),n(t,{icon:"fa-brands fa-java"}),Le,a(" and "),n(t,{icon:"fa-brands fa-java"}),Ue,a(" which you can find in "),n(t,{icon:"fas fa-folder-open"}),Ye,a(".")]),We,e("p",null,[a("Make sure the app is still running, then return to your text editor to edit "),n(t,{icon:"fa-brands fa-js"}),ze,a(". Modify the body of "),Ve,a(" to be the following:")]),Ge,e("p",null,[a("This is "),e("a",He,[n(t,{icon:"fa-brands fa-react"}),a("JSX")]),a(", or JavaScript syntax extension, which mixes HTML-like syntax directly in your JavaScript code; if you’re already a web developer, this should feel rather familiar. You’ll use JSX throughout this article.")]),e("p",null,[a("Save your changes to "),n(t,{icon:"fa-brands fa-js"}),Xe,a(" and return to the emulator.")]),Ze,$e,Qe,e("figure",null,[ea,e("figcaption",null,[a("Press "),aa,a("+"),na,a(" for Mac or "),ta,a("+"),sa,a(" for "),n(t,{icon:"fa-brands fa-windows"}),a("Windows/"),n(t,{icon:"fa-brands fa-linux"}),a("Linux in the emulator then select "),oa])]),e("p",null,[a("In "),n(t,{icon:"fa-brands fa-js"}),ia,a(", modify the "),la,a(" method’s body to the following:")]),ra,b(" TODO: 작성 "),ca,e("p",null,[a("Congratulations on completing this React Native tutorial! You can "),e("a",pa,[n(t,{icon:"iconfont icon-select"}),a("find the complete project")]),a(" here if you want to compare notes.")]),da])}const va=m(_,[["render",ua],["__file","247-react-native-tutorial-building-android-apps-with-javascript.html.vue"]]),fa=JSON.parse('{"path":"/kodeco.com/247-react-native-tutorial-building-android-apps-with-javascript.html","title":"React Native Tutorial - Building Android Apps with JavaScript","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"React Native Tutorial - Building Android Apps with JavaScript","description":"Article(s) > React Native Tutorial - Building Android Apps with JavaScript","icon":"fa-brands fa-react","category":["Java","Kotlin","Android","Gradle","Article(s)"],"tag":["blog","kodeco.com","java","kotiln","android","gradle","react","react-native"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > React Native Tutorial - Building Android Apps with JavaScript"},{"property":"og:description","content":"React Native Tutorial - Building Android Apps with JavaScript"},{"property":"og:url","content":"https://chanhi2000.github.io/crashcourse/kodeco.com/247-react-native-tutorial-building-android-apps-with-javascript.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/kodeco.com/247-react-native-tutorial-building-android-apps-with-javascript.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"React Native Tutorial - Building Android Apps with JavaScript"}],["meta",{"property":"og:description","content":"Article(s) > React Native Tutorial - Building Android Apps with JavaScript"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://koenig-media.raywenderlich.com/uploads/2018/01/React-twitter-4.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://koenig-media.raywenderlich.com/uploads/2018/01/React-twitter-4.png"}],["meta",{"name":"twitter:image:alt","content":"React Native Tutorial - Building Android Apps with JavaScript"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"kodeco.com"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"kotiln"}],["meta",{"property":"article:tag","content":"android"}],["meta",{"property":"article:tag","content":"gradle"}],["meta",{"property":"article:tag","content":"react"}],["meta",{"property":"article:tag","content":"react-native"}],["meta",{"property":"article:published_time","content":"2018-01-03T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"React Native Tutorial - Building Android Apps with JavaScript\\",\\"image\\":[\\"https://koenig-media.raywenderlich.com/uploads/2017/11/app_overview.png =240x\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/11/as_sdk_platforms.png\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/11/emulator_starter.png\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/11/terminal_metro.png\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/11/emulator_search_text.png\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/11/as_select_process.png\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/11/as_layout_inspector.png\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/11/emulator_jsx.png\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/11/emulator_enable_live_reload.png\\",\\"https://koenig-media.raywenderlich.com/uploads/2017/11/emulator_live_reload_test.png\\"],\\"datePublished\\":\\"2018-01-03T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"prev":"/programming/js-react/articles/README.md","date":"2018-01-03T00:00:00.000Z","isOriginal":false,"cover":"https://koenig-media.raywenderlich.com/uploads/2018/01/React-twitter-4.png"},"headers":[{"level":2,"title":"Getting Started","slug":"getting-started","link":"#getting-started","children":[{"level":3,"title":"Node and Java Development Kit","slug":"node-and-java-development-kit","link":"#node-and-java-development-kit","children":[]},{"level":3,"title":"React Native CLI","slug":"react-native-cli","link":"#react-native-cli","children":[]},{"level":3,"title":"Android Development Environment","slug":"android-development-environment","link":"#android-development-environment","children":[]},{"level":3,"title":"Create the Starter App","slug":"create-the-starter-app","link":"#create-the-starter-app","children":[]}]},{"level":2,"title":"React Native Basics","slug":"react-native-basics","link":"#react-native-basics","children":[]},{"level":2,"title":"Using JSX","slug":"using-jsx","link":"#using-jsx","children":[]},{"level":2,"title":"Adding Navigation","slug":"adding-navigation","link":"#adding-navigation","children":[]},{"level":2,"title":"Building out the Search Page","slug":"building-out-the-search-page","link":"#building-out-the-search-page","children":[]},{"level":2,"title":"Styling with Flexbox","slug":"styling-with-flexbox","link":"#styling-with-flexbox","children":[]},{"level":2,"title":"Handling Assets","slug":"handling-assets","link":"#handling-assets","children":[]},{"level":2,"title":"Adding Component State","slug":"adding-component-state","link":"#adding-component-state","children":[]},{"level":2,"title":"Initiating a Search","slug":"initiating-a-search","link":"#initiating-a-search","children":[]},{"level":2,"title":"Performing an API Request","slug":"performing-an-api-request","link":"#performing-an-api-request","children":[]},{"level":2,"title":"Displaying the Results","slug":"displaying-the-results","link":"#displaying-the-results","children":[]},{"level":2,"title":"A Touch of Style","slug":"a-touch-of-style","link":"#a-touch-of-style","children":[]},{"level":2,"title":"Where To Go From Here?","slug":"where-to-go-from-here","link":"#where-to-go-from-here","children":[]}],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":10.26,"words":3078},"filePathRelative":"kodeco.com/247-react-native-tutorial-building-android-apps-with-javascript.md","localizedDate":"2018년 1월 3일","excerpt":"\\n"}');export{va as comp,fa as data};
