import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as s,t as h,e as t,n as a,g as e,d as p,f as l,r as o,o as k}from"./app-BgNevrm5.js";const m={},w={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},g=s("nav",{class:"table-of-contents"},[s("ul")],-1),b=s("hr",null,null,-1),v=l(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in iOS 15</strong></p><p>SwiftUI has an <code>onSubmit()</code> modifier that can be attached to any view in your hierarchy, and will run a function of your choice when the user has finished entering text into a <code>TextField</code> or <code>SecureField</code>.</p><p>For example, we could ask the user to enter their password, then run some code when they press return:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> password <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">SecureField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Password&quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $password<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span>onSubmit <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Authenticating…&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-take-action-when-the-user-submits-a-textfield-1.zip",target:"_blank",rel:"noopener noreferrer"},x=l(`<p>For simple examples like that, both <code>TextField</code> and <code>SecureField</code> accept a dedicated <code>onCommit</code> parameter where we can attach our function directly to them. However, the advantage to using <code>onSubmit()</code> is that it captures all text values submitted in its context, which makes completing forms easier:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> username <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> password <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Form</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Username&quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $username<span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">SecureField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Password&quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $password<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span>onSubmit <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">guard</span> username<span class="token punctuation">.</span>isEmpty <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> password<span class="token punctuation">.</span>isEmpty <span class="token operator">==</span> <span class="token boolean">false</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span></span>
<span class="line">            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Authenticating…&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),_={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-take-action-when-the-user-submits-a-textfield-2.zip",target:"_blank",rel:"noopener noreferrer"},S={class:"hint-container details"},F=s("summary",null,"Similar solutions…",-1);function q(r,T){const n=o("VPCard"),i=o("FontIcon"),c=o("VidStack");return k(),d("div",null,[s("h1",w,[s("a",f,[s("span",null,h(r.$frontmatter.title)+" 관련",1)])]),t(n,a(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,b,t(n,a(e({title:"How to take action when the user submits a TextField | SwiftUI by Example",desc:"How to take action when the user submits a TextField",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-take-action-when-the-user-submits-a-textfield",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,s("blockquote",null,[s("p",null,[s("a",y,[t(i,{icon:"fas fa-file-zipper"}),p("Download this as an Xcode project")])])]),t(c,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-take-action-when-the-user-submits-a-textfield-1~dark.mp4"}),x,s("blockquote",null,[s("p",null,[s("a",_,[t(i,{icon:"fas fa-file-zipper"}),p("Download this as an Xcode project")])])]),t(c,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-take-action-when-the-user-submits-a-textfield-2~dark.mp4"}),s("details",S,[F,t(n,a(e({title:"How to make a TextField expand vertically as the user types | SwiftUI by Example",desc:"How to make a TextField expand vertically as the user types",link:"/hackingwithswift.com/swiftui/how-to-make-a-textfield-expand-vertically-as-the-user-types.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,a(e({title:"How to make buttons that repeat their action when pressed | SwiftUI by Example",desc:"How to make buttons that repeat their action when pressed",link:"/hackingwithswift.com/swiftui/how-to-make-buttons-that-repeat-their-action-when-pressed.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,a(e({title:"How to show an action sheet | SwiftUI by Example",desc:"How to show an action sheet",link:"/hackingwithswift.com/swiftui/how-to-show-an-action-sheet.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,a(e({title:"How to add custom swipe action buttons to a List row | SwiftUI by Example",desc:"How to add custom swipe action buttons to a List row",link:"/hackingwithswift.com/swiftui/how-to-add-custom-swipe-action-buttons-to-a-list-row.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,a(e({title:"How to dismiss the keyboard for a TextField | SwiftUI by Example",desc:"How to dismiss the keyboard for a TextField",link:"/hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-for-a-textfield.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const E=u(m,[["render",q],["__file","how-to-take-action-when-the-user-submits-a-textfield.html.vue"]]),U=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-take-action-when-the-user-submits-a-textfield.html","title":"How to take action when the user submits a TextField","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to take action when the user submits a TextField","description":"Article(s) > How to take action when the user submits a TextField","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to take action when the user submits a TextField"},{"property":"og:description","content":"How to take action when the user submits a TextField"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-take-action-when-the-user-submits-a-textfield.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-take-action-when-the-user-submits-a-textfield.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to take action when the user submits a TextField"}],["meta",{"property":"og:description","content":"Article(s) > How to take action when the user submits a TextField"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to take action when the user submits a TextField\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.1,"words":631},"filePathRelative":"hackingwithswift.com/swiftui/how-to-take-action-when-the-user-submits-a-textfield.md","excerpt":"\\n"}');export{E as comp,U as data};
