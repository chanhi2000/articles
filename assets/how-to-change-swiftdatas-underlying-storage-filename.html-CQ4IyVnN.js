import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as n,t as l,e as s,n as t,g as e,f as p,r,o as u}from"./app-BgNevrm5.js";const d={},m={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},h=n("nav",{class:"table-of-contents"},[n("ul")],-1),k=n("hr",null,null,-1),f=p(`<blockquote><p>Updated for Xcode 16</p></blockquote><p>When you use <code>modelContainer(for:)</code> you get a default configuration, which means SwiftData decides where your database is stored. That might be in your application support directory, but might also be in a shared location if you‚Äôre using app groups. However, if you want a <em>custom</em> location, you need to create a <code>ModelConfiguration</code> instance by hand, then use that to create your container.</p><p>For example, if you wanted to write to an exact file in your documents directory rather than the default location of default.store, you would use code like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@main</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">RecipeBookApp</span><span class="token punctuation">:</span> <span class="token class-name">App</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> container<span class="token punctuation">:</span> <span class="token class-name">ModelContainer</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">do</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">let</span> storeURL <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span>documentsDirectory<span class="token punctuation">.</span><span class="token function">appending</span><span class="token punctuation">(</span>path<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;database.sqlite&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">let</span> config <span class="token operator">=</span> <span class="token class-name">ModelConfiguration</span><span class="token punctuation">(</span>url<span class="token punctuation">:</span> storeURL<span class="token punctuation">)</span></span>
<span class="line">            container <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">ModelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Recipe</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> configurations<span class="token punctuation">:</span> config<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">fatalError</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Failed to configure SwiftData container.&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">Scene</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">WindowGroup</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span>container<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This kind of custom location is helpful for when you‚Äôre working with an existing database, or perhaps if you want to read or write the database directly ‚Äì something you <em>can</em> do if absolutely required, but should be done only with great caution.</p>`,5);function w(o,y){const a=r("VPCard");return u(),c("div",null,[n("h1",m,[n("a",g,[n("span",null,l(o.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),s(a,t(e({title:"SwiftData by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftdata/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),h,k,s(a,t(e({title:"How to change SwiftData‚Äôs underlying storage filename | SwiftData by Example",desc:"How to change SwiftData‚Äôs underlying storage filename",link:"https://hackingwithswift.com/quick-start/swiftdata/how-to-change-swiftdatas-underlying-storage-filename",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f])}const _=i(d,[["render",w],["__file","how-to-change-swiftdatas-underlying-storage-filename.html.vue"]]),S=JSON.parse('{"path":"/hackingwithswift.com/swiftdata/how-to-change-swiftdatas-underlying-storage-filename.html","title":"How to change SwiftData‚Äôs underlying storage filename","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to change SwiftData‚Äôs underlying storage filename","description":"Article(s) > How to change SwiftData‚Äôs underlying storage filename","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftdata","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to change SwiftData‚Äôs underlying storage filename"},{"property":"og:description","content":"How to change SwiftData‚Äôs underlying storage filename"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/how-to-change-swiftdatas-underlying-storage-filename.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/how-to-change-swiftdatas-underlying-storage-filename.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to change SwiftData‚Äôs underlying storage filename"}],["meta",{"property":"og:description","content":"Article(s) > How to change SwiftData‚Äôs underlying storage filename"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftdata"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2023-09-30T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to change SwiftData‚Äôs underlying storage filename\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-30T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2023-09-30T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.09,"words":327},"filePathRelative":"hackingwithswift.com/swiftdata/how-to-change-swiftdatas-underlying-storage-filename.md","localizedDate":"2023ÎÖÑ 9Ïõî 30Ïùº","excerpt":"\\n"}');export{_ as comp,S as data};
