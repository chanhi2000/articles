import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as e,t as d,e as a,n,g as i,f as c,r as l,o as p}from"./app-BgNevrm5.js";const h={},b={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},u=e("nav",{class:"table-of-contents"},[e("ul")],-1),w=e("hr",null,null,-1),m=c(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI provides two properties wrappers that use very similar names to provide wildly different functionality. No, I don&#39;t know why, either. However, I can at least explain to you what the difference is, so you&#39;re sure to always use the correct options.</p><p>The <code>@Binding</code> property wrapper is designed to let us read and write some external piece of data ‚Äì something that was created elsewhere, such as an <code>@State</code> property from a parent view. If you were to create a custom text editor view, for example, you&#39;d want to use <code>@Binding</code> to store access to the data you&#39;re writing, so that whichever parent view uses your text editor can say, ‚Äúhere is where you should store the user&#39;s text.‚Äù</p><p>In contrast, the <code>@Bindable</code> property wrapper allows us to get bindings from any property in an <code>@Observable</code> object, including all SwiftData model objects. If you create a local <code>@Observable</code> object using <code>@State</code>, you&#39;ll automatically be given bindings by the <code>@State</code> property wrapper. However, if you&#39;ve been passed an object without any bindings ‚Äì an object you <em>know</em> is <code>@Observable</code> ‚Äì then you can use <code>@Bindable</code> to create bindings for you.</p><p>If the distinction still seems fuzzy to you, think about the older <code>@ObservedObject</code> property wrapper from SwiftUI. If you made a view that had some kind of object as a property you wouldn&#39;t be able to make bindings to it, but if you marked it with <code>@ObservedObject</code> then you <em>would</em> get bindings.</p><p>The only real difference is that <code>@Bindable</code> is sometimes needed inside your view body, perhaps because you want to make the whole object bindable, or because you&#39;re inside a <code>List</code> or a <code>ForEach</code> loop and need to make individual items bindable.</p><p>If you can, it&#39;s preferable to use <code>@Bindable</code> directly on your property, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@Bindable</span> <span class="token keyword">var</span> user<span class="token punctuation">:</span> <span class="token class-name">User</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>However, that isn&#39;t possible in some situations, such as when you&#39;ve used <code>@Environment</code> already. For times like that, use <code>@Bindable</code> directly in your view body, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@Bindable</span> <span class="token keyword">var</span> user <span class="token operator">=</span> user</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,10);function g(o,y){const t=l("VPCard");return p(),r("div",null,[e("h1",b,[e("a",f,[e("span",null,d(o.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),a(t,n(i({title:"SwiftData by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftdata/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),u,w,a(t,n(i({title:"What's the difference between @Bindable and @Binding? | SwiftData by Example",desc:"What's the difference between @Bindable and @Binding?",link:"https://hackingwithswift.com/quick-start/swiftdata/whats-the-difference-between-bindable-and-binding",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),m])}const B=s(h,[["render",g],["__file","whats-the-difference-between-bindable-and-binding.html.vue"]]),_=JSON.parse(`{"path":"/hackingwithswift.com/swiftdata/whats-the-difference-between-bindable-and-binding.html","title":"What's the difference between @Bindable and @Binding?","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"What's the difference between @Bindable and @Binding?","description":"Article(s) > What's the difference between @Bindable and @Binding?","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftdata","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > What's the difference between @Bindable and @Binding?"},{"property":"og:description","content":"What's the difference between @Bindable and @Binding?"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/whats-the-difference-between-bindable-and-binding.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/whats-the-difference-between-bindable-and-binding.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"What's the difference between @Bindable and @Binding?"}],["meta",{"property":"og:description","content":"Article(s) > What's the difference between @Bindable and @Binding?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftdata"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2023-09-26T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"What's the difference between @Bindable and @Binding?\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-26T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2023-09-26T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.64,"words":492},"filePathRelative":"hackingwithswift.com/swiftdata/whats-the-difference-between-bindable-and-binding.md","localizedDate":"2023ÎÖÑ 9Ïõî 26Ïùº","excerpt":"\\n"}`);export{B as comp,_ as data};
