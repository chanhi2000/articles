import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as n,t as h,e as a,n as s,g as e,d as o,f as p,r as c,o as k}from"./app-BgNevrm5.js";const m={},w={id:"frontmatter-title-관련",tabindex:"-1"},b={class:"header-anchor",href:"#frontmatter-title-관련"},g=n("nav",{class:"table-of-contents"},[n("ul")],-1),f=n("hr",null,null,-1),v=p(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>Updated in iOS 15</strong></p><p>SwiftUI&#39;s button is similar to <code>UIButton</code>, except it&#39;s more flexible in terms of what content it shows and it uses a closure for its action rather than the old target/action system.</p><p>To create a button with a string title you would start with code like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Button title&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Button tapped!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-a-tappable-button-1.zip",target:"_blank",rel:"noopener noreferrer"},_=p(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-tappable-button-1~dark.png" alt="The words “Button title” in blue, indicating they are tappable." tabindex="0" loading="lazy"><figcaption>The words “Button title” in blue, indicating they are tappable.</figcaption></figure><p>For example, you might make a button that shows or hides some detail text when it&#39;s tapped:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> showDetails <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span><span class="token punctuation">(</span>alignment<span class="token punctuation">:</span> <span class="token punctuation">.</span>leading<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Show details&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                showDetails<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">if</span> showDetails <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;You should follow me on Twitter: @twostraws&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),q={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-a-tappable-button-2.zip",target:"_blank",rel:"noopener noreferrer"},x=p(`<p>The title inside the button can be any kind of view, so you can create an image button like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> showDetails <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Image tapped!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> label<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;sunset&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-a-tappable-button-3.zip",target:"_blank",rel:"noopener noreferrer"},B=p(`<p>Using a custom label is really helpful for times you want to increase the tappable area of a button, because you can apply padding to the label then use <code>contentShape(Rectangle())</code> or similar to make the whole area tappable.</p><p>For example, this adds 20 points of padding to a button&#39;s label, to ensure it&#39;s tappable in a much larger space than would otherwise be possible:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Button</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Button pressed&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span> label<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Press Me&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">contentShape</span><span class="token punctuation">(</span><span class="token class-name">Rectangle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),H={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-a-tappable-button-4.zip",target:"_blank",rel:"noopener noreferrer"},I=p(`<p>If you&#39;re targeting iOS 15 or later, you can also attach a <em>role</em> to your button that helps SwiftUI know what kind of styling should be attached to the button. For example, if we had a Delete button we might mark it with the <code>.destructive</code> role so SwiftUI can highlight it in red when it makes sense:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Delete&quot;</span></span><span class="token punctuation">,</span> role<span class="token punctuation">:</span> <span class="token punctuation">.</span>destructive<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Perform delete&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),j={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-a-tappable-button-1.zip",target:"_blank",rel:"noopener noreferrer"},z=n("figure",null,[n("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-tappable-button-5~dark.png",alt:"The word “Delete” in red.",tabindex:"0",loading:"lazy"}),n("figcaption",null,"The word “Delete” in red.")],-1),U=n("p",null,[o("There's also a "),n("code",null,".cancel"),o(" role, and again it gives SwiftUI that extra bit of context to present it appropriately.")],-1),D={class:"hint-container details"},T=n("summary",null,"Similar solutions…",-1);function V(r,E){const t=c("VPCard"),i=c("FontIcon"),l=c("VidStack");return k(),d("div",null,[n("h1",w,[n("a",b,[n("span",null,h(r.$frontmatter.title)+" 관련",1)])]),a(t,s(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,f,a(t,s(e({title:"How to create a tappable button | SwiftUI by Example",desc:"How to create a tappable button",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-create-a-tappable-button",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,n("blockquote",null,[n("p",null,[n("a",y,[a(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),_,n("blockquote",null,[n("p",null,[n("a",q,[a(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),a(l,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-tappable-button-2~dark.mp4"}),x,n("blockquote",null,[n("p",null,[n("a",S,[a(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),a(l,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-tappable-button-3~dark.mp4"}),B,n("blockquote",null,[n("p",null,[n("a",H,[a(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),a(l,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-tappable-button-4~dark.mp4"}),I,n("blockquote",null,[n("p",null,[n("a",j,[a(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),z,U,n("details",D,[T,a(t,s(e({title:"How to control the tappable area of a view using contentShape() | SwiftUI by Example",desc:"How to control the tappable area of a view using contentShape()",link:"/hackingwithswift.com/swiftui/how-to-control-the-tappable-area-of-a-view-using-contentshape.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,s(e({title:"How to fix a Form Picker or a NavigationLink that isn't tappable | SwiftUI by Example",desc:"How to fix a Form Picker or a NavigationLink that isn't tappable",link:"/hackingwithswift.com/swiftui/how-to-fix-a-form-picker-or-a-navigationlink-that-isnt-tappable.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,s(e({title:"How to disable the overlay color for images inside Button and NavigationLink | SwiftUI by Example",desc:"How to disable the overlay color for images inside Button and NavigationLink",link:"/hackingwithswift.com/swiftui/how-to-disable-the-overlay-color-for-images-inside-button-and-navigationlink.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,s(e({title:"How to show a menu when a button is pressed | SwiftUI by Example",desc:"How to show a menu when a button is pressed",link:"/hackingwithswift.com/swiftui/how-to-show-a-menu-when-a-button-is-pressed.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(t,s(e({title:"Customizing Button with ButtonStyle | SwiftUI by Example",desc:"Customizing Button with ButtonStyle",link:"/hackingwithswift.com/swiftui/customizing-button-with-buttonstyle.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const C=u(m,[["render",V],["__file","how-to-create-a-tappable-button.html.vue"]]),R=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-create-a-tappable-button.html","title":"How to create a tappable button","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to create a tappable button","description":"Article(s) > How to create a tappable button","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to create a tappable button"},{"property":"og:description","content":"How to create a tappable button"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-a-tappable-button.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-a-tappable-button.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to create a tappable button"}],["meta",{"property":"og:description","content":"Article(s) > How to create a tappable button"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-tappable-button-1~dark.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to create a tappable button\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-tappable-button-1~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-tappable-button-5~dark.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.87,"words":862},"filePathRelative":"hackingwithswift.com/swiftui/how-to-create-a-tappable-button.md","excerpt":"\\n"}');export{C as comp,R as data};
