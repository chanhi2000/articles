import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as s,t as d,e as n,n as t,g as e,d as o,f as l,r as c,o as g}from"./app-BgNevrm5.js";const k={},w={id:"frontmatter-title-관련",tabindex:"-1"},h={class:"header-anchor",href:"#frontmatter-title-관련"},m=s("nav",{class:"table-of-contents"},[s("ul")],-1),b=s("hr",null,null,-1),f=l(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>Updated in iOS 16</strong></p><p>SwiftUI&#39;s toggle lets users move between true and false states, just like <code>UISwitch</code> in UIKit.</p><p>For example, we could create a toggle that either shows a message or not depending on whether the toggle is enabled or not, but of course we <em>don&#39;t</em> want to have to track the state of the toggle by hand – we want SwiftUI to do that for us.</p><p>Instead we should define a <code>@State</code> Boolean property that will be used to store the current value of our toggle. We can then use that to show or hide other views as needed.</p><p>For example:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> showGreeting <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Show welcome message&quot;</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> $showGreeting<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">if</span> showGreeting <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello World!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),v={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-a-toggle-switch-1.zip",target:"_blank",rel:"noopener noreferrer"},y=l(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-toggle-switch-1~dark.png" alt="The words “Show welcome message” beside a green toggle which is turned on. Below is the text “Hello World!”." tabindex="0" loading="lazy"><figcaption>The words “Show welcome message” beside a green toggle which is turned on. Below is the text “Hello World!”.</figcaption></figure><p>I&#39;ve made that code so that a text view is returned only when <code>showGreeting</code> is true, which means the <code>VStack</code> will decrease in size when <code>showGreeting</code> is false – it doesn&#39;t have a second view in its stack.</p><figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-toggle-switch-2~dark.png" alt="The words “Show welcome message” beside a green toggle which is turned off. Below is nothing." tabindex="0" loading="lazy"><figcaption>The words “Show welcome message” beside a green toggle which is turned off. Below is nothing.</figcaption></figure><p>If you want, you can customize the color used to create your toggle switch by using the <code>toggleStyle()</code> modifier. This is helpful because the <code>Toggle</code> view doesn&#39;t work with <code>accentColor()</code>, so this is the only way to recolor it.</p><p>For example, this creates a red toggle:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> showGreeting <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Show welcome message&quot;</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> $showGreeting<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token class-name">SwitchToggleStyle</span><span class="token punctuation">(</span>tint<span class="token punctuation">:</span> <span class="token punctuation">.</span>red<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">if</span> showGreeting <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello World!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-a-toggle-switch-3.zip",target:"_blank",rel:"noopener noreferrer"},_=l(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-toggle-switch-3~dark.png" alt="The words “Show welcome message” beside a red toggle which is turned on. Below is the text “Hello World!”." tabindex="0" loading="lazy"><figcaption>The words “Show welcome message” beside a red toggle which is turned on. Below is the text “Hello World!”.</figcaption></figure><p>If you&#39;re targeting iOS 15 or later, you can configure your switch to appear like a button by specifying <code>.toggleStyle(.button)</code>. In this mode the button flips its tint color when its state is on:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isOn <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Filter&quot;</span></span><span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> $isOn<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">toggleStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>button<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">tint</span><span class="token punctuation">(</span><span class="token punctuation">.</span>mint<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-a-toggle-switch-1.zip",target:"_blank",rel:"noopener noreferrer"},q=l(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-toggle-switch-4~dark.png" alt="A mint green rounded rectangle with the text “Filter”." tabindex="0" loading="lazy"><figcaption>A mint green rounded rectangle with the text “Filter”.</figcaption></figure><figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-toggle-switch-5~dark.png" alt="A mint green text label reading “Filter”." tabindex="0" loading="lazy"><figcaption>A mint green text label reading “Filter”.</figcaption></figure><p>From iOS 16 onwards, it&#39;s also possible to bind a <code>Toggle</code> to an array of Booleans, which is helpful for times when you want to enable or disable several values all at once. For example, we could write some code to let the user subscribe to individual newsletters, or have one toggle to switch them all:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">EmailList</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> id<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">var</span> isSubscribed <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">var</span> lists <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">        <span class="token class-name">EmailList</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Monthly Updates&quot;</span></span><span class="token punctuation">,</span> isSubscribed<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token class-name">EmailList</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;News Flashes&quot;</span></span><span class="token punctuation">,</span> isSubscribed<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token class-name">EmailList</span><span class="token punctuation">(</span>id<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Special Offers&quot;</span></span><span class="token punctuation">,</span> isSubscribed<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Form</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Section</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">ForEach</span><span class="token punctuation">(</span>$lists<span class="token punctuation">)</span> <span class="token punctuation">{</span> $list <span class="token keyword">in</span></span>
<span class="line">                    <span class="token class-name">Toggle</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span>id<span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> $list<span class="token punctuation">.</span>isSubscribed<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Section</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Toggle</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Subscribe to all&quot;</span></span><span class="token punctuation">,</span> sources<span class="token punctuation">:</span> $lists<span class="token punctuation">,</span> isOn<span class="token punctuation">:</span> <span class="token punctuation">\\</span><span class="token punctuation">.</span>isSubscribed<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),T={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-a-toggle-switch-5.zip",target:"_blank",rel:"noopener noreferrer"},H={class:"hint-container details"},I=s("summary",null,"Similar solutions…",-1);function V(p,z){const a=c("VPCard"),i=c("FontIcon");return g(),u("div",null,[s("h1",w,[s("a",h,[s("span",null,d(p.$frontmatter.title)+" 관련",1)])]),n(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),m,b,n(a,t(e({title:"How to create a toggle switch | SwiftUI by Example",desc:"How to create a toggle switch",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-create-a-toggle-switch",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f,s("blockquote",null,[s("p",null,[s("a",v,[n(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),y,s("blockquote",null,[s("p",null,[s("a",S,[n(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),_,s("blockquote",null,[s("p",null,[s("a",x,[n(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),q,s("blockquote",null,[s("p",null,[s("a",T,[n(i,{icon:"fas fa-file-zipper"}),o("Download this as an Xcode project")])])]),s("details",H,[I,n(a,t(e({title:"Customizing Toggle with ToggleStyle | SwiftUI by Example",desc:"Customizing Toggle with ToggleStyle",link:"/hackingwithswift.com/swiftui/customizing-toggle-with-togglestyle.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to hide the label of a Picker, Stepper, Toggle, and more using labelsHidden() | SwiftUI by Example",desc:"How to hide the label of a Picker, Stepper, Toggle, and more using labelsHidden()",link:"/hackingwithswift.com/swiftui/how-to-hide-the-label-of-a-picker-stepper-toggle-and-more-using-labelshidden.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to automatically switch between HStack and VStack based on size class | SwiftUI by Example",desc:"How to automatically switch between HStack and VStack based on size class",link:"/hackingwithswift.com/swiftui/how-to-automatically-switch-between-hstack-and-vstack-based-on-size-class.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"Two-way bindings in SwiftUI | SwiftUI by Example",desc:"Two-way bindings in SwiftUI",link:"/hackingwithswift.com/swiftui/two-way-bindings-in-swiftui.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const F=r(k,[["render",V],["__file","how-to-create-a-toggle-switch.html.vue"]]),j=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-create-a-toggle-switch.html","title":"How to create a toggle switch","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to create a toggle switch","description":"Article(s) > How to create a toggle switch","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to create a toggle switch"},{"property":"og:description","content":"How to create a toggle switch"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-a-toggle-switch.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-a-toggle-switch.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to create a toggle switch"}],["meta",{"property":"og:description","content":"Article(s) > How to create a toggle switch"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-toggle-switch-1~dark.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to create a toggle switch\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-toggle-switch-1~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-toggle-switch-2~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-toggle-switch-3~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-toggle-switch-4~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-toggle-switch-5~dark.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.2,"words":960},"filePathRelative":"hackingwithswift.com/swiftui/how-to-create-a-toggle-switch.md","excerpt":"\\n"}');export{F as comp,j as data};
