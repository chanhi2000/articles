import{_ as m}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as v,b as n,t as b,e,n as d,g as k,d as s,w as a,f as i,r as c,o as f}from"./app-BgNevrm5.js";const y={},w={id:"frontmatter-title-관련",tabindex:"-1"},S={class:"header-anchor",href:"#frontmatter-title-관련"},_=n("hr",null,null,-1),A=i('<p>A while ago, a client asked me to help them create a special app for generating QR codes so users could receive payments.</p><p>What set this app apart was that instead of users entering a URL to generate a QR code, they would initiate a request through the app. Then a unique QR code would be generated which would be associated with their account details. The QR code would then be displayed on their screen while the payer scans the QR code using their mobile device&#39;s camera.</p><p>In this tutorial, you&#39;ll learn how to develop a custom QR code generator for URLs using Node.js and Next.js. I&#39;ll walk you through the process step by step, including setting up Azure Blob Storage to store the generated URLs. These URLs will then be displayed in the form of QR codes in your Next.js frontend application.</p><p>We&#39;ll build the backend of the application using <code>Node.js</code> and the <code>Express</code> framework, and the frontend (which interacts with the backend) with <code>Next.js</code>.</p><p>I&#39;ll also provide explanations on QR codes, the concept of <code>buffers</code> for handling binary data in Node.js, and how it is being used to stream the QR code image data to Azure Blob Storage.</p><p>So, let dive in.</p><h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites"><span>Prerequisites</span></a></h2>',7),R={href:"https://azure.microsoft.com/en-us/get-started/azure-portal",target:"_blank",rel:"noopener noreferrer"},x={class:"table-of-contents"},j=n("hr",null,null,-1),C=n("h2",{id:"what-is-a-qr-code",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#what-is-a-qr-code"},[n("span",null,"What is a QR Code?")])],-1),q={href:"https://investopedia.com/terms/q/quick-response-qr-code.asp",target:"_blank",rel:"noopener noreferrer"},N=n("p",null,"QR codes are extensively employed in digital payments, cryptocurrency, and transmitting web addresses to mobile devices. They can encode URLs, facilitating webpage access.",-1),z=n("p",null,[s("Now, let's delve into the process of programmatically generating QR codes. Today, I'll demonstrate this step-by-step. To begin, you'll set up an "),n("code",null,"Azure Blob Storage"),s(" instance in your "),n("code",null,"Azure Portal"),s(".")],-1),T=n("hr",null,null,-1),B=n("h2",{id:"how-to-set-up-azure-blob-storage",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#how-to-set-up-azure-blob-storage"},[n("span",null,"How to Set Up Azure Blob Storage")])],-1),I={href:"https://learn.microsoft.com/en-us/azure/storage/blobs/storage-blobs-overview",target:"_blank",rel:"noopener noreferrer"},Q=i('<p>Azure Blob Storage is designed to store large amounts of unstructured data, such as text or binary data, in the form of objects called blobs. If you are familiar with AWS, Azure Blob Storage is similar to an S3 bucket. Storage accounts are primarily accessed via REST API.</p><h3 id="step-1-create-a-storage-account" tabindex="-1"><a class="header-anchor" href="#step-1-create-a-storage-account"><span>Step 1: Create a storage account</span></a></h3><p>You can create your storage account by simply searching for Storage account in the search bar at the top of the Azure Portal.</p><figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-16.08.23.png" alt="Create Storage Accounts in Azure Portal" tabindex="0" loading="lazy"><figcaption>Create Storage Accounts in Azure Portal</figcaption></figure><p>You can then run through the steps to create your storage account. Just note that this name needs to be unique and it also needs to be all lower case – no spaces but it can include numbers.</p><figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-16.16.46.jpeg" alt="Create a New Resource Group" tabindex="0" loading="lazy"><figcaption>Create a New Resource Group</figcaption></figure><h3 id="step-2-create-a-container" tabindex="-1"><a class="header-anchor" href="#step-2-create-a-container"><span>Step 2: Create a container</span></a></h3><p>After creating your storage account, you can now create a <code>container</code>.</p><figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-16.44.16.jpeg" alt="Create a New Container" tabindex="0" loading="lazy"><figcaption>Create a New Container</figcaption></figure><p>When accessing blob storage with the <code>QR codes</code> stored in Azure Storage, the URL typically follows a structure like <code>https://&lt;storage_account_name&gt;.blob.core.windows.net/&lt;container_name&gt;/&lt;blob_name&gt;</code>.</p><p>Having a container allows us to structure the URLs in a meaningful and organized way, making it easier to manage and share the generated QR codes.</p><h3 id="step-3-obtain-azure-storage-connection-string" tabindex="-1"><a class="header-anchor" href="#step-3-obtain-azure-storage-connection-string"><span>Step 3: Obtain Azure Storage connection string</span></a></h3><p>In the <code>Security + networking</code> section, select &quot;Access keys.&quot;</p><p>Make sure to copy the connection string and save it somewhere as it&#39;s required to establish a secure connection between the Azure Storage account and the <code>Node.js</code> application.</p><figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-16.54.39.jpeg" alt="Obtain Access Key for the Container" tabindex="0" loading="lazy"><figcaption>Obtain Access Key for the Container</figcaption></figure><p>That concludes the discussion on Microsoft Azure Storage. I must say, I thoroughly enjoyed exploring and solving these challenges.</p><p>Next, you will be diving into coding, specifically around <code>Nodejs</code> and and then moving on to frontend development, where you&#39;ll be using <code>Next.js</code>.</p><hr><h2 id="node-js-qr-code" tabindex="-1"><a class="header-anchor" href="#node-js-qr-code"><span>Node.js QR Code</span></a></h2>',19),U=n("code",null,"Node.js",-1),O=n("code",null,"npm",-1),E={href:"https://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},L=i(`<p>Once you&#39;ve installed them, check if Node.js and npm are installed correctly by typing these commands in your terminal:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">node</span> <span class="token parameter variable">-v</span></span>
<span class="line"><span class="token function">npm</span> <span class="token parameter variable">-v</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,2),P={href:"https://github.com/ayowilfred95/azure-qr-code-generator",target:"_blank",rel:"noopener noreferrer"},G=n("code",null,"ayowilfred95/azure-qr-code-generator",-1),H=n("figure",null,[n("img",{src:"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-17.26.39--2-.jpeg",alt:"Github Repository Project",tabindex:"0",loading:"lazy"}),n("figcaption",null,"Github Repository Project")],-1),D={href:"https://code.visualstudio.com/download",target:"_blank",rel:"noopener noreferrer"},W=n("code",null,"server",-1),F=n("code",null,"frontend",-1),M=n("code",null,"server",-1),V=n("code",null,"cd server",-1),J=n("code",null,"Enter",-1),Z=i('<figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-17.48.03.jpeg" alt="Change the current directory to a directory named &quot;server.&quot;" tabindex="0" loading="lazy"><figcaption>Change the current directory to a directory named &quot;server.&quot;</figcaption></figure><p>Now you can install all the necessary dependencies by running <code>npm install</code>. This command will download and install all the required packages for the server-side application.</p><figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-17.55.01.jpeg" alt="installation of dependencies" tabindex="0" loading="lazy"><figcaption>installation of dependencies</figcaption></figure><p>If everything went well, you should see something like this below after <code>npm install</code>:</p><figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-17.51.59.png" alt="Successful Installation" tabindex="0" loading="lazy"><figcaption>Successful Installation</figcaption></figure><p>Next, you need to create a <code>.env</code> file in the <code>server</code> directory to store your environment variables. It&#39;s not advisable to hardcode sensitive credentials. You can do this easily by running <code>touch .env</code> in your terminal.</p><figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-17.59.38.jpeg" alt="Create a new file named " tabindex="0" loading="lazy"><figcaption>Create a new file named <code>.env</code></figcaption></figure><p>In the newly created <code>.env</code> file, you&#39;ll define three variables that your application depends on: <code>CONTAINER_NAME</code> , <code>AZURE_STORAGE_CONNECTION_STRING</code>, and <code>PORT</code> .</p><p>Assign &#39;qrcode&#39; as the value for <code>CONTAINER_NAME</code>. This was the name of the container you created inside the Azure Storage account. Also, set the <code>PORT</code> to <code>8000</code>, which is the port your backend application will be listening on.</p><p>Now, for the <code>AZURE_STORAGE_CONNECTION_STRING</code>, you&#39;ll need to obtain the secret key from the access key you obtained earlier. Copy the connection string and paste it as the value for <code>AZURE_STORAGE_CONNECTION_STRING</code> in the <code>.env</code> file.</p><figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-18.18.00.png" alt="Store Secret Variables" tabindex="0" loading="lazy"><figcaption>Store Secret Variables</figcaption></figure><p>Once you&#39;ve added these environment variables to the <code>.env</code> file, save it and you&#39;re all set to run the server-side of the application!</p>',12),K=n("code",null,"index.js",-1),Y=i(`<figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-18.18.28.png" alt="View Index.js file" tabindex="0" loading="lazy"><figcaption>View Index.js file</figcaption></figure><h3 id="code-overview" tabindex="-1"><a class="header-anchor" href="#code-overview"><span>Code overview</span></a></h3><p>Below is the code snippet containing the necessary logic for generating QR codes and establishing a connection with the Azure storage account you previously created.</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> BlobServiceClient<span class="token punctuation">,</span> generateBlobSASQueryParameters<span class="token punctuation">,</span> BlobSASPermissions <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;@azure/storage-blob&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> qrcode <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;qrcode&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">v4</span><span class="token operator">:</span> uuidv4 <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;uuid&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> Readable <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stream&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> dotenv <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;dotenv&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">dotenv<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> port <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PORT</span> <span class="token operator">||</span> <span class="token number">5000</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Allowing CORS for local testing</span></span>
<span class="line"><span class="token keyword">const</span> origins <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;http://localhost:3000&quot;</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Origin&#39;</span><span class="token punctuation">,</span> origins<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">&#39;Access-Control-Allow-Headers&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Origin, X-Requested-With, Content-Type, Accept&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> containerName <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">CONTAINER_NAME</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> blobServiceClient <span class="token operator">=</span> BlobServiceClient<span class="token punctuation">.</span><span class="token function">fromConnectionString</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">AZURE_STORAGE_CONNECTION_STRING</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/generate-qr&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span> url <span class="token punctuation">}</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Generate QR Code</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Received URL:&#39;</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> qrCode <span class="token operator">=</span> <span class="token keyword">await</span> qrcode<span class="token punctuation">.</span><span class="token function">toBuffer</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> bufferStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Readable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    bufferStream<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>qrCode<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    bufferStream<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Generate unique file name for Azure Blob Storage</span></span>
<span class="line">    <span class="token keyword">const</span> fileName <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">qr_codes/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">uuidv4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.png</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">const</span> containerClient <span class="token operator">=</span> blobServiceClient<span class="token punctuation">.</span><span class="token function">getContainerClient</span><span class="token punctuation">(</span>containerName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">const</span> blockBlobClient <span class="token operator">=</span> containerClient<span class="token punctuation">.</span><span class="token function">getBlockBlobClient</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">await</span> blockBlobClient<span class="token punctuation">.</span><span class="token function">uploadStream</span><span class="token punctuation">(</span>bufferStream<span class="token punctuation">,</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token number">1024</span> <span class="token operator">*</span> <span class="token number">1024</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">blobHTTPHeaders</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token literal-property property">blobContentType</span><span class="token operator">:</span> <span class="token string">&#39;image/png&#39;</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Generate SAS token for blob</span></span>
<span class="line">        <span class="token keyword">const</span> sasToken <span class="token operator">=</span> <span class="token function">generateSasToken</span><span class="token punctuation">(</span>blockBlobClient<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Generate the Blob URL with SAS token</span></span>
<span class="line">        <span class="token keyword">const</span> blobUrlWithSasToken <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>blockBlobClient<span class="token punctuation">.</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>sasToken<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Send response with the Blob URL containing SAS token</span></span>
<span class="line">        res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">qr_code_url</span><span class="token operator">:</span> blobUrlWithSasToken <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Error generating QR Code:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        res<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">error</span><span class="token operator">:</span> <span class="token string">&#39;Internal Server Error&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Function to generate SAS token for blob</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">generateSasToken</span><span class="token punctuation">(</span><span class="token parameter">blobClient</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> blobSAS <span class="token operator">=</span> <span class="token function">generateBlobSASQueryParameters</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">containerName</span><span class="token operator">:</span> blobClient<span class="token punctuation">.</span>containerName<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">blobName</span><span class="token operator">:</span> blobClient<span class="token punctuation">.</span>blobName<span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">permissions</span><span class="token operator">:</span> BlobSASPermissions<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// Read permission</span></span>
<span class="line">        <span class="token literal-property property">startsOn</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token literal-property property">expiresOn</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">86400</span><span class="token punctuation">)</span> <span class="token comment">// Token expires in 24 hours</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> blobClient<span class="token punctuation">.</span>credential<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> blobSAS<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Server is running on port </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now I&#39;ll give a detailed explanation of the code structure, functionalities, and key components of the application.</p>`,5),$=n("ul",null,[n("li",null,[n("code",null,"const express = require('express')"),s(": This line imports the Express.js framework, which is a Node.js web application framework for building web applications and APIs. It allows you to define routes, handle HTTP requests, and more.")]),n("li",null,[n("code",null,"const { BlobServiceClient, generateBlobSASQueryParameters, BlobSASPermissions } = require('@azure/storage-blob')"),s(": This line imports specific modules from the "),n("code",null,"@azure/storage-blob"),s(" package, which is the Azure Blob Storage SDK for JavaScript. It allows you to interact with Azure Blob Storage from our Node.js application.")]),n("li",null,[n("code",null,"const qrcode = require('qrcode')"),s(": This line imports the "),n("code",null,"qrcode"),s(" module, which is a popular Node.js library for generating QR codes.")]),n("li",null,[n("code",null,"const{ v4: uuidv4 } = require('uuid')"),s(": This line imports the "),n("code",null,"uuid"),s(" module and specifically extracts the "),n("code",null,"v4"),s(" function as "),n("code",null,"uuidv4"),s(". The "),n("code",null,"uuid"),s(" module is used to generate universally unique identifiers (UUIDs) in Node.js.")]),n("li",null,[n("code",null,"const{ Readable } = require('stream')"),s(": This line imports the "),n("code",null,"Readable"),s(" class from the built-in Node.js "),n("code",null,"stream"),s(" module. The "),n("code",null,"Readable"),s(" class is used to create readable streams, which are useful for handling data that can be read sequentially.")])],-1),X=n("ul",null,[n("li",null,[n("code",null,"dotenv.config();"),s(": This line loads environment variables from a "),n("code",null,".env"),s(" file into "),n("code",null,"process.env"),s(". The "),n("code",null,".env"),s(" file typically contains "),n("code",null,"CONTAINER_NAME"),s(" and "),n("code",null,"AZURE_STORAGE_CONNECTION_STRING"),s(" you specify in your "),n("code",null,".env"),s(" file.")])],-1),nn=n("ul",null,[n("li",null,[n("code",null,"const app = express();"),s(": This line initializes an Express application instance, which you'll use to define routes, middleware, and other configurations for your web application.")])],-1),sn=n("ul",null,[n("li",null,[n("code",null,"const port = process.env.PORT || 5000"),s(": This line sets the port number for the Express application. It retrieves the port number from the "),n("code",null,"process.env.PORT"),s(" environment variable, if it exists. If not, it defaults to port "),n("code",null,"5000"),s(". This allows flexibility for deploying the application in different environments where the port may be specified externally.")])],-1),an=n("ul",null,[n("li",null,"CORS (Cross-Origin Resource Sharing) is a security feature implemented by web browsers to restrict resources from being requested from another domain or application."),n("li",null,[s("In this section, CORS is being configured to allow requests from a specific origin ("),n("code",null,"http://localhost:3000"),s("), which is typically used during local development.")]),n("li",null,[s("The "),n("code",null,"app.use()"),s(" function is used to add middleware to the Express application. Here, a middleware function is defined that sets the necessary CORS headers on every HTTP response.")]),n("li",null,[n("code",null,"res.header('Access-Control-Allow-Origin', origins.join(','))"),s(": Sets the value of the "),n("code",null,"Access-Control-Allow-Origin"),s(" header to allow requests from the specified origins (in this case, "),n("code",null,"http://localhost:3000"),s(").")]),n("li",null,[n("code",null,"res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept')"),s(": Sets the allowed headers for the CORS request.")]),n("li",null,[n("code",null,"next()"),s(": Calls the next middleware function in the stack.")])],-1),en=n("ul",null,[n("li",null,[n("code",null,"containerName"),s(" and "),n("code",null,"blobServiceClient"),s(" are initialized using environment variables ("),n("code",null,"process.env.CONTAINER_NAME"),s(" and "),n("code",null,"process.env.AZURE_STORAGE_CONNECTION_STRING"),s(") configured earlier.")]),n("li",null,[n("code",null,"blobServiceClient"),s(" is initialized using the "),n("code",null,"fromConnectionString()"),s(" method from the "),n("code",null,"BlobServiceClient"),s(" class provided by the "),n("code",null,"@azure/storage-blob"),s(" package. This allows the application to interact with Azure Blob Storage using the provided connection string.")])],-1),tn=n("ul",null,[n("li",null,[n("code",null,"app.use(express.json())"),s(": Adds middleware to parse JSON bodies of incoming requests. This enables the application to handle JSON data in requests.")])],-1),on=n("ul",null,[n("li",null,[s("Defines a POST endpoint at "),n("code",null,"/generate-qr"),s(" to handle requests for generating QR codes.")]),n("li",null,[s("Upon receiving a request, the endpoint extracts the URL from the request body and generates a QR code image using the "),n("code",null,"qrcode.toBuffer()"),s(" function.")]),n("li",null,"The generated QR code image is then uploaded to Azure Blob Storage as a blob with a unique file name."),n("li",null,"After successfully uploading the image, a Shared Access Signature (SAS) token is generated for the blob, which provides temporary access to the blob with specified permissions (in this case, read-only)."),n("li",null,"Finally, the endpoint responds with a JSON object containing the URL of the generated QR code image along with the SAS token.")],-1),pn=n("ul",null,[n("li",null,[s("Defines a function "),n("code",null,"generateSasToken()"),s(" to generate a SAS token for a given blob client (block blob client in this case). The SAS token is generated with read permissions and an expiration time set to 24 hours.")])],-1),ln=n("ul",null,[n("li",null,[s("The Express application listens on the configured port ("),n("code",null,"port"),s(") for incoming HTTP requests. When the server starts, it prints a message indicating the port it is listening on.")])],-1),cn=i(`<p>Now, you can start the application locally.</p><p>To start the application, simply run <code>npm start</code> as shown below. If all goes well, you&#39;ll observe the message <code>Server is running on port 8000</code> printed on your console.</p><figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-18.36.50.png" alt="Start the Application locally" tabindex="0" loading="lazy"><figcaption>Start the Application locally</figcaption></figure><hr><h2 id="how-to-connect-the-frontend-application" tabindex="-1"><a class="header-anchor" href="#how-to-connect-the-frontend-application"><span>How to Connect the Frontend Application</span></a></h2><p>Now it is time to connect the frontend application with the backend application that is listening on Port 8000.</p><p>A typical full-stack application usually consists of at least two main components: a frontend (client-side) and a backend (server-side).</p><p><strong>Frontend Component</strong>: This is the part of the application that users interact with directly. It&#39;s typically built using technologies like HTML, CSS, and JavaScript frameworks like React, Angular, or Next.js.</p><p><strong>Backend Component</strong>: This is the part of the application that handles data storage, retrieval, and server side connectivity. It&#39;s usually built using server-side programming languages like Node.js (with frameworks like Express.js or Nest.js), Python (with frameworks like Django or Flask), Java (with frameworks like Spring), or Ruby (with frameworks like Ruby on Rails).</p><p>The backend communicates with the frontend, processes requests from users, interacts with databases, and generates responses.</p><p>To navigate to the frontend folder, open a new terminal by clicking the <code>+</code> , then use <code>cd frontend</code> to enter the frontend folder.</p><figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-18.57.14.jpeg" alt="Navigate to Frontend Directory" tabindex="0" loading="lazy"><figcaption>Navigate to Frontend Directory</figcaption></figure><p>Now, you can install all the necessary dependencies by running <code>npm install</code>. This command will download and install all the required packages for the Nextjs client-side application.</p><p>If everything went well, you should see something like this after <code>npm install</code>.</p><figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-17.51.59-1.png" alt="Successful Installation of Dependencies" tabindex="0" loading="lazy"><figcaption>Successful Installation of Dependencies</figcaption></figure><p>Before you run the application, let me quickly explain the code.Navigate to the frontend folder, then inside the <code>src/app</code> directory, click on the page.js file.</p><figure><img src="https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-18.50.17.jpeg" alt="View page.js file" tabindex="0" loading="lazy"><figcaption>View page.js file</figcaption></figure><h3 id="next-js-code-walkthrough" tabindex="-1"><a class="header-anchor" href="#next-js-code-walkthrough"><span>Next.js Code Walkthrough</span></a></h3><p>This code represents a React component serving as the frontend for the QR code generator backend application you&#39;ve recently built. This component allows users to input a URL, submit it, and receive the corresponding QR code image for display.</p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx" data-title="jsx"><pre><code><span class="line"><span class="token string">&#39;use client&#39;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">&#39;axios&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">Home</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>url<span class="token punctuation">,</span> setUrl<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>qrCodeUrl<span class="token punctuation">,</span> setQrCodeUrl<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">handleSubmit</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;http://localhost:8000/generate-qr&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> url <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token function">setQrCodeUrl</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>qr_code_url<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;Error generating QR Code:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>container<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">QR Code Generator&lt;/h</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>token file-descriptor important<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">1&gt;</span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">onSubmit</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleSubmit<span class="token punctuation">}</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>form<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span></span>
<span class="line">          <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span></span>
<span class="line">          <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>url<span class="token punctuation">}</span></span></span>
<span class="line">          <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setUrl</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">}</span></span></span>
<span class="line">          <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Enter URL like https://google.com<span class="token punctuation">&quot;</span></span></span>
<span class="line">          <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>input<span class="token punctuation">}</span></span></span>
<span class="line">        <span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>submit<span class="token punctuation">&quot;</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>button<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Generate QR Code</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token punctuation">{</span>qrCodeUrl <span class="token operator">&amp;&amp;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>qrCodeUrl<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>QR Code<span class="token punctuation">&quot;</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styles<span class="token punctuation">.</span>qrCode<span class="token punctuation">}</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>200<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">  );</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">// Styles</span>
<span class="line">const styles = </span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">container</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">minHeight</span><span class="token operator">:</span> <span class="token string">&#39;100vh&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token string">&#39;flex&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">flexDirection</span><span class="token operator">:</span> <span class="token string">&#39;column&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">alignItems</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">justifyContent</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;#121212&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;white&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">lineHeight</span><span class="token operator">:</span> <span class="token string">&#39;1.15&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">&#39;4rem&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">form</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">display</span><span class="token operator">:</span> <span class="token string">&#39;flex&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">flexDirection</span><span class="token operator">:</span> <span class="token string">&#39;column&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">alignItems</span><span class="token operator">:</span> <span class="token string">&#39;center&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">input</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token string">&#39;10px&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token string">&#39;5px&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token string">&#39;20px&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">&#39;300px&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;#121212&#39;</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">button</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">padding</span><span class="token operator">:</span> <span class="token string">&#39;10px 20px&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token string">&#39;20px&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">border</span><span class="token operator">:</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">borderRadius</span><span class="token operator">:</span> <span class="token string">&#39;5px&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">backgroundColor</span><span class="token operator">:</span> <span class="token string">&#39;#0070f3&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;white&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">cursor</span><span class="token operator">:</span> <span class="token string">&#39;pointer&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">qrCode</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token string">&#39;20px&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token plain-text">;</span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now I&#39;ll give a detailed explanation of the frontend application&#39;s code structure, functionalities, and key components.</p>`,21),rn=n("ul",null,[n("li",null,[n("code",null,"import { useState } from 'react'"),s(" imports the "),n("code",null,"useState"),s(" hook from React to manage state within the component.")]),n("li",null,[n("code",null,"const [url, setUrl] = useState('')"),s(" and "),n("code",null,"const [qrCodeUrl, setQrCodeUrl] = useState('')"),s(": This state variables, "),n("code",null,"url"),s(" and "),n("code",null,"qrCodeUrl"),s(", are initialized using the "),n("code",null,"useState"),s(" hook. These variables hold the input URL and the generated QR code URL, respectively.")])],-1),un=n("li",null,[s("When the form is submitted, the "),n("code",null,"handleSubmit"),s(" function is triggered.")],-1),dn=n("li",null,[s("This function prevents the default form submission behavior by using "),n("code",null,"e.preventDefault()"),s(".")],-1),kn=n("code",null,"http://localhost:8000/generate-qr",-1),gn={href:"https://axios-http.com/docs/intro",target:"_blank",rel:"noopener noreferrer"},hn=n("li",null,[s("Upon successful response, the generated QR code URL is stored in the "),n("code",null,"qrCodeUrl"),s(" state variable.")],-1),mn=n("ul",null,[n("li",null,"The component renders a title, a form with an input field for entering the URL, and a button to generate the QR code."),n("li",null,[s("When the QR code URL is available ("),n("code",null,"qrCodeUrl"),s(" is not empty), an image element is rendered to display the generated QR code.")])],-1),vn=n("ul",null,[n("li",null,"The component includes inline styles defined using JavaScript objects."),n("li",null,"Styles are applied to the container, title, form, input field, button, and QR code image.")],-1),bn=n("hr",null,null,-1),fn=n("h2",{id:"how-to-start-the-application-locally-how-to-start-the-application-locally",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#how-to-start-the-application-locally-how-to-start-the-application-locally"},[n("span",null,'-how-to-start-the-application-locally">How to Start the Application Locally')])],-1),yn=n("p",null,"Now, you can start the application locally.",-1),wn=n("code",null,"npm run dev",-1),Sn={href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"},_n=n("code",null,"http://localhost:3000",-1),An=n("figure",null,[n("img",{src:"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-08-at-15.18.18.png",alt:"Application ready to start",tabindex:"0",loading:"lazy"}),n("figcaption",null,"Application ready to start")],-1),Rn={href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"},xn=n("code",null,"http://localhost:3000",-1),jn=n("figure",null,[n("img",{src:"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-09-at-11.32.04.png",alt:"Application running in Browser",tabindex:"0",loading:"lazy"}),n("figcaption",null,"Application running in Browser")],-1),Cn={href:"https://wilfred-portfolio.vercel.app",target:"_blank",rel:"noopener noreferrer"},qn=n("code",null,"https://wilfred-portfolio.vercel.app/",-1),Nn=n("figure",null,[n("img",{src:"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-20.32.40.png",alt:"QR Code generated successfully",tabindex:"0",loading:"lazy"}),n("figcaption",null,"QR Code generated successfully")],-1),zn=n("hr",null,null,-1),Tn=n("h2",{id:"conclusion",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#conclusion"},[n("span",null,"Conclusion")])],-1),Bn=n("p",null,"When it comes to picking the right tools, technology choices are important. Next.js is great for making the front end of a website, while Node.js works well for handling server-side tasks. Also Azure blob storage is great for storing unstructured data such as binary data like QR code.",-1),In=n("p",null,"But remember, this journey is not just about writing code. It's also about learning about different technologies and picking the best ones for what you need to do.",-1),Qn=n("p",null,"As I finish up this tutorial, I'd like to keep asking for feedback to ensure that this tutorial stays helpful. Feel free to share your thoughts or comments with me.",-1),Un=n("p",null,"Thanks for reading!",-1),On=n("p",null,"Happy coding! 🚀",-1);function En(g,Ln){const r=c("VPCard"),h=c("SiteInfo"),l=c("FontIcon"),p=c("router-link"),u=c("Tabs");return f(),v("div",null,[n("h1",w,[n("a",S,[n("span",null,b(g.$frontmatter.title)+" 관련",1)])]),e(r,d(k({title:"React.js > Article(s)",desc:"Article(s)",link:"/programming/js-react/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),e(r,d(k({title:"Azure > Article(s)",desc:"Article(s)",link:"/devops/azure/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),_,e(h,{name:"How to Build a QR Code Generator for URLs with Node.js, Next.js, and Azure Blob Storage",desc:"A while ago, a client asked me to help them create a special app for generating QR codes so users could receive payments.  What set this app apart was that instead of users entering a URL to generate a QR code, they would initiate a request through the app...",url:"https://freecodecamp.org/news/build-a-qr-code-generator-using-nodejs-nextjs-azure-blob-storage/",logo:"https://cdn.freecodecamp.org/universal/favicons/favicon.ico",preview:"https://freecodecamp.org/news/content/images/size/w1000/2024/05/qr-code-image-real.jpeg"}),A,n("p",null,[s("Before you begin you'll need an active "),n("a",R,[e(l,{icon:"iconfont icon-microsoftazure"}),s("Azure")]),s(" account and subscription to create an Azure blob storage.")]),n("nav",x,[n("ul",null,[n("li",null,[e(p,{to:"#prerequisites"},{default:a(()=>[s("Prerequisites")]),_:1})]),n("li",null,[e(p,{to:"#what-is-a-qr-code"},{default:a(()=>[s("What is a QR Code?")]),_:1})]),n("li",null,[e(p,{to:"#how-to-set-up-azure-blob-storage"},{default:a(()=>[s("How to Set Up Azure Blob Storage")]),_:1}),n("ul",null,[n("li",null,[e(p,{to:"#step-1-create-a-storage-account"},{default:a(()=>[s("Step 1: Create a storage account")]),_:1})]),n("li",null,[e(p,{to:"#step-2-create-a-container"},{default:a(()=>[s("Step 2: Create a container")]),_:1})]),n("li",null,[e(p,{to:"#step-3-obtain-azure-storage-connection-string"},{default:a(()=>[s("Step 3: Obtain Azure Storage connection string")]),_:1})])])]),n("li",null,[e(p,{to:"#node-js-qr-code"},{default:a(()=>[s("Node.js QR Code")]),_:1}),n("ul",null,[n("li",null,[e(p,{to:"#code-overview"},{default:a(()=>[s("Code overview")]),_:1})])])]),n("li",null,[e(p,{to:"#how-to-connect-the-frontend-application"},{default:a(()=>[s("How to Connect the Frontend Application")]),_:1}),n("ul",null,[n("li",null,[e(p,{to:"#next-js-code-walkthrough"},{default:a(()=>[s("Next.js Code Walkthrough")]),_:1})])])]),n("li",null,[e(p,{to:"#how-to-start-the-application-locally-how-to-start-the-application-locally"},{default:a(()=>[s('-how-to-start-the-application-locally">How to Start the Application Locally')]),_:1})]),n("li",null,[e(p,{to:"#conclusion"},{default:a(()=>[s("Conclusion")]),_:1})])])]),j,C,n("p",null,[s("According to "),n("a",q,[e(l,{icon:"fas fa-globe"}),s("Investopedia")]),s(", a Quick Response (QR) code functions as a specialized barcode, scannable by digital devices, that stores data within a grid of square pixels.")]),N,z,T,B,n("p",null,[n("a",I,[e(l,{icon:"fa-brands fa-microsoft"}),s("Azure Blob Storage")]),s(" is a cloud-based storage service provided by Microsoft Azure. It is part of the Azure Storage suite, which also includes services such as Azure Files, Azure Queues, and Azure Tables.")]),Q,n("p",null,[s("First, you need to install "),U,s(" and "),O,s(" on your computer. Go to the "),n("a",E,[e(l,{icon:"fa-brands fa-node"}),s("Node.js")]),s(" website and download the version for your computer if you don't have it already.")]),L,n("p",null,[s("Next, go to this GitHub "),n("a",P,[s("link ("),e(l,{icon:"iconfont icon-github"}),G,s(")")]),s(" to fork the project and then clone it to your preferred directory on your computer.")]),H,n("p",null,[s("Once you've cloned the project repository, open the project with your code editor. I'm using "),n("a",D,[e(l,{icon:"iconfont icon-vscode"}),s("VS Code")]),s(". You'll notice that the project has of two folders: "),W,s(" and "),F,s(". You'll start by navigating to the "),M,s(" folder by typing "),V,s(" in your terminal and then press "),J,s(".")]),Z,n("p",null,[s("Before you run the application, let me quickly explain the code. Click on the "),e(l,{icon:"fa-brands fa-js"}),K,s(" file.")]),Y,e(u,{id:"177",data:[{id:"Importing required modules"},{id:"Configuring environment variables"},{id:"Initializing the Express application"},{id:"Defining port configuration"},{id:"Allowing CORS for local testing"},{id:"Azure Blob Storage configuration"},{id:"Express application configuration"},{id:"Endpoint for generating QR codes"},{id:"Function to generate SAS token for blob"},{id:"Listening on port"}],active:0},{title0:a(({value:t,isActive:o})=>[s("Importing required modules")]),title1:a(({value:t,isActive:o})=>[s("Configuring environment variables")]),title2:a(({value:t,isActive:o})=>[s("Initializing the Express application")]),title3:a(({value:t,isActive:o})=>[s("Defining port configuration")]),title4:a(({value:t,isActive:o})=>[s("Allowing CORS for local testing")]),title5:a(({value:t,isActive:o})=>[s("Azure Blob Storage configuration")]),title6:a(({value:t,isActive:o})=>[s("Express application configuration")]),title7:a(({value:t,isActive:o})=>[s("Endpoint for generating QR codes")]),title8:a(({value:t,isActive:o})=>[s("Function to generate SAS token for blob")]),title9:a(({value:t,isActive:o})=>[s("Listening on port")]),tab0:a(({value:t,isActive:o})=>[$]),tab1:a(({value:t,isActive:o})=>[X]),tab2:a(({value:t,isActive:o})=>[nn]),tab3:a(({value:t,isActive:o})=>[sn]),tab4:a(({value:t,isActive:o})=>[an]),tab5:a(({value:t,isActive:o})=>[en]),tab6:a(({value:t,isActive:o})=>[tn]),tab7:a(({value:t,isActive:o})=>[on]),tab8:a(({value:t,isActive:o})=>[pn]),tab9:a(({value:t,isActive:o})=>[ln]),_:1}),cn,e(u,{id:"398",data:[{id:"State management"},{id:"Form submission"},{id:"Rendering"},{id:"Styling"}],active:0},{title0:a(({value:t,isActive:o})=>[s("State management")]),title1:a(({value:t,isActive:o})=>[s("Form submission")]),title2:a(({value:t,isActive:o})=>[s("Rendering")]),title3:a(({value:t,isActive:o})=>[s("Styling")]),tab0:a(({value:t,isActive:o})=>[rn]),tab1:a(({value:t,isActive:o})=>[n("ul",null,[un,dn,n("li",null,[s("It sends a POST request to the server ("),kn,s(") with the input URL using the "),n("a",gn,[e(l,{icon:"fas fa-globe"}),s("Axios")]),s(" library.")]),hn])]),tab2:a(({value:t,isActive:o})=>[mn]),tab3:a(({value:t,isActive:o})=>[vn]),_:1}),bn,fn,yn,n("p",null,[s("To start the application, simply run "),wn,s(" as shown below. If all goes well, you'll observe the message "),n("a",Sn,[e(l,{icon:"fas fa-globe"}),_n]),s(" printed in your console.")]),An,n("p",null,[s("Open your browser and paste the URL "),n("a",Rn,[e(l,{icon:"fas fa-globe"}),xn]),s(". The browser should render the application and look exactly as shown below.")]),jn,n("p",null,[s("Paste in the URL of a website – either your portfolio website or any website you wish to generate a QR code for. I pasted my portfolio website URL, "),n("a",Cn,[e(l,{icon:"fas fa-globe"}),qn]),s(", into the URL box. See the result below:")]),Nn,zn,Tn,Bn,In,Qn,Un,On])}const Hn=m(y,[["render",En],["__file","build-a-qr-code-generator-using-nodejs-nextjs-azure-blob-storage.html.vue"]]),Dn=JSON.parse('{"path":"/freecodecamp.org/build-a-qr-code-generator-using-nodejs-nextjs-azure-blob-storage.html","title":"How to Build a QR Code Generator for URLs with Node.js, Next.js, and Azure Blob Storage","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to Build a QR Code Generator for URLs with Node.js, Next.js, and Azure Blob Storage","description":"Article(s) > How to Build a QR Code Generator for URLs with Node.js, Next.js, and Azure Blob Storage","icon":"iconfont icon-nextjs","category":["Node.js","Next.js","Azure","Article(s)"],"tag":["blog","freecodecamp.org","node","nodej","next","nextjs","azure","qr"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to Build a QR Code Generator for URLs with Node.js, Next.js, and Azure Blob Storage"},{"property":"og:description","content":"How to Build a QR Code Generator for URLs with Node.js, Next.js, and Azure Blob Storage"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/freecodecamp.org/build-a-qr-code-generator-using-nodejs-nextjs-azure-blob-storage.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/freecodecamp.org/build-a-qr-code-generator-using-nodejs-nextjs-azure-blob-storage.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to Build a QR Code Generator for URLs with Node.js, Next.js, and Azure Blob Storage"}],["meta",{"property":"og:description","content":"Article(s) > How to Build a QR Code Generator for URLs with Node.js, Next.js, and Azure Blob Storage"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://freecodecamp.org/news/content/images/size/w1000/2024/05/qr-code-image-real.jpeg"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://freecodecamp.org/news/content/images/size/w1000/2024/05/qr-code-image-real.jpeg"}],["meta",{"name":"twitter:image:alt","content":"How to Build a QR Code Generator for URLs with Node.js, Next.js, and Azure Blob Storage"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"freecodecamp.org"}],["meta",{"property":"article:tag","content":"node"}],["meta",{"property":"article:tag","content":"nodej"}],["meta",{"property":"article:tag","content":"next"}],["meta",{"property":"article:tag","content":"nextjs"}],["meta",{"property":"article:tag","content":"azure"}],["meta",{"property":"article:tag","content":"qr"}],["meta",{"property":"article:published_time","content":"2024-05-10T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to Build a QR Code Generator for URLs with Node.js, Next.js, and Azure Blob Storage\\",\\"image\\":[\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-16.08.23.png\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-16.16.46.jpeg\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-16.44.16.jpeg\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-16.54.39.jpeg\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-17.26.39--2-.jpeg\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-17.48.03.jpeg\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-17.55.01.jpeg\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-17.51.59.png\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-17.59.38.jpeg\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-18.18.00.png\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-18.18.28.png\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-18.36.50.png\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-18.57.14.jpeg\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-17.51.59-1.png\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-18.50.17.jpeg\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-08-at-15.18.18.png\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-09-at-11.32.04.png\\",\\"https://freecodecamp.org/news/content/images/2024/05/Screenshot-2024-05-07-at-20.32.40.png\\"],\\"datePublished\\":\\"2024-05-10T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"prev":"/programming/js-react/articles/README.md","date":"2024-05-10T00:00:00.000Z","isOriginal":false,"cover":"https://freecodecamp.org/news/content/images/size/w1000/2024/05/qr-code-image-real.jpeg"},"headers":[{"level":2,"title":"Prerequisites","slug":"prerequisites","link":"#prerequisites","children":[]},{"level":2,"title":"What is a QR Code?","slug":"what-is-a-qr-code","link":"#what-is-a-qr-code","children":[]},{"level":2,"title":"How to Set Up Azure Blob Storage","slug":"how-to-set-up-azure-blob-storage","link":"#how-to-set-up-azure-blob-storage","children":[{"level":3,"title":"Step 1: Create a storage account","slug":"step-1-create-a-storage-account","link":"#step-1-create-a-storage-account","children":[]},{"level":3,"title":"Step 2: Create a container","slug":"step-2-create-a-container","link":"#step-2-create-a-container","children":[]},{"level":3,"title":"Step 3: Obtain Azure Storage connection string","slug":"step-3-obtain-azure-storage-connection-string","link":"#step-3-obtain-azure-storage-connection-string","children":[]}]},{"level":2,"title":"Node.js QR Code","slug":"node-js-qr-code","link":"#node-js-qr-code","children":[{"level":3,"title":"Code overview","slug":"code-overview","link":"#code-overview","children":[]}]},{"level":2,"title":"How to Connect the Frontend Application","slug":"how-to-connect-the-frontend-application","link":"#how-to-connect-the-frontend-application","children":[{"level":3,"title":"Next.js Code Walkthrough","slug":"next-js-code-walkthrough","link":"#next-js-code-walkthrough","children":[]}]},{"level":2,"title":"-how-to-start-the-application-locally\\">How to Start the Application Locally","slug":"how-to-start-the-application-locally-how-to-start-the-application-locally","link":"#how-to-start-the-application-locally-how-to-start-the-application-locally","children":[]},{"level":2,"title":"Conclusion","slug":"conclusion","link":"#conclusion","children":[]}],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":11.61,"words":3482},"filePathRelative":"freecodecamp.org/build-a-qr-code-generator-using-nodejs-nextjs-azure-blob-storage.md","localizedDate":"2024년 5월 10일","excerpt":"\\n"}');export{Hn as comp,Dn as data};
