import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as n,t as k,e as s,n as t,g as e,d as i,f as c,r as l,o as m}from"./app-BgNevrm5.js";const w={},h={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},v=n("nav",{class:"table-of-contents"},[n("ul")],-1),g=n("hr",null,null,-1),b=c(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>Updated in iOS 15</strong></p><p>SwiftUI gives us a dedicated view for showing popup menus from buttons, helpfully called <code>Menu</code>. This can be created from a simple string or using a custom view, but either way you get to send in a variety of buttons to control what you want to appear in the menu.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>On macOS, <code>Menu</code> is automatically rendered as a pulldown button.</p></div><p>For example, we could create a simple button with several options like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Options&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Order Now&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> placeOrder<span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Adjust Order&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> adjustOrder<span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Cancel&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> cancelOrder<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">placeOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">adjustOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">cancelOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-show-a-menu-when-a-button-is-pressed-1.zip",target:"_blank",rel:"noopener noreferrer"},q=c(`<p>You can also place menus inside menus if you want, which will cause iOS to reveal the second menu when the first option is tapped:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Options&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Order Now&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> placeOrder<span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Adjust Order&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> adjustOrder<span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Advanced&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Rename&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> rename<span class="token punctuation">)</span></span>
<span class="line">                <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Delay&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> delay<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Cancel&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> cancelOrder<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">placeOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">adjustOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">rename</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">delay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">cancelOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),_={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-show-a-menu-when-a-button-is-pressed-2.zip",target:"_blank",rel:"noopener noreferrer"},O=c(`<p>If you wanted a customized label using some text and an icon, you could use this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Menu</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Order Now&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> placeOrder<span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Adjust Order&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> adjustOrder<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> label<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Label</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Options&quot;</span></span><span class="token punctuation">,</span> systemImage<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;paperplane&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">placeOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">adjustOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),j={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-show-a-menu-when-a-button-is-pressed-3.zip",target:"_blank",rel:"noopener noreferrer"},B=c(`<p>Finally, in iOS 15 and later menus can also have a primary action, which is triggered when the menu’s button is tapped rather than held down – press and release to trigger the primary action, or hold down to get the full menu of options.</p><p>So, we could create a menu that supports both simple taps as well as a full set of options:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Menu</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Options&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Order Now&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> placeOrder<span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Adjust Order&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> adjustOrder<span class="token punctuation">)</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Cancel&quot;</span></span><span class="token punctuation">,</span> action<span class="token punctuation">:</span> cancelOrder<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> primaryAction<span class="token punctuation">:</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">justDoIt</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">justDoIt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Button was tapped&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">placeOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">adjustOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">cancelOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-show-a-menu-when-a-button-is-pressed-4.zip",target:"_blank",rel:"noopener noreferrer"},S={class:"hint-container details"},V=n("summary",null,"Similar solutions…",-1);function H(u,I){const a=l("VPCard"),o=l("FontIcon"),p=l("VidStack");return m(),d("div",null,[n("h1",h,[n("a",f,[n("span",null,k(u.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),v,g,s(a,t(e({title:"How to show a menu when a button is pressed | SwiftUI by Example",desc:"How to show a menu when a button is pressed",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-show-a-menu-when-a-button-is-pressed",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("blockquote",null,[n("p",null,[n("a",y,[s(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),s(p,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-show-a-menu-when-a-button-is-pressed-1~dark.mp4"}),q,n("blockquote",null,[n("p",null,[n("a",_,[s(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),s(p,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-show-a-menu-when-a-button-is-pressed-2~dark.mp4"}),O,n("blockquote",null,[n("p",null,[n("a",j,[s(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),s(p,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-show-a-menu-when-a-button-is-pressed-3~dark.mp4"}),B,n("blockquote",null,[n("p",null,[n("a",x,[s(o,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),s(p,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-show-a-menu-when-a-button-is-pressed-4~dark.mp4"}),n("details",S,[V,s(a,t(e({title:"How to make buttons that repeat their action when pressed | SwiftUI by Example",desc:"How to make buttons that repeat their action when pressed",link:"/hackingwithswift.com/swiftui/how-to-make-buttons-that-repeat-their-action-when-pressed.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to show a context menu | SwiftUI by Example",desc:"How to show a context menu",link:"/hackingwithswift.com/swiftui/how-to-show-a-context-menu.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Building a menu using List | SwiftUI by Example",desc:"Building a menu using List",link:"/hackingwithswift.com/swiftui/building-a-menu-using-list.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to let users pick options from a menu | SwiftUI by Example",desc:"How to let users pick options from a menu",link:"/hackingwithswift.com/swiftui/how-to-let-users-pick-options-from-a-menu.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Customizing Button with ButtonStyle | SwiftUI by Example",desc:"Customizing Button with ButtonStyle",link:"/hackingwithswift.com/swiftui/customizing-button-with-buttonstyle.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const C=r(w,[["render",H],["__file","how-to-show-a-menu-when-a-button-is-pressed.html.vue"]]),U=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-show-a-menu-when-a-button-is-pressed.html","title":"How to show a menu when a button is pressed","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to show a menu when a button is pressed","description":"Article(s) > How to show a menu when a button is pressed","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to show a menu when a button is pressed"},{"property":"og:description","content":"How to show a menu when a button is pressed"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-show-a-menu-when-a-button-is-pressed.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-show-a-menu-when-a-button-is-pressed.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to show a menu when a button is pressed"}],["meta",{"property":"og:description","content":"Article(s) > How to show a menu when a button is pressed"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to show a menu when a button is pressed\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.82,"words":845},"filePathRelative":"hackingwithswift.com/swiftui/how-to-show-a-menu-when-a-button-is-pressed.md","excerpt":"\\n"}');export{C as comp,U as data};
