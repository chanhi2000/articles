import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as t,t as l,e as a,n as s,g as e,f as r,r as m,o as d}from"./app-BgNevrm5.js";const p={},h={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},u=t("nav",{class:"table-of-contents"},[t("ul")],-1),w=t("hr",null,null,-1),f=r(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>Improved in iOS 17</strong></p><p>Creating your SwiftUI colors in an asset catalog is the easiest way to visualize them, but also the easiest way to add light and dark mode adjustments.</p><p>Helpfully, it&#39;s trivial to load an asset catalog color into a SwiftUI <code>Color</code>, and in fact if you&#39;re using Xcode 15 or later you can write this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token punctuation">.</span>yourColorName<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This was introduced in Xcode 15 alongside iOS 17, but works just fine back in all older versions of iOS.</p><p>If you&#39;re using Xcode 14 and earlier, you need to write the name of your colors like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Color</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;YourColorName&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">Important</p><p>With the newer Xcode 15 variant, the first letter of your color name is lowercased to fit in with standard Swift naming conventions, but if you&#39;re using the older stringly-typed approach you should keep the casing the same as it is in your asset catalog.</p></div>`,9),k={class:"hint-container details"},y=t("summary",null,"Similar solutionsâ€¦",-1);function b(i,v){const o=m("VPCard");return d(),c("div",null,[t("h1",h,[t("a",g,[t("span",null,l(i.$frontmatter.title)+" ê´€ë ¨",1)])]),a(o,s(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),u,w,a(o,s(e({title:"How to load custom colors from an asset catalog | SwiftUI by Example",desc:"How to load custom colors from an asset catalog",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-load-custom-colors-from-an-asset-catalog",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f,t("details",k,[y,a(o,s(e({title:"How to get custom colors and transparency with SF Symbols | SwiftUI by Example",desc:"How to get custom colors and transparency with SF Symbols",link:"/hackingwithswift.com/swiftui/how-to-get-custom-colors-and-transparency-with-sf-symbols.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(o,s(e({title:"Polishing designs with fonts and colors | SwiftUI by Example",desc:"Polishing designs with fonts and colors",link:"/hackingwithswift.com/swiftui/polishing-designs-with-fonts-and-colors.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(o,s(e({title:"How to style text views with fonts, colors, line spacing, and more | SwiftUI by Example",desc:"How to style text views with fonts, colors, line spacing, and more",link:"/hackingwithswift.com/swiftui/how-to-style-text-views-with-fonts-colors-line-spacing-and-more.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(o,s(e({title:"How to lazy load views using LazyVStack and LazyHStack | SwiftUI by Example",desc:"How to lazy load views using LazyVStack and LazyHStack",link:"/hackingwithswift.com/swiftui/how-to-lazy-load-views-using-lazyvstack-and-lazyhstack.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),a(o,s(e({title:"How to load a remote image from a URL | SwiftUI by Example",desc:"How to load a remote image from a URL",link:"/hackingwithswift.com/swiftui/how-to-load-a-remote-image-from-a-url.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const H=n(p,[["render",b],["__file","how-to-load-custom-colors-from-an-asset-catalog.html.vue"]]),x=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-load-custom-colors-from-an-asset-catalog.html","title":"How to load custom colors from an asset catalog","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to load custom colors from an asset catalog","description":"Article(s) > How to load custom colors from an asset catalog","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to load custom colors from an asset catalog"},{"property":"og:description","content":"How to load custom colors from an asset catalog"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-load-custom-colors-from-an-asset-catalog.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-load-custom-colors-from-an-asset-catalog.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"How to load custom colors from an asset catalog"}],["meta",{"property":"og:description","content":"Article(s) > How to load custom colors from an asset catalog"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to load custom colors from an asset catalog\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.78,"words":534},"filePathRelative":"hackingwithswift.com/swiftui/how-to-load-custom-colors-from-an-asset-catalog.md","excerpt":"\\n"}');export{H as comp,x as data};
