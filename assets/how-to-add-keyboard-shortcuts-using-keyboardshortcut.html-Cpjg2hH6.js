import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as t,t as u,e as s,n,g as o,d as e,f as c,r,o as h}from"./app-BgNevrm5.js";const k={},g={id:"frontmatter-title-관련",tabindex:"-1"},b={class:"header-anchor",href:"#frontmatter-title-관련"},m=t("nav",{class:"table-of-contents"},[t("ul")],-1),w=t("hr",null,null,-1),f=c(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI makes it easy to add keyboard shortcuts for devices that support it, such as iPadOS and macOS, all using the <code>keyboardShortcut()</code> modifier.</p><p>There are three ways you&#39;ll want to use this modifier, so let&#39;s start with the most basic: attaching a key to an existing action. For example, if we had a log in button and wanted to trigger its behavior when the user pressed <kbd>Cmd</kbd>+<kbd>L</kbd> we could do this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Log in&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Authenticating…&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">keyboardShortcut</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;l&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut-1.zip",target:"_blank",rel:"noopener noreferrer"},v=c(`<p>Note that we don&#39;t need to specify that we mean <kbd>Cmd</kbd>+<kbd>L</kbd>, because SwiftUI assumes the Command key is used unless we specify otherwise. If you run that code sample on an iPad, you&#39;ll see that holding down the <kbd>Cmd</kbd> key brings up the keyboard shortcuts overlay, showing <kbd>“Cmd</kbd>+<kbd>L</kbd> Login” already – SwiftUI automatically figured out what our button did and made it available.</p><figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut-1~dark.png" alt="The words “Log in” in blue, indicating they are tappable. Below that is iPadOS&#39;s command palette showing the Log In command has the &lt;kbd&gt;Cmd&lt;/kbd&gt;+&lt;kbd&gt;L&lt;/kbd&gt; shortcut." tabindex="0" loading="lazy"><figcaption>The words “Log in” in blue, indicating they are tappable. Below that is iPadOS&#39;s command palette showing the Log In command has the <kbd>Cmd</kbd>+<kbd>L</kbd> shortcut.</figcaption></figure><p>The second way to use <code>keyboardShortcut()</code> is to specify which modifier keys you actually want. As an example, this creates two more buttons, one using <kbd>Shift</kbd>+<kbd>R</kbd> to trigger a Run button, and another for <kbd>Ctrl</kbd>+<kbd>Opt</kbd>+<kbd>Cmd</kbd>+<kbd>H</kbd> to trigger a Home button:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Run&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Running…&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">keyboardShortcut</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;r&quot;</span></span><span class="token punctuation">,</span> modifiers<span class="token punctuation">:</span> <span class="token punctuation">.</span>shift<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Home&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Going home&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">keyboardShortcut</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;h&quot;</span></span><span class="token punctuation">,</span> modifiers<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">.</span>control<span class="token punctuation">,</span> <span class="token punctuation">.</span>option<span class="token punctuation">,</span> <span class="token punctuation">.</span>command<span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut-2.zip",target:"_blank",rel:"noopener noreferrer"},_=c(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut-2~dark.png" alt="The words “Run” and “Home” in blue, indicating they are tappable. Below that is iPadOS&#39;s command palette showing that “Run” has the shortcut &lt;kbd&gt;Shift&lt;/kbd&gt;+&lt;kbd&gt;R&lt;/kbd&gt;, and “Home” has shortcut &lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Opt&lt;/kbd&gt;+&lt;kbd&gt;Cmd&lt;/kbd&gt;+&lt;kbd&gt;H&lt;/kbd&gt;." tabindex="0" loading="lazy"><figcaption>The words “Run” and “Home” in blue, indicating they are tappable. Below that is iPadOS&#39;s command palette showing that “Run” has the shortcut <kbd>Shift</kbd>+<kbd>R</kbd>, and “Home” has shortcut <kbd>Ctrl</kbd>+<kbd>Opt</kbd>+<kbd>Cmd</kbd>+<kbd>H</kbd>.</figcaption></figure><p>That shows you how to select one custom modifier, and how to select several modifiers at the same time.</p><p>The third and final way to use <code>keyboardShortcut()</code> is with one of its built-in keys, which are useful for hard to type keys such as Escape and arrows, and also for <em>semantic</em> keys, such as a cancellation action and a default action. Semantic keys are <em>really</em> useful – every time you&#39;ve pressed Return to accept the default action of an alert, or pressed Escape to cancel an action, you&#39;ve used semantic keys.</p><p>So, this creates a button with a default action shortcut, meaning that pressing Return will trigger it:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Confirm Launch&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Launching drone…&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">.</span><span class="token function">keyboardShortcut</span><span class="token punctuation">(</span><span class="token punctuation">.</span>defaultAction<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),q={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut-3.zip",target:"_blank",rel:"noopener noreferrer"},x=t("figure",null,[t("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut-3~dark.png",alt:"The words “Confirm Launch” in blue, indicating they are tappable. Below that is iPadOS's command palette showing the Confirm Launch command has the <kbd>Return</kbd> or <kbd>Enter</kbd> shortcut.",tabindex:"0",loading:"lazy"}),t("figcaption",null,[e("The words “Confirm Launch” in blue, indicating they are tappable. Below that is iPadOS's command palette showing the Confirm Launch command has the "),t("kbd",null,"Return"),e(" or "),t("kbd",null,"Enter"),e(" shortcut.")])],-1),H={class:"hint-container details"},C=t("summary",null,"Similar solutions…",-1);function R(l,L){const a=r("VPCard"),i=r("FontIcon");return h(),p("div",null,[t("h1",g,[t("a",b,[t("span",null,u(l.$frontmatter.title)+" 관련",1)])]),s(a,n(o({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),m,w,s(a,n(o({title:"How to add keyboard shortcuts using keyboardShortcut() | SwiftUI by Example",desc:"How to add keyboard shortcuts using keyboardShortcut()",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f,t("blockquote",null,[t("p",null,[t("a",y,[s(i,{icon:"fas fa-file-zipper"}),e("Download this as an Xcode project")])])]),v,t("blockquote",null,[t("p",null,[t("a",S,[s(i,{icon:"fas fa-file-zipper"}),e("Download this as an Xcode project")])])]),_,t("blockquote",null,[t("p",null,[t("a",q,[s(i,{icon:"fas fa-file-zipper"}),e("Download this as an Xcode project")])])]),x,t("details",H,[C,s(a,n(o({title:"How to add a toolbar to the keyboard | SwiftUI by Example",desc:"How to add a toolbar to the keyboard",link:"/hackingwithswift.com/swiftui/how-to-add-a-toolbar-to-the-keyboard.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,n(o({title:"How to dismiss the keyboard for a TextField | SwiftUI by Example",desc:"How to dismiss the keyboard for a TextField",link:"/hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-for-a-textfield.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,n(o({title:"How to dismiss the keyboard when the user scrolls | SwiftUI by Example",desc:"How to dismiss the keyboard when the user scrolls",link:"/hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-when-the-user-scrolls.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,n(o({title:"How to make buttons that repeat their action when pressed | SwiftUI by Example",desc:"How to make buttons that repeat their action when pressed",link:"/hackingwithswift.com/swiftui/how-to-make-buttons-that-repeat-their-action-when-pressed.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,n(o({title:"How to add advanced text styling using AttributedString | SwiftUI by Example",desc:"How to add advanced text styling using AttributedString",link:"/hackingwithswift.com/swiftui/how-to-add-advanced-text-styling-using-attributedstring.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const T=d(k,[["render",R],["__file","how-to-add-keyboard-shortcuts-using-keyboardshortcut.html.vue"]]),E=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut.html","title":"How to add keyboard shortcuts using keyboardShortcut()","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to add keyboard shortcuts using keyboardShortcut()","description":"Article(s) > How to add keyboard shortcuts using keyboardShortcut()","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to add keyboard shortcuts using keyboardShortcut()"},{"property":"og:description","content":"How to add keyboard shortcuts using keyboardShortcut()"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to add keyboard shortcuts using keyboardShortcut()"}],["meta",{"property":"og:description","content":"Article(s) > How to add keyboard shortcuts using keyboardShortcut()"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut-1~dark.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to add keyboard shortcuts using keyboardShortcut()\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut-1~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut-2~dark.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut-3~dark.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.08,"words":923},"filePathRelative":"hackingwithswift.com/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut.md","excerpt":"\\n"}');export{T as comp,E as data};
