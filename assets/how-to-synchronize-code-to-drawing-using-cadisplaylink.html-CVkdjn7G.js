import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as e,t as l,e as n,n as i,g as a,a as t,r as d,o as h}from"./app-BgNevrm5.js";const p={},m={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},u={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},g=e("nav",{class:"table-of-contents"},[e("ul")],-1),y=e("hr",null,null,-1),w=e("blockquote",null,[e("p",null,"Available from iOS 3.1")],-1),f=e("details",{class:"hint-container details"},[e("summary",null,"Similar solutions‚Ä¶"),t(`
/quick-start/swiftui/how-to-synchronize-animations-from-one-view-to-another-with-matchedgeometryeffect">How to synchronize animations from one view to another with matchedGeometryEffect() 
/quick-start/concurrency/how-to-use-mainactor-to-run-code-on-the-main-queue">How to use @MainActor to run code on the main queue 
/quick-start/swiftui/how-to-use-instruments-to-profile-your-swiftui-code-and-identify-slow-layouts">How to use Instruments to profile your SwiftUI code and identify slow layouts 
/example-code/uikit/how-to-create-live-playgrounds-in-xcode">How to create live playgrounds in Xcode 
/example-code/uikit/how-to-make-your-user-interface-in-code">How to make your user interface in code</a>
`)],-1);function k(s,_){const o=d("VPCard");return h(),c("div",null,[e("h1",m,[e("a",u,[e("span",null,l(s.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),n(o,i(a({title:"System - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/system/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,y,n(o,i(a({title:"How to synchronize code to drawing using CADisplayLink | System - free Swift example code",desc:"How to synchronize code to drawing using CADisplayLink",logo:"https://hackingwithswift.com/favicon.svg",link:"https://hackingwithswift.com/example-code/how-to-synchronize-code-to-drawing-using-cadisplaylink",background:"rgba(174,10,10,0.2)"})),null,16),w,t(" TODO: ÏûëÏÑ± "),t(` 
Lots of beginners think \`Timer\` is a great way to handle running apps or games so that update code is executed every time the screen is redrawn. Their logic is simple: update the app every 60th of a second and you're perfectly placed for smooth redraws.

The problem is, they are forgetting that \`Timer\` doesn't offer precise firing and can drift earlier or later than requested updates, and also has no idea about screen redraws and so could happily fire 10ms after a screen redraw just happened ‚Äì and when you're working to 16.666ms frames, 10ms is a long time!

A smarter and faster solution is the \`CADisplayLink\` class, which automatically calls a method you define as soon as a screen redraw happens, so you always have maximum time to execute your update code. It's extremely simple to use ‚Äì here's an example to get you started:

\`\`\`swift
let displayLink = CADisplayLink(target: self, selector: #selector(update))
displayLink.add(to: .current, forMode: .common)
\`\`\`

That will call a method called \`update()\` every 60th of a second by default. You can see it in action with this method stub:

\`\`\`swift
@objc func update() {
    print("Updating!")
}
\`\`\`

`),f])}const z=r(p,[["render",k],["__file","how-to-synchronize-code-to-drawing-using-cadisplaylink.html.vue"]]),A=JSON.parse('{"path":"/hackingwithswift.com/example-code/system/how-to-synchronize-code-to-drawing-using-cadisplaylink.html","title":"How to synchronize code to drawing using CADisplayLink","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to synchronize code to drawing using CADisplayLink","description":"Article(s) > How to synchronize code to drawing using CADisplayLink","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-3.1","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to synchronize code to drawing using CADisplayLink"},{"property":"og:description","content":"How to synchronize code to drawing using CADisplayLink"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/how-to-synchronize-code-to-drawing-using-cadisplaylink.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/system/how-to-synchronize-code-to-drawing-using-cadisplaylink.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to synchronize code to drawing using CADisplayLink"}],["meta",{"property":"og:description","content":"Article(s) > How to synchronize code to drawing using CADisplayLink"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-3.1"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2018-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to synchronize code to drawing using CADisplayLink\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2018-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.59,"words":478},"filePathRelative":"hackingwithswift.com/example-code/system/how-to-synchronize-code-to-drawing-using-cadisplaylink.md","localizedDate":"2018ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{z as comp,A as data};
