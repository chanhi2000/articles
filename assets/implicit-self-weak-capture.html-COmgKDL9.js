import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as s,t as u,e as n,n as e,g as a,d as i,f,r as l,o as d}from"./app-BgNevrm5.js";const m={},w={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},h=s("nav",{class:"table-of-contents"},[s("ul")],-1),g=s("hr",null,null,-1),b=s("blockquote",null,[s("p",null,"Available from Swift 5.8")],-1),v={href:"https://github.com/apple/swift-evolution/blob/main/proposals/0365-implicit-self-weak-capture.md",target:"_blank",rel:"noopener noreferrer"},_=s("code",null,"apple/swift-evolution",-1),y=s("code",null,"self",-1),C=s("code",null,"self",-1),A=s("code",null,"weak self",-1),S=f(`<p>For example, in the code below we have a closure that captures <code>self</code> weakly, but then unwraps <code>self</code> immediately:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token class-name">Foundation</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">TimerController</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> timer<span class="token punctuation">:</span> <span class="token class-name">Timer</span><span class="token operator">?</span></span>
<span class="line">    <span class="token keyword">var</span> fireCount <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        timer <span class="token operator">=</span> <span class="token class-name">Timer</span><span class="token punctuation">.</span><span class="token function">scheduledTimer</span><span class="token punctuation">(</span>withTimeInterval<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> repeats<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span><span class="token keyword">weak</span> <span class="token keyword">self</span><span class="token punctuation">]</span> timer <span class="token keyword">in</span></span>
<span class="line">            <span class="token keyword">guard</span> <span class="token keyword">let</span> <span class="token keyword">self</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> <span class="token punctuation">}</span></span>
<span class="line">            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Timer has fired </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">fireCount</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> times&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            fireCount <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That code would not have compiled before Swift 5.8, because both instances of <code>fireCount</code> in the closure would need to be written <code>self.fireCount</code>.</p>`,3),x={class:"hint-container details"},T=s("summary",null,"Other Changes in Swift 5.8",-1),F={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-5-7-to-5-8.playground.zip",target:"_blank",rel:"noopener noreferrer"};function I(c,N){const t=l("VPCard"),o=l("FontIcon");return d(),r("div",null,[s("h1",w,[s("a",k,[s("span",null,u(c.$frontmatter.title)+" ê´€ë ¨",1)])]),n(t,e(a({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),h,g,n(t,e(a({title:"Allow implicit self for weak self captures, after self is unwrapped | Changes in Swift 5.8",desc:"Allow implicit self for weak self captures, after self is unwrapped",link:"https://hackingwithswift.com/swift/5.8/implicit-self-weak-capture",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,s("p",null,[s("a",v,[i("SE-0365 ("),n(o,{icon:"iconfont icon-github"}),_,i(")")]),i(" takes another step towards letting us remove "),y,i(" from closures by allowing an implicit "),C,i(" in places where a "),A,i(" capture has been unwrapped.")]),S,s("details",x,[T,n(t,e(a({title:"Lift all limitations on variables in result builders | Changes in Swift 5.8",desc:"Lift all limitations on variables in result builders",link:"/hackingwithswift.com/swift/5.8/lift-result-builder-limitations.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(t,e(a({title:"Function back deployment | Changes in Swift 5.8",desc:"Function back deployment",link:"/hackingwithswift.com/swift/5.8/function-back-deployment.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(t,e(a({title:"Allow implicit self for weak self captures, after self is unwrapped | Changes in Swift 5.8",desc:"Allow implicit self for weak self captures, after self is unwrapped",link:"/hackingwithswift.com/swift/5.8/implicit-self-weak-capture.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(t,e(a({title:"Concise magic file names | Changes in Swift 5.8",desc:"Concise magic file names",link:"/hackingwithswift.com/swift/5.8/concise-magic-file-names.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(t,e(a({title:"Opening existential arguments to optional parameters | Changes in Swift 5.8",desc:"Opening existential arguments to optional parameters",link:"/hackingwithswift.com/swift/5.8/opening-existential-optional.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(t,e(a({title:"Collection downcasts in cast patterns are now supported | Changes in Swift 5.8",desc:"Collection downcasts in cast patterns are now supported",link:"/hackingwithswift.com/swift/5.8/collection-downcasts.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s("p",null,[s("a",F,[n(o,{icon:"fas fa-file-zipper"}),i("Download Swift 5.8 playground")])])])])}const O=p(m,[["render",I],["__file","implicit-self-weak-capture.html.vue"]]),P=JSON.parse('{"path":"/hackingwithswift.com/swift/5.8/implicit-self-weak-capture.html","title":"Allow implicit self for weak self captures, after self is unwrapped","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Allow implicit self for weak self captures, after self is unwrapped","description":"Article(s) > Allow implicit self for weak self captures, after self is unwrapped","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-5.8"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Allow implicit self for weak self captures, after self is unwrapped"},{"property":"og:description","content":"Allow implicit self for weak self captures, after self is unwrapped"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.8/implicit-self-weak-capture.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.8/implicit-self-weak-capture.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"Allow implicit self for weak self captures, after self is unwrapped"}],["meta",{"property":"og:description","content":"Article(s) > Allow implicit self for weak self captures, after self is unwrapped"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.8"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Allow implicit self for weak self captures, after self is unwrapped\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.7,"words":510},"filePathRelative":"hackingwithswift.com/swift/5.8/implicit-self-weak-capture.md","excerpt":"\\n"}');export{O as comp,P as data};
