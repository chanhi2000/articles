import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as n,t as r,e as s,n as t,g as e,d as u,f as d,r as o,o as k}from"./app-BgNevrm5.js";const w={},h={id:"frontmatter-title-관련",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-관련"},b=n("nav",{class:"table-of-contents"},[n("ul")],-1),g=n("hr",null,null,-1),f=d(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI’s paths don’t need to be continuous, isolated shapes, and can instead be multiple rectangles, ellipses, and more, all combined into one.</p><p>As an easy way of demonstrating this, we could write a shape that creates checkerboard patterns by building up a series of rectangles of a set number of rows and columns, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">Checkerboard</span><span class="token punctuation">:</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> rows<span class="token punctuation">:</span> <span class="token class-name">Int</span></span>
<span class="line">    <span class="token keyword">let</span> columns<span class="token punctuation">:</span> <span class="token class-name">Int</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">path</span><span class="token punctuation">(</span><span class="token keyword">in</span> rect<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Path</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">var</span> path <span class="token operator">=</span> <span class="token class-name">Path</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// figure out how big each row/column needs to be</span></span>
<span class="line">        <span class="token keyword">let</span> rowSize <span class="token operator">=</span> rect<span class="token punctuation">.</span>height <span class="token operator">/</span> <span class="token class-name">Double</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">let</span> columnSize <span class="token operator">=</span> rect<span class="token punctuation">.</span>width <span class="token operator">/</span> <span class="token class-name">Double</span><span class="token punctuation">(</span>columns<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// loop over all rows and columns, making alternating squares colored    </span></span>
<span class="line">        <span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token number">0</span> <span class="token operator">..&lt;</span> rows <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">for</span> column <span class="token keyword">in</span> <span class="token number">0</span> <span class="token operator">..&lt;</span> columns <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>row <span class="token operator">+</span> column<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isMultiple</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token comment">// this square should be colored; add a rectangle here</span></span>
<span class="line">                    <span class="token keyword">let</span> startX <span class="token operator">=</span> columnSize <span class="token operator">*</span> <span class="token class-name">Double</span><span class="token punctuation">(</span>column<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token keyword">let</span> startY <span class="token operator">=</span> rowSize <span class="token operator">*</span> <span class="token class-name">Double</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">                    <span class="token keyword">let</span> rect <span class="token operator">=</span> <span class="token class-name">CGRect</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> startX<span class="token punctuation">,</span> y<span class="token punctuation">:</span> startY<span class="token punctuation">,</span> width<span class="token punctuation">:</span> columnSize<span class="token punctuation">,</span> height<span class="token punctuation">:</span> rowSize<span class="token punctuation">)</span></span>
<span class="line">                    path<span class="token punctuation">.</span><span class="token function">addRect</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> path</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Create a checkerboard in a view</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Checkerboard</span><span class="token punctuation">(</span>rows<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">,</span> columns<span class="token punctuation">:</span> <span class="token number">16</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">.</span>red<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span>    </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),v={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-draw-a-checkerboard-1.zip",target:"_blank",rel:"noopener noreferrer"},y=n("figure",null,[n("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-draw-a-checkerboard-1~dark@2x.png",alt:"A square covered in a 16 by 16 red checkerboard pattern.",tabindex:"0",loading:"lazy"}),n("figcaption",null,"A square covered in a 16 by 16 red checkerboard pattern.")],-1),_={class:"hint-container details"},S=n("summary",null,"Similar solutions…",-1);function x(c,H){const a=o("VPCard"),p=o("FontIcon");return k(),l("div",null,[n("h1",h,[n("a",m,[n("span",null,r(c.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),b,g,s(a,t(e({title:"How to draw a checkerboard | SwiftUI by Example",desc:"How to draw a checkerboard",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-draw-a-checkerboard",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f,n("blockquote",null,[n("p",null,[n("a",v,[s(p,{icon:"fas fa-file-zipper"}),u("Download this as an Xcode project")])])]),y,n("details",_,[S,s(a,t(e({title:"How to add Metal shaders to SwiftUI views using layer effects | SwiftUI by Example",desc:"How to add Metal shaders to SwiftUI views using layer effects",link:"/hackingwithswift.com/swiftui/how-to-add-metal-shaders-to-swiftui-views-using-layer-effects.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to draw polygons and stars | SwiftUI by Example",desc:"How to draw polygons and stars",link:"/hackingwithswift.com/swiftui/how-to-draw-polygons-and-stars.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to draw a border inside a view | SwiftUI by Example",desc:"How to draw a border inside a view",link:"/hackingwithswift.com/swiftui/how-to-draw-a-border-inside-a-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to draw a custom path | SwiftUI by Example",desc:"How to draw a custom path",link:"/hackingwithswift.com/swiftui/how-to-draw-a-custom-path.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to draw a shadow around a view | SwiftUI by Example",desc:"How to draw a shadow around a view",link:"/hackingwithswift.com/swiftui/how-to-draw-a-shadow-around-a-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const q=i(w,[["render",x],["__file","how-to-draw-a-checkerboard.html.vue"]]),z=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-draw-a-checkerboard.html","title":"How to draw a checkerboard","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to draw a checkerboard","description":"Article(s) > How to draw a checkerboard","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to draw a checkerboard"},{"property":"og:description","content":"How to draw a checkerboard"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-draw-a-checkerboard.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-draw-a-checkerboard.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to draw a checkerboard"}],["meta",{"property":"og:description","content":"Article(s) > How to draw a checkerboard"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-draw-a-checkerboard-1~dark@2x.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to draw a checkerboard\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-draw-a-checkerboard-1~dark@2x.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.85,"words":556},"filePathRelative":"hackingwithswift.com/swiftui/how-to-draw-a-checkerboard.md","excerpt":"\\n"}');export{q as comp,z as data};
