import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as e,t as r,e as s,n,g as a,f as l,r as p,o as u}from"./app-BgNevrm5.js";const d={},h={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},m=e("nav",{class:"table-of-contents"},[e("ul")],-1),w=e("hr",null,null,-1),g=l(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>This is a particularly confusing problem, and it occurs because SwiftUI relies heavily on opaque return types. The problem happens because of code like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;SwiftUI&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>It feels like such a tiny thing, but the <code>body</code> property is declared as returning <code>View</code> rather than <code>some View</code>. The difference is small but important ‚Äì you can find out more about it in my article <a href="https://hackingwithswift.com/quick-start/swiftui/how-to-use-opaque-return-types-in-swift-5-1" target="_blank" rel="noopener noreferrer">How to use opaque return types in Swift 5.1</a>. <!-- NOTE: broken link --></p><p>So, to fix the problem use this instead:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;SwiftUI&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),y={class:"hint-container details"},b=e("summary",null,"Similar solutions‚Ä¶",-1);function k(i,v){const t=p("VPCard");return u(),c("div",null,[e("h1",h,[e("a",f,[e("span",null,r(i.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),s(t,n(a({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),m,w,s(t,n(a({title:"How to fix ‚ÄúProtocol 'View' can only be used as a generic constraint because it has Self or associated type requirements‚Äù | SwiftUI by Example",desc:"How to fix ‚ÄúProtocol 'View' can only be used as a generic constraint because it has Self or associated type requirements‚Äù",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-fix-protocol-view-can-only-be-used-as-a-generic-constraint-because-it-has-self-or-associated-type-requirements",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),g,e("details",y,[b,s(t,n(a({title:"How to fix ‚ÄúProperty declares an opaque return type, but has no initializer expression from which to infer an underlying type‚Äù | SwiftUI by Example",desc:"How to fix ‚ÄúProperty declares an opaque return type, but has no initializer expression from which to infer an underlying type‚Äù",link:"/hackingwithswift.com/swiftui/how-to-fix-property-declares-an-opaque-return-type-but-has-no-initializer-expression-from-which-to-infer-an-underlying-type.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,n(a({title:"How to fix ‚ÄúFunction declares an opaque return type, but has no return statements in its body from which to infer an underlying type‚Äù | SwiftUI by Example",desc:"How to fix ‚ÄúFunction declares an opaque return type, but has no return statements in its body from which to infer an underlying type‚Äù",link:"/hackingwithswift.com/swiftui/how-to-fix-function-declares-an-opaque-return-type-but-has-no-return-statements-in-its-body-from-which-to-infer-an-underlying-type.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,n(a({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,n(a({title:"How to fix ‚ÄúCannot assign to property: 'self' is immutable‚Äù | SwiftUI by Example",desc:"How to fix ‚ÄúCannot assign to property: 'self' is immutable‚Äù",link:"/hackingwithswift.com/swiftui/how-to-fix-cannot-assign-to-property-self-is-immutable.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,n(a({title:"How to clip a view so only part is visible | SwiftUI by Example",desc:"How to clip a view so only part is visible",link:"/hackingwithswift.com/swiftui/how-to-clip-a-view-so-only-part-is-visible.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const S=o(d,[["render",k],["__file","how-to-fix-protocol-view-can-only-be-used-as-a-generic-constraint-because-it-has-self-or-associated-type-requirements.html.vue"]]),_=JSON.parse(`{"path":"/hackingwithswift.com/swiftui/how-to-fix-protocol-view-can-only-be-used-as-a-generic-constraint-because-it-has-self-or-associated-type-requirements.html","title":"How to fix ‚ÄúProtocol 'View' can only be used as a generic constraint because it has Self or associated type requirements‚Äù","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to fix ‚ÄúProtocol 'View' can only be used as a generic constraint because it has Self or associated type requirements‚Äù","description":"Article(s) > How to fix ‚ÄúProtocol 'View' can only be used as a generic constraint because it has Self or associated type requirements‚Äù","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to fix ‚ÄúProtocol 'View' can only be used as a generic constraint because it has Self or associated type requirements‚Äù"},{"property":"og:description","content":"How to fix ‚ÄúProtocol 'View' can only be used as a generic constraint because it has Self or associated type requirements‚Äù"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-fix-protocol-view-can-only-be-used-as-a-generic-constraint-because-it-has-self-or-associated-type-requirements.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-fix-protocol-view-can-only-be-used-as-a-generic-constraint-because-it-has-self-or-associated-type-requirements.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to fix ‚ÄúProtocol 'View' can only be used as a generic constraint because it has Self or associated type requirements‚Äù"}],["meta",{"property":"og:description","content":"Article(s) > How to fix ‚ÄúProtocol 'View' can only be used as a generic constraint because it has Self or associated type requirements‚Äù"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2022-12-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to fix ‚ÄúProtocol 'View' can only be used as a generic constraint because it has Self or associated type requirements‚Äù\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2022-12-01T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.22,"words":666},"filePathRelative":"hackingwithswift.com/swiftui/how-to-fix-protocol-view-can-only-be-used-as-a-generic-constraint-because-it-has-self-or-associated-type-requirements.md","localizedDate":"2022ÎÖÑ 12Ïõî 1Ïùº","excerpt":"\\n"}`);export{S as comp,_ as data};
