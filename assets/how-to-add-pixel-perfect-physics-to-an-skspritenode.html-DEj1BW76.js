import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as e,t as p,e as i,n as s,g as a,a as t,r as l,o as d}from"./app-BgNevrm5.js";const h={},m={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},y=e("nav",{class:"table-of-contents"},[e("ul")],-1),f=e("hr",null,null,-1),w=e("blockquote",null,[e("p",null,"Available from iOS 7.0")],-1),u=e("details",{class:"hint-container details"},[e("summary",null,"Similar solutions‚Ä¶"),t(`
/example-code/games/how-to-add-physics-to-an-skspritenode">How to add physics to an SKSpriteNode 
/example-code/games/how-to-stop-an-skphysicsbody-responding-to-physics-using-its-dynamic-property">How to stop an SKPhysicsBody responding to physics using its dynamic property 
/example-code/games/how-to-add-a-fragment-shader-to-an-skspritenode-using-skshader">How to add a fragment shader to an SKSpriteNode using SKShader 
/example-code/games/how-to-debug-physics-in-a-spritekit-scene-using-showsphysics">How to debug physics in a SpriteKit scene using showsPhysics 
/example-code/games/how-to-made-an-skspritenode-render-faster-using-blendmode">How to made an SKSpriteNode render faster using blendMode</a>
`)],-1);function S(n,x){const o=l("VPCard");return d(),c("div",null,[e("h1",m,[e("a",g,[e("span",null,p(n.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),i(o,s(a({title:"Games - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/games/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),y,f,i(o,s(a({title:"How to add pixel-perfect physics to an SKSpriteNode | Games - free Swift example code",desc:"How to add pixel-perfect physics to an SKSpriteNode",link:"https://hackingwithswift.com/example-code/games/how-to-add-pixel-perfect-physics-to-an-skspritenode",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,t(" TODO: ÏûëÏÑ± "),t(` 
Pixel-perfect physics is just one line of code in SpriteKit. Don't believe me? Here you go:

\`\`\`swift
player = SKSpriteNode(imageNamed: "player")
player.position = CGPoint(x: 100, y: 384)
player.physicsBody = SKPhysicsBody(texture: player.texture!, size: player.size)
\`\`\`

That last line is the one that does the magic: SpriteKit will use the alpha values of your sprite (i.e., the transparent pixels) to figure out which parts should be part of a collision.

As you might imagine, pixel-perfect collision detection is significantly slower than using rectangles or circles, so you should use it carefully.

`),u])}const b=r(h,[["render",S],["__file","how-to-add-pixel-perfect-physics-to-an-skspritenode.html.vue"]]),K=JSON.parse('{"path":"/hackingwithswift.com/example-code/games/how-to-add-pixel-perfect-physics-to-an-skspritenode.html","title":"How to add pixel-perfect physics to an SKSpriteNode","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to add pixel-perfect physics to an SKSpriteNode","description":"Article(s) > How to add pixel-perfect physics to an SKSpriteNode","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-7.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to add pixel-perfect physics to an SKSpriteNode"},{"property":"og:description","content":"How to add pixel-perfect physics to an SKSpriteNode"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/games/how-to-add-pixel-perfect-physics-to-an-skspritenode.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/games/how-to-add-pixel-perfect-physics-to-an-skspritenode.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to add pixel-perfect physics to an SKSpriteNode"}],["meta",{"property":"og:description","content":"Article(s) > How to add pixel-perfect physics to an SKSpriteNode"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-7.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to add pixel-perfect physics to an SKSpriteNode\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.27,"words":381},"filePathRelative":"hackingwithswift.com/example-code/games/how-to-add-pixel-perfect-physics-to-an-skspritenode.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{b as comp,K as data};
