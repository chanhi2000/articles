import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,t as u,e as s,n as e,g as a,d as o,a as d,f as g,r as c,o as h}from"./app-BgNevrm5.js";const m={},k={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},w=n("nav",{class:"table-of-contents"},[n("ul")],-1),b=n("hr",null,null,-1),v=n("blockquote",null,[n("p",null,"Available from Swift 6.0")],-1),y={href:"https://github.com/apple/swift-evolution/blob/main/proposals/0270-rangeset-and-collection-operations.md",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"apple/swift-evolution",-1),C=g(`<p>This change is powered by a new type called <code>RangeSet</code>. If you&#39;ve ever used <code>IndexSet</code> from Foundation, think of <code>RangeSet</code> as being <code>IndexSet</code> except for any kind of <code>Comparable</code> type rather than just integers.</p><p>Lots of Swift API has been upgraded to <code>RangeSet</code>. To give us some example data to work with, we could create an array of students with exam results like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ExamResult</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> student<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">var</span> score<span class="token punctuation">:</span> <span class="token class-name">Int</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> results <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token class-name">ExamResult</span><span class="token punctuation">(</span>student<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Eric Effiong&quot;</span></span><span class="token punctuation">,</span> score<span class="token punctuation">:</span> <span class="token number">95</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">ExamResult</span><span class="token punctuation">(</span>student<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Maeve Wiley&quot;</span></span><span class="token punctuation">,</span> score<span class="token punctuation">:</span> <span class="token number">70</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token class-name">ExamResult</span><span class="token punctuation">(</span>student<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Otis Milburn&quot;</span></span><span class="token punctuation">,</span> score<span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>We can get a <code>RangeSet</code> containing the indices of all students who score 85% or higher like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">let</span> topResults <span class="token operator">=</span> results<span class="token punctuation">.</span>indices <span class="token punctuation">{</span> student <span class="token keyword">in</span></span>
<span class="line">    student<span class="token punctuation">.</span>score <span class="token operator">&gt;=</span> <span class="token number">85</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And if we wanted to get access to those students, we can use a new <code>Collection</code> subscript:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">for</span> result <span class="token keyword">in</span> results<span class="token punctuation">[</span>topResults<span class="token punctuation">]</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">result<span class="token punctuation">.</span>student</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> scored </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">result<span class="token punctuation">.</span>score</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">%&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This subscript returns another new type called <code>DiscontiguousSlice</code>, which is similar to <code>Slice</code> in that for performance reasons it refers to elements stored in a different collection, except the indices are <em>discontiguous</em>, meaning that they aren&#39;t necessarily adjacent in the collection.</p><p>The &quot;set&quot; part of the name is there because <code>RangeSet</code> supports a variety of functions that come from the <code>SetAlgebra</code> protocol, including <code>union()</code>, <code>intersection()</code>, and <code>isSuperset(of:)</code>. This also means that inserting one range into another will merge any overlapping ranges rather than creating duplicates.</p>`,9),S={class:"hint-container details"},A=n("summary",null,"Other Changes in Swift 6.0",-1),E={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-5-10-to-6-0.playground.zip",target:"_blank",rel:"noopener noreferrer"};function x(l,N){const t=c("VPCard"),i=c("FontIcon");return h(),r("div",null,[n("h1",k,[n("a",f,[n("span",null,u(l.$frontmatter.title)+" 관련",1)])]),s(t,e(a({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),w,b,s(t,e(a({title:"Add Collection Operations on Noncontiguous Elements | Changes in Swift 6.0",desc:"Add Collection Operations on Noncontiguous Elements",link:"https://hackingwithswift.com/swift/6.0/rangeset",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,n("p",null,[n("a",y,[o("SE-0270 ("),s(i,{icon:"iconfont icon-github"}),_,o(")")]),o(" introduces various new methods to handle more complex operations on collections, such as moving or remove multiple items that aren't contiguous.")]),C,n("details",S,[A,s(t,e(a({title:"Complete concurrency enabled by default | Changes in Swift 6.0",desc:"Complete concurrency enabled by default",link:"/hackingwithswift.com/swift/6.0/concurrency.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,e(a({title:"count(where:) | Changes in Swift 6.0",desc:"count(where:)",link:"/hackingwithswift.com/swift/6.0/count-where.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,e(a({title:"Typed throws | Changes in Swift 6.0",desc:"Typed throws",link:"/hackingwithswift.com/swift/6.0/typed-throws.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,e(a({title:"Pack iteration | Changes in Swift 6.0",desc:"Pack iteration",link:"/hackingwithswift.com/swift/6.0/pack-iteration.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),d(` 
\`\`\`component VPCard
{
  "title": "Add Collection Operations on Noncontiguous Elements | Changes in Swift 6.0",
  "desc": "Add Collection Operations on Noncontiguous Elements",
  "link": "/hackingwithswift.com/swift/6.0/rangeset.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),s(t,e(a({title:"Access-level modifiers on import declarations | Changes in Swift 6.0",desc:"Access-level modifiers on import declarations",link:"/hackingwithswift.com/swift/6.0/access-level-import.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,e(a({title:"Upgrades for noncopyable types | Changes in Swift 6.0",desc:"Upgrades for noncopyable types",link:"/hackingwithswift.com/swift/6.0/noncopyable-upgrades.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,e(a({title:"128-bit Integer Types | Changes in Swift 6.0",desc:"128-bit Integer Types",link:"/hackingwithswift.com/swift/6.0/int128.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(t,e(a({title:"BitwiseCopyable | Changes in Swift 6.0",desc:"BitwiseCopyable",link:"/hackingwithswift.com/swift/6.0/bitwisecopyable.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n("p",null,[n("a",E,[s(i,{icon:"fas fa-file-zipper"}),o("Download Swift 6.0 playground")])])])])}const T=p(m,[["render",x],["__file","rangeset.html.vue"]]),I=JSON.parse('{"path":"/hackingwithswift.com/swift/6.0/rangeset.html","title":"Add Collection Operations on Noncontiguous Elements","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Add Collection Operations on Noncontiguous Elements","description":"Article(s) > Add Collection Operations on Noncontiguous Elements","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-6.0"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Add Collection Operations on Noncontiguous Elements"},{"property":"og:description","content":"Add Collection Operations on Noncontiguous Elements"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/6.0/rangeset.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/6.0/rangeset.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Add Collection Operations on Noncontiguous Elements"}],["meta",{"property":"og:description","content":"Article(s) > Add Collection Operations on Noncontiguous Elements"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-6.0"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Add Collection Operations on Noncontiguous Elements\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.21,"words":663},"filePathRelative":"hackingwithswift.com/swift/6.0/rangeset.md","excerpt":"\\n"}');export{T as comp,I as data};
