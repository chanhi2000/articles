import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,t as u,e as s,n as t,g as e,d as i,a as d,f as h,r as c,o as m}from"./app-BgNevrm5.js";const g={},w={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},k=n("nav",{class:"table-of-contents"},[n("ul")],-1),v=n("hr",null,null,-1),b=n("blockquote",null,[n("p",null,"Available from Swift 5.3")],-1),y={href:"https://github.com/apple/swift-evolution/blob/master/proposals/0267-where-on-contextually-generic.md",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"apple/swift-evolution",-1),S=n("code",null,"where",-1),x=h(`<p>For example, we could start with a simple <code>Stack</code> struct that let us push and pop values from a private array:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">Stack</span><span class="token operator">&lt;</span><span class="token class-name">Element</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">var</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token class-name">Element</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">mutating</span> <span class="token keyword">func</span> <span class="token function-definition function">push</span><span class="token punctuation">(</span><span class="token omit keyword">_</span> obj<span class="token punctuation">:</span> <span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        array<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">mutating</span> <span class="token keyword">func</span> <span class="token function-definition function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Element</span><span class="token operator">?</span> <span class="token punctuation">{</span></span>
<span class="line">        array<span class="token punctuation">.</span><span class="token function">popLast</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Using SE-0267, we could add a new <code>sorted()</code> method to that stack, but only for times when the elements inside the stack conform to <code>Comparable</code>:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">extension</span> <span class="token class-name">Stack</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">[</span><span class="token class-name">Element</span><span class="token punctuation">]</span> <span class="token keyword">where</span> <span class="token class-name">Element</span><span class="token punctuation">:</span> <span class="token class-name">Comparable</span> <span class="token punctuation">{</span></span>
<span class="line">        array<span class="token punctuation">.</span><span class="token function">sorted</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),C={class:"hint-container details"},E=n("summary",null,"Other Changes in Swift 5.3",-1),A={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-5-2-to-5-3.playground.zip",target:"_blank",rel:"noopener noreferrer"};function M(l,P){const a=c("VPCard"),o=c("FontIcon");return m(),r("div",null,[n("h1",w,[n("a",f,[n("span",null,u(l.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k,v,s(a,t(e({title:"where clauses on contextually generic declarations | Changes in Swift 5.3",desc:"where clauses on contextually generic declarations",link:"https://hackingwithswift.com/swift/5.3/where-clauses",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("p",null,[n("a",y,[i("SE-0267 ("),s(o,{icon:"iconfont icon-github"}),_,i(")")]),i(" introduced the ability to attach a "),S,i(" clause to functions inside generic types and extensions.")]),x,n("details",C,[E,s(a,t(e({title:"Multi-pattern catch clauses | Changes in Swift 5.3",desc:"Multi-pattern catch clauses",link:"/hackingwithswift.com/swift/5.3/multipattern-catch.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Multiple trailing closures | Changes in Swift 5.3",desc:"Multiple trailing closures",link:"/hackingwithswift.com/swift/5.3/multiple-trailing-closures.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Synthesized Comparable conformance for enums | Changes in Swift 5.3",desc:"Synthesized Comparable conformance for enums",link:"/hackingwithswift.com/swift/5.3/synthesized-comparable-enum.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"self is no longer required in many places | Changes in Swift 5.3",desc:"self is no longer required in many places",link:"/hackingwithswift.com/swift/5.3/removing-self.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Type-based program entry points | Changes in Swift 5.3",desc:"Type-based program entry points",link:"/hackingwithswift.com/swift/5.3/atmain.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),d(` 
\`\`\`component VPCard
{
  "title": "where clauses on contextually generic declarations | Changes in Swift 5.3",
  "desc": "where clauses on contextually generic declarations",
  "link": "/hackingwithswift.com/swift/5.3/where-clauses.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),s(a,t(e({title:"Enum cases as protocol witnesses | Changes in Swift 5.3",desc:"Enum cases as protocol witnesses",link:"/hackingwithswift.com/swift/5.3/enum-protocol-witnesses.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Refined didSet semantics | Changes in Swift 5.3",desc:"Refined didSet semantics",link:"/hackingwithswift.com/swift/5.3/refined-didset.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"A new Float16 type | Changes in Swift 5.3",desc:"A new Float16 type",link:"/hackingwithswift.com/swift/5.3/float16.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Swift Package Manager gains binary dependencies, resources, and more | Changes in Swift 5.3",desc:"Swift Package Manager gains binary dependencies, resources, and more",link:"/hackingwithswift.com/swift/5.3/spm-improvements.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n("p",null,[n("a",A,[s(o,{icon:"fas fa-file-zipper"}),i("Download Swift 5.3 playground")])])])])}const N=p(g,[["render",M],["__file","where-clauses.html.vue"]]),z=JSON.parse('{"path":"/hackingwithswift.com/swift/5.3/where-clauses.html","title":"where clauses on contextually generic declarations","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"where clauses on contextually generic declarations","description":"Article(s) > where clauses on contextually generic declarations","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-5.3"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > where clauses on contextually generic declarations"},{"property":"og:description","content":"where clauses on contextually generic declarations"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.3/where-clauses.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.3/where-clauses.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"where clauses on contextually generic declarations"}],["meta",{"property":"og:description","content":"Article(s) > where clauses on contextually generic declarations"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.3"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"where clauses on contextually generic declarations\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.88,"words":563},"filePathRelative":"hackingwithswift.com/swift/5.3/where-clauses.md","excerpt":"\\n"}');export{N as comp,z as data};
