import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as n,t as u,e as s,n as e,g as i,d as t,a as h,f as c,r as l,o as m}from"./app-BgNevrm5.js";const g={},f={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},k=n("nav",{class:"table-of-contents"},[n("ul")],-1),b=n("hr",null,null,-1),y=n("blockquote",null,[n("p",null,"Available from Swift 5.3")],-1),v={href:"https://github.com/apple/swift-evolution/blob/master/proposals/0281-main-attribute.md",target:"_blank",rel:"noopener noreferrer"},_=n("code",null,"apple/swift-evolution",-1),S=n("code",null,"@main",-1),C=n("code",null,"main.swift",-1),T=c(`<div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">OldApp</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Running!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">let</span> app <span class="token operator">=</span> <span class="token class-name">OldApp</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">app<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),A=n("code",null,"main.swift",-1),x=n("code",null,"App",-1),M=n("code",null,"main.swift",-1),N=n("code",null,"@main",-1),R=n("code",null,"main()",-1),P=c(`<div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@main</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">NewApp</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">static</span> <span class="token keyword">func</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Running!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When that runs, Swift will automatically call <code>NewApp.main()</code> to start your code.</p><p>The new <code>@main</code> attribute will be familiar to UIKit and AppKit developers, where we use <code>@UIApplicationMain</code> and <code>@NSApplicationMain</code> to mark our app delegates.</p><p>However, there are some provisos you should be aware of when using <code>@main</code>:</p>`,4),V=n("code",null,"main.swift",-1),q=n("li",null,[t("You may not have more than one "),n("code",null,"@main"),t(" attribute")],-1),E=n("li",null,[t("The "),n("code",null,"@main"),t(" attribute can be applied only to a base class – it will "),n("em",null,"not"),t(" be inherited by any subclasses.")],-1),I={class:"hint-container details"},z=n("summary",null,"Other Changes in Swift 5.3",-1),F={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-5-2-to-5-3.playground.zip",target:"_blank",rel:"noopener noreferrer"};function K(r,O){const a=l("VPCard"),o=l("FontIcon");return m(),d("div",null,[n("h1",f,[n("a",w,[n("span",null,u(r.$frontmatter.title)+" 관련",1)])]),s(a,e(i({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k,b,s(a,e(i({title:"Type-based program entry points | Changes in Swift 5.3",desc:"Type-based program entry points",link:"https://hackingwithswift.com/swift/5.3/atmain",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),y,n("p",null,[n("a",v,[t("SE-0281 ("),s(o,{icon:"iconfont icon-github"}),_,t(")")]),t(" introduced a new "),S,t(" attribute to allow us to declare where the entry point for a program is. This allows us to control exactly which part of our code should start running, which is particularly useful for command-line programs.")]),n("p",null,[t("For example, when creating a terminal app previously we needed to create a file called "),s(o,{icon:"fa-brands fa-swift"}),C,t(" that was able to bootstrap our code:")]),T,n("p",null,[t("Swift automatically considered code in "),s(o,{icon:"fa-brands fa-swift"}),A,t(" to be top-level code, so it would create the "),x,t(" instance and run it. That is still the case even after SE-0281, but now if you want to you can remove "),s(o,{icon:"fa-brands fa-swift"}),M,t(" and instead use the "),N,t(" attribute to mark a struct or base class that contains a static "),R,t(" method to be used as the program’s entry point:")]),P,n("ul",null,[n("li",null,[t("You may not use this attribute in an app that already has a "),s(o,{icon:"fa-brands fa-swift"}),V,t(" file.")]),q,E]),n("details",I,[z,s(a,e(i({title:"Multi-pattern catch clauses | Changes in Swift 5.3",desc:"Multi-pattern catch clauses",link:"/hackingwithswift.com/swift/5.3/multipattern-catch.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,e(i({title:"Multiple trailing closures | Changes in Swift 5.3",desc:"Multiple trailing closures",link:"/hackingwithswift.com/swift/5.3/multiple-trailing-closures.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,e(i({title:"Synthesized Comparable conformance for enums | Changes in Swift 5.3",desc:"Synthesized Comparable conformance for enums",link:"/hackingwithswift.com/swift/5.3/synthesized-comparable-enum.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,e(i({title:"self is no longer required in many places | Changes in Swift 5.3",desc:"self is no longer required in many places",link:"/hackingwithswift.com/swift/5.3/removing-self.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),h(` 
\`\`\`component VPCard
{
  "title": "Type-based program entry points | Changes in Swift 5.3",
  "desc": "Type-based program entry points",
  "link": "/hackingwithswift.com/swift/5.3/atmain.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),s(a,e(i({title:"where clauses on contextually generic declarations | Changes in Swift 5.3",desc:"where clauses on contextually generic declarations",link:"/hackingwithswift.com/swift/5.3/where-clauses.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,e(i({title:"Enum cases as protocol witnesses | Changes in Swift 5.3",desc:"Enum cases as protocol witnesses",link:"/hackingwithswift.com/swift/5.3/enum-protocol-witnesses.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,e(i({title:"Refined didSet semantics | Changes in Swift 5.3",desc:"Refined didSet semantics",link:"/hackingwithswift.com/swift/5.3/refined-didset.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,e(i({title:"A new Float16 type | Changes in Swift 5.3",desc:"A new Float16 type",link:"/hackingwithswift.com/swift/5.3/float16.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,e(i({title:"Swift Package Manager gains binary dependencies, resources, and more | Changes in Swift 5.3",desc:"Swift Package Manager gains binary dependencies, resources, and more",link:"/hackingwithswift.com/swift/5.3/spm-improvements.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n("p",null,[n("a",F,[s(o,{icon:"fas fa-file-zipper"}),t("Download Swift 5.3 playground")])])])])}const j=p(g,[["render",K],["__file","atmain.html.vue"]]),D=JSON.parse('{"path":"/hackingwithswift.com/swift/5.3/atmain.html","title":"Type-based program entry points","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Type-based program entry points","description":"Article(s) > Type-based program entry points","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-5.3"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Type-based program entry points"},{"property":"og:description","content":"Type-based program entry points"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.3/atmain.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.3/atmain.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"Type-based program entry points"}],["meta",{"property":"og:description","content":"Article(s) > Type-based program entry points"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.3"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Type-based program entry points\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.43,"words":730},"filePathRelative":"hackingwithswift.com/swift/5.3/atmain.md","excerpt":"\\n"}');export{j as comp,D as data};
