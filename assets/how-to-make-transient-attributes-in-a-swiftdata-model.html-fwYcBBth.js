import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as a,t as p,e as t,n as s,g as e,f as r,r as c,o as u}from"./app-BgNevrm5.js";const d={},m={id:"frontmatter-title-관련",tabindex:"-1"},k={class:"header-anchor",href:"#frontmatter-title-관련"},h=a("nav",{class:"table-of-contents"},[a("ul")],-1),w=a("hr",null,null,-1),f=r(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftData automatically saves all stored property into its data storage. If you don’t want that – if you have temporary data that is needed only while your program is running – then you can mark it using the <code>@Transient</code> macro so that SwiftData treats it as ephemeral and disposable, so it won’t be saved along with the rest of your data.</p><p>For example, if you were building a game, you might want to track how many levels a player has completed in the current run so you can suggest they take a break after a while, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@Model</span> <span class="token keyword">class</span> <span class="token class-name">Player</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">var</span> score<span class="token punctuation">:</span> <span class="token class-name">Int</span></span>
<span class="line">    <span class="token attribute atrule">@Transient</span> <span class="token keyword">var</span> levelsPlayed <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">init</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> score<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>score <span class="token operator">=</span> score</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That starts with a default value of 0 when your app runs, and will automatically reset to 0 when the app terminates – it won’t be stored inside SwiftData.</p><p>SwiftData automatically saves only the <em>stored</em> properties of your models – any computed properties are automatically transient. For example, if we wanted to put our <code>Player</code> model into a high score table, we might add a computed property that shows both their name and score:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@Model</span> <span class="token keyword">class</span> <span class="token class-name">Player</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">var</span> score<span class="token punctuation">:</span> <span class="token class-name">Int</span></span>
<span class="line">    <span class="token attribute atrule">@Transient</span> <span class="token keyword">var</span> levelsPlayed <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> highScoreEntry<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string-literal"><span class="token string">&quot;</span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">name</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> scored </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">score</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string"> points&quot;</span></span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">init</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> score<span class="token punctuation">:</span> <span class="token class-name">Int</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name</span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span>score <span class="token operator">=</span> score</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>There are two important things to remember when working with transient properties in SwiftData:</p><ol><li>Transient properties cannot be used in SwiftData query predicates because the actual data you’re working with doesn’t exist on disk. <strong>Attempting to use a transient property will compile just fine, but crash at runtime.</strong></li><li>Transient properties must always have a default value as shown above, so that when you create a new object or when an existing one is fetched from disk, there’s always a value present.</li></ol>`,9);function g(i,b){const n=c("VPCard");return u(),l("div",null,[a("h1",m,[a("a",k,[a("span",null,p(i.$frontmatter.title)+" 관련",1)])]),t(n,s(e({title:"SwiftData by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftdata/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),h,w,t(n,s(e({title:"How to make transient attributes in a SwiftData model | SwiftData by Example",desc:"How to make transient attributes in a SwiftData model",link:"https://hackingwithswift.com/quick-start/swiftdata/how-to-make-transient-attributes-in-a-swiftdata-model",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f])}const S=o(d,[["render",g],["__file","how-to-make-transient-attributes-in-a-swiftdata-model.html.vue"]]),_=JSON.parse('{"path":"/hackingwithswift.com/swiftdata/how-to-make-transient-attributes-in-a-swiftdata-model.html","title":"How to make transient attributes in a SwiftData model","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to make transient attributes in a SwiftData model","description":"Article(s) > How to make transient attributes in a SwiftData model","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftdata","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to make transient attributes in a SwiftData model"},{"property":"og:description","content":"How to make transient attributes in a SwiftData model"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/how-to-make-transient-attributes-in-a-swiftdata-model.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/how-to-make-transient-attributes-in-a-swiftdata-model.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to make transient attributes in a SwiftData model"}],["meta",{"property":"og:description","content":"Article(s) > How to make transient attributes in a SwiftData model"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftdata"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2023-09-30T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to make transient attributes in a SwiftData model\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-30T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2023-09-30T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.57,"words":470},"filePathRelative":"hackingwithswift.com/swiftdata/how-to-make-transient-attributes-in-a-swiftdata-model.md","localizedDate":"2023년 9월 30일","excerpt":"\\n"}');export{S as comp,_ as data};
