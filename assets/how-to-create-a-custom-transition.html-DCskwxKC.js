import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,t as u,e as s,n as t,g as e,d,f as k,r as i,o as m}from"./app-BgNevrm5.js";const h={},w={id:"frontmatter-title-관련",tabindex:"-1"},v={class:"header-anchor",href:"#frontmatter-title-관련"},b=n("nav",{class:"table-of-contents"},[n("ul")],-1),f=n("hr",null,null,-1),g=k(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>Although SwiftUI comes with a selection of transitions built in, it’s also possible to write entirely custom transitions if we want to.</p><p>The process takes three steps:</p><ol><li>Create a <code>ViewModifier</code> that represents your transition at any of its states.</li><li>Create an <code>AnyTransition</code> extension that uses your view modifier for active and identity states.</li><li>Apply that transition to your views using the <code>transition()</code> modifier.</li></ol><p>For example, we could write a shape and view modifier combination that lets us mimic the Iris animation in Keynote – it causes a new slide to appear in a circle that grows upwards, a bit like the old Looney Tunes intro sequence.</p><p>To demonstrate this in action, I’m going to show you a complete code example that does several things:</p><ol><li>Defines a <code>ScaledCircle</code> shape that creates a circle inside a rectangle that is scaled according to some animatable data.</li><li>Create a custom <code>ViewModifier</code> struct to apply any shape (in our case, the scaled circle) as a clip shape for another view.</li><li>Wraps that in an <code>AnyTransition</code> extension to wrap that modifier in a transition for easier access.</li><li>Creates a SwiftUI view to demonstrate our transition in action.</li></ol><p>Here’s the code, with added comments to explain what’s going on:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ScaledCircle</span><span class="token punctuation">:</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// This controls the size of the circle inside the</span></span>
<span class="line">    <span class="token comment">// drawing rectangle. When it&#39;s 0 the circle is</span></span>
<span class="line">    <span class="token comment">// invisible, and when it’s 1 the circle fills</span></span>
<span class="line">    <span class="token comment">// the rectangle.</span></span>
<span class="line">    <span class="token keyword">var</span> animatableData<span class="token punctuation">:</span> <span class="token class-name">Double</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">path</span><span class="token punctuation">(</span><span class="token keyword">in</span> rect<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Path</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> maximumCircleRadius <span class="token operator">=</span> <span class="token function">sqrt</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>width <span class="token operator">*</span> rect<span class="token punctuation">.</span>width <span class="token operator">+</span> rect<span class="token punctuation">.</span>height <span class="token operator">*</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">let</span> circleRadius <span class="token operator">=</span> maximumCircleRadius <span class="token operator">*</span> animatableData</span>
<span class="line"></span>
<span class="line">        <span class="token keyword">let</span> x <span class="token operator">=</span> rect<span class="token punctuation">.</span>midX <span class="token operator">-</span> circleRadius <span class="token operator">/</span> <span class="token number">2</span></span>
<span class="line">        <span class="token keyword">let</span> y <span class="token operator">=</span> rect<span class="token punctuation">.</span>midY <span class="token operator">-</span> circleRadius <span class="token operator">/</span> <span class="token number">2</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">let</span> circleRect <span class="token operator">=</span> <span class="token class-name">CGRect</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> x<span class="token punctuation">,</span> y<span class="token punctuation">:</span> y<span class="token punctuation">,</span> width<span class="token punctuation">:</span> circleRadius<span class="token punctuation">,</span> height<span class="token punctuation">:</span> circleRadius<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">path</span><span class="token punctuation">(</span><span class="token keyword">in</span><span class="token punctuation">:</span> circleRect<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// A general modifier that can clip any view using a any shape.</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ClipShapeModifier</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Shape</span><span class="token operator">&gt;</span><span class="token punctuation">:</span> <span class="token class-name">ViewModifier</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> shape<span class="token punctuation">:</span> <span class="token class-name">T</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">body</span><span class="token punctuation">(</span>content<span class="token punctuation">:</span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        content<span class="token punctuation">.</span><span class="token function">clipShape</span><span class="token punctuation">(</span>shape<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// A custom transition combining ScaledCircle and ClipShapeModifier.</span></span>
<span class="line"><span class="token keyword">extension</span> <span class="token class-name">AnyTransition</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">static</span> <span class="token keyword">var</span> iris<span class="token punctuation">:</span> <span class="token class-name">AnyTransition</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">modifier</span><span class="token punctuation">(</span></span>
<span class="line">            active<span class="token punctuation">:</span> <span class="token class-name">ClipShapeModifier</span><span class="token punctuation">(</span>shape<span class="token punctuation">:</span> <span class="token class-name">ScaledCircle</span><span class="token punctuation">(</span>animatableData<span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            identity<span class="token punctuation">:</span> <span class="token class-name">ClipShapeModifier</span><span class="token punctuation">(</span>shape<span class="token punctuation">:</span> <span class="token class-name">ScaledCircle</span><span class="token punctuation">(</span>animatableData<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// An example view move showing and hiding a red</span></span>
<span class="line"><span class="token comment">// rectangle using our transition.</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> isShowingRed <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ZStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Color</span><span class="token punctuation">.</span>blue</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">if</span> isShowingRed <span class="token punctuation">{</span></span>
<span class="line">                <span class="token class-name">Color</span><span class="token punctuation">.</span>red</span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">transition</span><span class="token punctuation">(</span><span class="token punctuation">.</span>iris<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">zIndex</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">padding</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span>easeInOut<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                isShowingRed<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-a-custom-transition-1.zip",target:"_blank",rel:"noopener noreferrer"},_={class:"hint-container details"},S=n("summary",null,"Similar solutions…",-1);function x(o,C){const a=i("VPCard"),c=i("FontIcon"),p=i("VidStack");return m(),r("div",null,[n("h1",w,[n("a",v,[n("span",null,u(o.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),b,f,s(a,t(e({title:"How to create a custom transition | SwiftUI by Example",desc:"How to create a custom transition",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-create-a-custom-transition",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),g,n("blockquote",null,[n("p",null,[n("a",y,[s(c,{icon:"fas fa-file-zipper"}),d("Download this as an Xcode project")])])]),s(p,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-a-custom-transition-1~dark.mp4"}),n("details",_,[S,s(a,t(e({title:"How to make views scroll with a custom transition | SwiftUI by Example",desc:"How to make views scroll with a custom transition",link:"/hackingwithswift.com/swiftui/how-to-make-views-scroll-with-a-custom-transition.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to add and remove views with a transition | SwiftUI by Example",desc:"How to add and remove views with a transition",link:"/hackingwithswift.com/swiftui/how-to-add-and-remove-views-with-a-transition.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to create and compose custom views | SwiftUI by Example",desc:"How to create and compose custom views",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-create-and-compose-custom-views",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to create custom animated drawings with TimelineView and Canvas | SwiftUI by Example",desc:"How to create custom animated drawings with TimelineView and Canvas",link:"/hackingwithswift.com/swiftui/how-to-create-custom-animated-drawings-with-timelineview-and-canvas.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to create custom bindings | SwiftUI by Example",desc:"How to create custom bindings",link:"/hackingwithswift.com/swiftui/how-to-create-custom-bindings.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const A=l(h,[["render",x],["__file","how-to-create-a-custom-transition.html.vue"]]),T=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-create-a-custom-transition.html","title":"How to create a custom transition","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to create a custom transition","description":"Article(s) > How to create a custom transition","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to create a custom transition"},{"property":"og:description","content":"How to create a custom transition"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-a-custom-transition.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-a-custom-transition.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to create a custom transition"}],["meta",{"property":"og:description","content":"Article(s) > How to create a custom transition"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to create a custom transition\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.6,"words":780},"filePathRelative":"hackingwithswift.com/swiftui/how-to-create-a-custom-transition.md","excerpt":"\\n"}');export{A as comp,T as data};
