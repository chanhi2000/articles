import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,b as e,t as l,e as t,n as a,g as s,f as r,r as p,o as d}from"./app-BgNevrm5.js";const u={},h={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},f=e("nav",{class:"table-of-contents"},[e("ul")],-1),m=e("hr",null,null,-1),k=r(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>Swift lets us perform async operations using both <code>await</code> and <code>async let</code>, but although they both run some async code they don’t quite run the same: <code>await</code> waits for the work to complete so we can read its result, whereas <code>async let</code> does not.</p><p>Which you choose depends on the kind of work you’re trying to do. For example, if you want to make two network requests where one relates to the other, you might have code like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">let</span> first <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">requestFirstData</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">let</span> second <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">requestSecondData</span><span class="token punctuation">(</span>using<span class="token punctuation">:</span> first<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>There the call to <code>requestSecondData()</code> cannot start until the call to <code>requestFirstData()</code> has completed and returned its value – it just doesn’t make sense for those two to run simultaneously.</p><p>On the other hand, if you’re making several completely different requests – perhaps you want to download the latest news, the weather forecast, and check whether an app update was available – then those things do <em>not</em> rely on each other to complete and would be great candidates for <code>async let</code>:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">func</span> <span class="token function-definition function">getAppData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token operator">-&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token class-name">News</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token class-name">Weather</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">Bool</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">async</span> <span class="token keyword">let</span> news <span class="token operator">=</span> <span class="token function">getNews</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">async</span> <span class="token keyword">let</span> weather <span class="token operator">=</span> <span class="token function">getWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">async</span> <span class="token keyword">let</span> hasUpdate <span class="token operator">=</span> <span class="token function">getAppUpdateAvailable</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token keyword">await</span> <span class="token punctuation">(</span>news<span class="token punctuation">,</span> weather<span class="token punctuation">,</span> hasUpdate<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>So, use <code>await</code> when it’s important you have a value before continuing, and <code>async let</code> when your work can continue without the value for the time being – you can always use <code>await</code> later on when it’s actually needed.</p>`,8),y={class:"hint-container details"},g=e("summary",null,"Similar solutions…",-1);function b(o,v){const n=p("VPCard");return d(),i("div",null,[e("h1",h,[e("a",w,[e("span",null,l(o.$frontmatter.title)+" 관련",1)])]),t(n,a(s({title:"Swift Concurrency by Example",desc:"Back to Home",link:"/hackingwithswift.com/concurrency/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,m,t(n,a(s({title:"What’s the difference between await and async let? | Swift Concurrency by Example",desc:"What’s the difference between await and async let?",link:"https://hackingwithswift.com/quick-start/concurrency/whats-the-difference-between-await-and-async-let",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k,e("details",y,[g,t(n,a(s({title:"How to call an async function using async let | Swift Concurrency by Example",desc:"How to call an async function using async let",link:"/hackingwithswift.com/concurrency/how-to-call-an-async-function-using-async-let.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,a(s({title:"What’s the difference between async let, tasks, and task groups? | Swift Concurrency by Example",desc:"What’s the difference between async let, tasks, and task groups?",link:"/hackingwithswift.com/concurrency/whats-the-difference-between-async-let-tasks-and-task-groups.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,a(s({title:"How to loop over an AsyncSequence using for await | Swift Concurrency by Example",desc:"How to loop over an AsyncSequence using for await",link:"/hackingwithswift.com/concurrency/how-to-loop-over-an-asyncsequence-using-for-await.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,a(s({title:"How to manipulate an AsyncSequence using map(), filter(), and more | Swift Concurrency by Example",desc:"How to manipulate an AsyncSequence using map(), filter(), and more",link:"/hackingwithswift.com/concurrency/how-to-manipulate-an-asyncsequence-using-map-filter-and-more.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(n,a(s({title:"How to use continuations to convert completion handlers into async functions | Swift Concurrency by Example",desc:"How to use continuations to convert completion handlers into async functions",link:"/hackingwithswift.com/concurrency/how-to-use-continuations-to-convert-completion-handlers-into-async-functions.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const x=c(u,[["render",b],["__file","whats-the-difference-between-await-and-async-let.html.vue"]]),q=JSON.parse('{"path":"/hackingwithswift.com/concurrency/whats-the-difference-between-await-and-async-let.html","title":"What’s the difference between await and async let?","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"What’s the difference between await and async let?","description":"Article(s) > What’s the difference between await and async let?","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > What’s the difference between await and async let?"},{"property":"og:description","content":"What’s the difference between await and async let?"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/concurrency/whats-the-difference-between-await-and-async-let.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/concurrency/whats-the-difference-between-await-and-async-let.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"What’s the difference between await and async let?"}],["meta",{"property":"og:description","content":"Article(s) > What’s the difference between await and async let?"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2023-01-19T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"What’s the difference between await and async let?\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-01-19T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2023-01-19T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.12,"words":637},"filePathRelative":"hackingwithswift.com/concurrency/whats-the-difference-between-await-and-async-let.md","localizedDate":"2023년 1월 19일","excerpt":"\\n"}');export{x as comp,q as data};
