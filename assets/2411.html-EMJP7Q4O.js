import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as v,b as n,t as b,e as a,n as g,g as h,w as t,d as s,f as i,r as p,o as f}from"./app-BgNevrm5.js";const y={},_={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},S={class:"table-of-contents"},B=n("hr",null,null,-1),F=i('<p>그래프 알고리즘(Graph Algorithms)은 네트워크 분석, 경로 찾기, 최적화 문제 등 다양한 문제를 해결하는 데 사용되는 중요한 알고리즘입니다. 이번 글에서는 그래프에 관한 기본 개념과 구현 방법을 살펴보고, 그래프 알고리즘 중 가장 많이 사용되는 너비 우선 탐색(BFS), 깊이 우선 탐색(DFS)의 작동 방식을 알아보겠습니다. 또한 어떤 분야에서 그래프 알고리즘을 활용할 수 있는지도 함께 정리해 보았습니다.</p><hr><h2 id="그래프-알고리즘-개요" tabindex="-1"><a class="header-anchor" href="#그래프-알고리즘-개요"><span>그래프 알고리즘 개요</span></a></h2><h3 id="_1-그래프의-기본-개념" tabindex="-1"><a class="header-anchor" href="#_1-그래프의-기본-개념"><span>1) 그래프의 기본 개념</span></a></h3><p>그래프는 <strong>정점</strong>(Vertex, 또는 노드(Node)라고도 함)과 이들을 연결하는 <strong>간선</strong>(Edge)으로 구성된 자료구조를 말합니다. 방향성이 있는 <strong>방향 그래프</strong>(Directed Graph)와 방향성이 없는 <strong>무방향 그래프</strong>(Undirected Graph)로 나뉘며, 간선에 <strong>가중치</strong>(Weight)가 있을 수도 있습니다. 이러한 그래프 자료구조는 컴퓨터 네트워크, 교통 시스템, 소셜 미디어와 같은 다양한 현실 세계의 문제를 모델링하는데 사용됩니다.</p><p><img src="https://yozm.wishket.com/media/news/2411/1__그래프_기본_개념.png" alt="" loading="lazy">그래프 자료구조</p><h3 id="_2-그래프-구현-방법" tabindex="-1"><a class="header-anchor" href="#_2-그래프-구현-방법"><span>2) 그래프 구현 방법</span></a></h3><p>그래프를 구현하는 방법으로는 <strong>인접 리스트</strong>(Adjacency List)와 <strong>인접 행렬</strong>(Adjacency Matrix)을 사용하는 방법이 있습니다. <strong>인접 리스트</strong>는 각 정점에 대해 연결된 모든 정점의 리스트를 저장하는 방식으로, 특정 정점과 인접한 정점들을 바로 알 수 있다는 장점이 있습니다.</p><figure><img src="https://yozm.wishket.com/media/news/2411/2__그래프_구현_방법.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>반면 <strong>인접 행렬</strong>은 2차원 배열을 사용하여 노드 간의 연결 관계를 행렬 형태로 나타내는 방식입니다. 노드 간의 연결 여부를 빠르게 확인할 수 있다는 장점이 있지만, 모든 각 정점에 관한 관계를 기록하기 때문에 메모리 소비가 더 크다는 단점이 있습니다. 따라서 인접 행렬은 그래프 간선이 많은 그래프에 주로 사용하고, 인접 리스트는 상대적으로 간선이 적은 그래프에서 주로 사용합니다.</p><hr><h2 id="그래프-알고리즘-종류" tabindex="-1"><a class="header-anchor" href="#그래프-알고리즘-종류"><span>그래프 알고리즘 종류</span></a></h2><h3 id="_1-그래프-탐색-알고리즘" tabindex="-1"><a class="header-anchor" href="#_1-그래프-탐색-알고리즘"><span>1) 그래프 탐색 알고리즘</span></a></h3><p>그래프 탐색 알고리즘(Graph Search Algorithms)은 그래프에서 특정 정점을 찾는 알고리즘을 말합니다. 이렇게 그래프 내 특정 정점을 찾기 위해서는 그래프의 각 정점을 순회하면서 방문해야 하므로, 그래프 순회 알고리즘(Graph Traversal Algorithms)으로 부르기도 합니다. 기본적인 그래프 탐색 알고리즘 종류로는 <strong>너비 우선 탐색</strong>(BFS)과 <strong>깊이 우선 탐색</strong>(DFS)이 있습니다.</p><h3 id="_2-최단-경로-알고리즘" tabindex="-1"><a class="header-anchor" href="#_2-최단-경로-알고리즘"><span>2) 최단 경로 알고리즘</span></a></h3><p>최단 경로 알고리즘은 가중치가 있는 그래프에서 두 정점 간의 <strong>최소 가중치 합</strong>을 가지는 경로를 찾는 알고리즘을 말합니다. 대표적인 최단 경로 알고리즘으로는 <strong>다익스트라 알고리즘</strong>(Dijkstra Algorithm), <strong>벨만-포드 알고리즘</strong>(Bellman-Ford Algorithm), <strong>플로이드 알고리즘</strong>(Floyd Algorithm) 등이 있으며, 네트워크 설계, 교통 시스템 최적화, 지리적 경로 탐색 등 다양한 분야에서 경로 최적화 문제를 해결하는 데 활용됩니다.</p><h3 id="_3-그-밖의-그래프-알고리즘" tabindex="-1"><a class="header-anchor" href="#_3-그-밖의-그래프-알고리즘"><span>3) 그 밖의 그래프 알고리즘</span></a></h3><p>그래프 알고리즘에는 그래프 탐색과 최단 경로 찾기 외에도 다양한 알고리즘이 있습니다. 그중 하나인 <strong>위상 정렬</strong>(Topological Sorting) 알고리즘은 방향성이 있는 그래프에서 각 정점을 선후 관계에 따라 나열하는 알고리즘입니다. 이는 주로 의존성이 있는 여러 작업을 순서대로 정렬하는 데 사용되며, 프로젝트 스케줄링이나 컴파일러의 작업 순서 결정 등에 활용되고 있습니다.</p><p>이 밖에그래프의 모든 정점을 최소한의 간선으로 연결하는 부분 그래프를 찾는 **최소 신장 트리(Minimum Spanning Tree)**알고리즘도 있습니다. 최소 신장 트리 알고리즘은 네트워크 설계, 클러스터링, 물리적 인프라 계획 등에서 중요한 역할을 합니다. 대표적인 최소 신장 트리 알고리즘으로는 <strong>크루스칼</strong>(Kruskal) 알고리즘과 <strong>프림</strong>(Prim) 알고리즘이 있습니다.</p><hr><h2 id="너비-우선-탐색과-깊이-우선-탐색-비교" tabindex="-1"><a class="header-anchor" href="#너비-우선-탐색과-깊이-우선-탐색-비교"><span>너비 우선 탐색과 깊이 우선 탐색 비교</span></a></h2><h3 id="_1-bfs-작동-방식" tabindex="-1"><a class="header-anchor" href="#_1-bfs-작동-방식"><span>1) BFS 작동 방식</span></a></h3><p>이번에는 그래프 알고리즘 중에서 가장 많이 사용되는 너비 우선 탐색(BFS, Breath-First Search)과 깊이 우선 탐색(DFS, Depth-First Search) 알고리즘의 작동 방식과 장단점을 살펴보겠습니다. 먼저 <strong>BFS</strong>는 그래프 탐색 시 <strong>가까운 인접 정점을 모두 방문한 후,</strong> 그다음 가까운 인접 정점을 방문하는 방식의 그래프 탐색 알고리즘을 말합니다.</p><figure><img src="https://yozm.wishket.com/media/news/2411/3__BFS_작동_방식.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>위와 같은 무방향 그래프에서 같은 레벨인 경우 오름차순으로 방문한다고 했을 때, BFS는 정점 1번부터 시작해서 <strong>인접한 정점들을 모두 방문</strong>하고 다음 차례의 정점에 대해 인접한 정점 중 아직 방문하지 않은 정점을 방문하는 식으로 탐색이 진행됩니다.</p><p>따라서 위 그래프의 BFS 탐색은 1번에 인접한 같은 레벨의 정점인 2, 3, 8번을 오름차순으로 방문하면서 시작합니다. 다음으로 2번 정점에 인접하면서 아직 방문하지 않은 정점인 6번 정점을 방문하고, 다음으로 3번 정점에 인접하면서 아직 방문하지 않은 정점인 4, 5를 오름차순으로 방문합니다. 마지막으로 6번 정점과 인접한 7번 정점을 방문하고 탐색이 종료됩니다.</p><p>이제 BFS를 구현한 <strong>자바 코드 예시</strong>를 보겠습니다.</p>',27),j=n("p",null,[n("code",null,"BFS"),s(" 클래스에는 그래프를 구현하기 위한 인접 리스트와 정점과 간선을 추가할 수 있는 메서드가 있습니다.")],-1),E=n("div",{class:"language-java line-numbers-mode","data-highlighter":"prismjs","data-ext":"java","data-title":"java"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"HashMap")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"List")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Map")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ArrayList")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Queue")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"LinkedList")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Set")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"HashSet")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"BFS"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// BFS 탐색을 위한 인접 리스트")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"final"),s(),n("span",{class:"token class-name"},"Map"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(" graph"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// 생성자, 인접 리스트 초기화")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token function"},"BFS"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    graph "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"HashMap"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// 정점 추가")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"addVertex"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" vertex"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),s("vertex"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ArrayList"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// 간선 추가")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" source"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" destination"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"containsKey"),n("span",{class:"token punctuation"},"("),s("source"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token function"},"addVertex"),n("span",{class:"token punctuation"},"("),s("source"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"containsKey"),n("span",{class:"token punctuation"},"("),s("destination"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token function"},"addVertex"),n("span",{class:"token punctuation"},"("),s("destination"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("source"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("destination"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// ... 생략 ...")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),x=n("p",null,[s("다음으로 선입선출(FIFO) 자료 구조인 "),n("strong",null,"큐(Queue)"),s(" 를 사용하여 BFS 메서드를 작성합니다. 앞서 설명한 것처럼 BFS 메서드에서는 방문한 정점의 인접 정점부터 차례대로 순회하면서 탐색을 진행합니다.")],-1),A=n("div",{class:"language-java line-numbers-mode","data-highlighter":"prismjs","data-ext":"java","data-title":"java"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"HashMap")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"List")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Map")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ArrayList")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Queue")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"LinkedList")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Set")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"HashSet")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"BFS"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// ... 생략 ...")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// BFS 탐색")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"bfs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" source"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token class-name"},"Queue"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(" queue "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"LinkedList"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token class-name"},"Set"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(" visited "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"HashSet"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"offer"),n("span",{class:"token punctuation"},"("),s("source"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    visited"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("source"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"while"),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"isEmpty"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token keyword"},"int"),s(" current "),n("span",{class:"token operator"},"="),s(" queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"poll"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"print"),n("span",{class:"token punctuation"},"("),s("current "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},'" "'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),s(" neighbor "),n("span",{class:"token operator"},":"),s(" graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("current"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("visited"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"contains"),n("span",{class:"token punctuation"},"("),s("neighbor"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("          queue"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"offer"),n("span",{class:"token punctuation"},"("),s("neighbor"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("          visited"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("neighbor"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// ... 생략 ...")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),D=n("p",null,"다음 코드는 그래프를 출력하고, 실제로 BFS가 어떻게 탐색을 진행했는지 결과를 나타내는 테스트 코드입니다.",-1),L=n("div",{class:"language-java line-numbers-mode","data-highlighter":"prismjs","data-ext":"java","data-title":"java"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"HashMap")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"List")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Map")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ArrayList")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Queue")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"LinkedList")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Set")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"HashSet")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"BFS"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// ... 생략 ...")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// 그래프 출력")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"printGraph"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),s(" vertex "),n("span",{class:"token operator"},":"),s(" graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"keySet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"print"),n("span",{class:"token punctuation"},"("),s("vertex "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},'" -> "'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),s(" neighbor "),n("span",{class:"token operator"},":"),s(" graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("vertex"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"print"),n("span",{class:"token punctuation"},"("),s("neighbor "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},'" "'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token class-name"},"BFS"),s(" bfs "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"BFS"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    bfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    bfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    bfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    bfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    bfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    bfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    bfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    bfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    bfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    bfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"printGraph"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"BFS: start from vertex 1"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    bfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"bfs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),z=i(`<p>앞서 살펴본 예시 그래프에 대해 BFS를 수행하면 <code>1 &gt; 2 &gt; 3 &gt; 8 &gt; 6 &gt; 4 &gt; 5 &gt; 7</code>로 탐색 결과가 나오는 것을 볼 수 있습니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">java</span> <span class="token parameter variable">-cp</span> ./BFS.class</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># BFS 테스트 결과</span></span>
<span class="line"><span class="token comment"># 1 -&gt; 2 3 8</span></span>
<span class="line"><span class="token comment"># 2 -&gt; 6 8</span></span>
<span class="line"><span class="token comment"># 3 -&gt; 4 5</span></span>
<span class="line"><span class="token comment"># 4 -&gt; 5</span></span>
<span class="line"><span class="token comment"># 5</span></span>
<span class="line"><span class="token comment"># 6 -&gt; 7</span></span>
<span class="line"><span class="token comment"># 7 -&gt;</span></span>
<span class="line"><span class="token comment"># 8 -&gt;</span></span>
<span class="line"><span class="token comment"># BFS: start from vertex 1</span></span>
<span class="line"><span class="token comment"># 1 2 3 8 6 4 5 7</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-dfs-작동-방식" tabindex="-1"><a class="header-anchor" href="#_2-dfs-작동-방식"><span>2) DFS 작동 방식</span></a></h3><p>DFS는 출발 정점에서 <strong>최대한 깊이 갈 수 있는 정점까지</strong> 가보고, 더 이상 진행 못하지 못하는 경우 다시 돌아와서(Back Tracking) 갈림길에 있는 미방문 정점부터 탐색을 시작하는 방식을 말합니다.</p><figure><img src="https://yozm.wishket.com/media/news/2411/7__DFS_작동_방식.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>위 그래프에서 DFS를 하면 출발 정점 1번부터 시작하여 2 &gt; 6 &gt; 7번 순으로 탐색을 진행합니다. 그리고 막다른 길인 7번에서 다시 뒤로 돌아와서, 갈림길이 있는 2번 정점에서 다시 8번으로 내려가는 방식으로 진행됩니다. 이와 같은 DFS를 구현하기 위해서는 자료 구조로 <strong>스택</strong>(Stack)을 사용하거나 <strong>재귀 호출</strong> 방식(Recursion)을 이용합니다.</p><p>다음 코드는 재귀 호출을 이용한 <strong>DFS 구현 코드 예시</strong>입니다.</p>`,7),I=n("p",null,"이전의 BFS 예시 코드와 같이 먼저 DFS 클래스 내에 그래프를 구현하기 위한 인접 리스트를 생성하고, 정점과 간선을 추가할 수 있는 메서드를 만듭니다.",-1),M=n("div",{class:"language-java line-numbers-mode","data-highlighter":"prismjs","data-ext":"java","data-title":"java"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"HashMap")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"List")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Map")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ArrayList")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Collections")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"DFS"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// DFS 탐색을 위한 인접 리스트")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"final"),s(),n("span",{class:"token class-name"},"Map"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">"),n("span",{class:"token punctuation"},">")]),s(" graph"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// 생성자, 인접 리스트 초기화")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token function"},"DFS"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    graph "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"HashMap"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// 정점 추가")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"addVertex"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" vertex"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"put"),n("span",{class:"token punctuation"},"("),s("vertex"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ArrayList"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// 간선 추가")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" source"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token keyword"},"int"),s(" destination"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"containsKey"),n("span",{class:"token punctuation"},"("),s("source"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token function"},"addVertex"),n("span",{class:"token punctuation"},"("),s("source"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"containsKey"),n("span",{class:"token punctuation"},"("),s("destination"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token function"},"addVertex"),n("span",{class:"token punctuation"},"("),s("destination"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("source"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("destination"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// ... 생략 ...")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),C=n("p",null,[s("DFS는 스택 자료 구조를 사용하여 만들 수도 있지만, 여기서는 "),n("strong",null,"재귀 호출을 이용"),s(" 하여 구현했습니다. DFS 메서드에서는 정점의 방문 여부를 처리하기 위한 리스트를 생성하고, 재귀 호출 메서드인 dfsRecursive 메서드를 호출합니다. dfsRecursive 메서드에서는 번호가 낮은 순서로 방문 처리되지 않은 정점이 나올 때까지 재귀 호출을 하는 방식으로 탐색을 진행합니다.")],-1),V=n("div",{class:"language-java line-numbers-mode","data-highlighter":"prismjs","data-ext":"java","data-title":"java"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"HashMap")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"List")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Map")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ArrayList")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Collections")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"DFS"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// ... 생략 ...")]),s(`
`),n("span",{class:"line"},"  "),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// DFS 탐색")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(),n("span",{class:"token function"},"dfs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" source"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(" visited "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"ArrayList"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token punctuation"},">")]),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token function"},"dfsRecursive"),n("span",{class:"token punctuation"},"("),s("source"),n("span",{class:"token punctuation"},","),s(" visited"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"return"),s(" visited"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// DFS 재귀 메서드")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"private"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"dfsRecursive"),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" node"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(" visited"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    visited"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"add"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token comment"},"// 정렬하여 노드 번호가 낮은 순서부터 방문")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token class-name"},"Collections"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"sort"),n("span",{class:"token punctuation"},"("),s("graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token keyword"},"int"),s(" neighbor "),n("span",{class:"token operator"},":"),s(" graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("node"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token keyword"},"if"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token operator"},"!"),s("visited"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"contains"),n("span",{class:"token punctuation"},"("),s("neighbor"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token function"},"dfsRecursive"),n("span",{class:"token punctuation"},"("),s("neighbour"),n("span",{class:"token punctuation"},","),s(" visited"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";"),s(),n("span",{class:"token comment"},"// 재귀 호출")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// ... 생략 ...")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),R=n("div",{class:"language-java line-numbers-mode","data-highlighter":"prismjs","data-ext":"java","data-title":"java"},[n("pre",null,[n("code",null,[n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"HashMap")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"List")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Map")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"ArrayList")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"import"),s(),n("span",{class:"token import"},[n("span",{class:"token namespace"},[s("java"),n("span",{class:"token punctuation"},"."),s("util"),n("span",{class:"token punctuation"},".")]),n("span",{class:"token class-name"},"Collections")]),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"class"),s(),n("span",{class:"token class-name"},"DFS"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// ... 생략 ...")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token comment"},"// 그래프 출력")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"printGraph"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),s(" vertex "),n("span",{class:"token operator"},":"),s(" graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"keySet"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"print"),n("span",{class:"token punctuation"},"("),s("vertex "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},'" -> "'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token keyword"},"for"),s(),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"Integer"),s(" neighbor "),n("span",{class:"token operator"},":"),s(" graph"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"get"),n("span",{class:"token punctuation"},"("),s("vertex"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("        "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"print"),n("span",{class:"token punctuation"},"("),s("neighbor "),n("span",{class:"token operator"},"+"),s(),n("span",{class:"token string"},'" "'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("      "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token keyword"},"public"),s(),n("span",{class:"token keyword"},"static"),s(),n("span",{class:"token keyword"},"void"),s(),n("span",{class:"token function"},"main"),n("span",{class:"token punctuation"},"("),n("span",{class:"token class-name"},"String"),n("span",{class:"token punctuation"},"["),n("span",{class:"token punctuation"},"]"),s(" args"),n("span",{class:"token punctuation"},")"),s(),n("span",{class:"token punctuation"},"{")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token class-name"},"DFS"),s(" dfs "),n("span",{class:"token operator"},"="),s(),n("span",{class:"token keyword"},"new"),s(),n("span",{class:"token class-name"},"DFS"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    dfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    dfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    dfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    dfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    dfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"2"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"8"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    dfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    dfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"3"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    dfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"4"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"5"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    dfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"addEdge"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"6"),n("span",{class:"token punctuation"},","),s(),n("span",{class:"token number"},"7"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    dfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"printGraph"),n("span",{class:"token punctuation"},"("),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"DFS: start from vertex 1"'),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token class-name"},"List"),n("span",{class:"token generics"},[n("span",{class:"token punctuation"},"<"),n("span",{class:"token class-name"},"Integer"),n("span",{class:"token punctuation"},">")]),s(" dfsResult "),n("span",{class:"token operator"},"="),s(" dfs"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"dfs"),n("span",{class:"token punctuation"},"("),n("span",{class:"token number"},"1"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"}),s(`
`),n("span",{class:"line"},[s("    "),n("span",{class:"token class-name"},"System"),n("span",{class:"token punctuation"},"."),s("out"),n("span",{class:"token punctuation"},"."),n("span",{class:"token function"},"println"),n("span",{class:"token punctuation"},"("),n("span",{class:"token string"},'"DFS 탐색 순서: "'),s(),n("span",{class:"token operator"},"+"),s(" dfsResult"),n("span",{class:"token punctuation"},")"),n("span",{class:"token punctuation"},";")]),s(`
`),n("span",{class:"line"},[s("  "),n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"},[n("span",{class:"token punctuation"},"}")]),s(`
`),n("span",{class:"line"})])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),H=i(`<p>마지막으로 그래프를 출력하고, DFS가 어떻게 탐색을 진행했는지 살펴보죠. 아래 테스트 코드를 보면 앞서 살펴본 예시 그래프처럼 <code>1 &gt; 2 &gt; 6 &gt; 7 &gt; 8 &gt; 3 &gt; 4 &gt; 5</code>로 탐색 결과가 나오는 것을 확인할 수 있습니다.</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">java</span> <span class="token parameter variable">-cp</span> ./DFS.class</span>
<span class="line"><span class="token comment">#</span></span>
<span class="line"><span class="token comment"># 1 -&gt; 2 3 8</span></span>
<span class="line"><span class="token comment"># 2 -&gt; 6 8</span></span>
<span class="line"><span class="token comment"># 3 -&gt; 4 5</span></span>
<span class="line"><span class="token comment"># 4 -&gt; 5</span></span>
<span class="line"><span class="token comment"># 5</span></span>
<span class="line"><span class="token comment"># 6 -&gt; 7</span></span>
<span class="line"><span class="token comment"># 7 -&gt;</span></span>
<span class="line"><span class="token comment"># 8 -&gt;</span></span>
<span class="line"><span class="token comment"># DFS: start from vertex 1</span></span>
<span class="line"><span class="token comment"># DFS 탐색 순서: [1, 2, 6,7, 8, 3, 4, 5]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-두-알고리즘의-비교-및-장단점" tabindex="-1"><a class="header-anchor" href="#_3-두-알고리즘의-비교-및-장단점"><span>3) 두 알고리즘의 비교 및 장단점</span></a></h3>`,3),T=n("p",null,[s("두 알고리즘의 시간 복잡도는 그래프의 구조에 따라 달라질 수 있으나, 일반적으로 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mtext",null,"O"),n("mrow",null,[n("mo",{fence:"true"},"("),n("mtext",null,"V"),n("mo",null,"+"),n("mtext",null,"E"),n("mo",{fence:"true"},")")])]),n("annotation",{encoding:"application/x-tex"},"\\text{O}\\left(\\text{V}+\\text{E}\\right)")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord text"},[n("span",{class:"mord"},"O")]),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"minner"},[n("span",{class:"mopen delimcenter",style:{top:"0em"}},"("),n("span",{class:"mord text"},[n("span",{class:"mord"},"V")]),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mord text"},[n("span",{class:"mord"},"E")]),n("span",{class:"mclose delimcenter",style:{top:"0em"}},")")])])])]),s(" 로 표현됩니다. 여기서 V는 정점의 개수를 말하며, E는 간선의 개수를 말합니다.")],-1),G=i('<p>두 알고리즘의 장단점을 살펴보면 우선 <strong>BFS</strong>는 최단 경로를 찾는 데 유용하지만, 넓은 범위를 탐색할 때 메모리 소비가 크다는 단점이 있습니다.</p><p>반면 <strong>DFS</strong>는 메모리 소비가 적고 복잡한 경로나 사이클을 찾는 데 유리하지만, 최단 경로를 보장하지 않는다는 단점이 있습니다. 이러한 장단점에 따라 BFS는 주로 네트워크 라우팅, 소셜 네트워킹의 최단 경로 찾기 등에 사용되고, DFS는 퍼즐, 미로 찾기, 트리 구조 분석 등에 주로 사용됩니다.</p><hr><h2 id="그래프-탐색-알고리즘-활용-방법" tabindex="-1"><a class="header-anchor" href="#그래프-탐색-알고리즘-활용-방법"><span>그래프 탐색 알고리즘 활용 방법</span></a></h2><h3 id="_1-컴퓨터-네트워킹에서의-활용" tabindex="-1"><a class="header-anchor" href="#_1-컴퓨터-네트워킹에서의-활용"><span>1) 컴퓨터 네트워킹에서의 활용</span></a></h3><p>그래프 탐색 알고리즘은 컴퓨터 네트워킹 분야에서 중요한 역할을 합니다. 특히 네트워크 내에서의 <strong>데이터 패킷 전송 경로를 최적화</strong>하기 위해 최단 경로 알고리즘이 사용되는데요. 예를 들어, 라우터와 스위치는 BFS 또는 다익스트라 알고리즘을 이용하여 효율적인 데이터 전송 경로를 결정합니다.</p><h3 id="_2-소셜-네트워크-및-온라인-분야에서의-활용" tabindex="-1"><a class="header-anchor" href="#_2-소셜-네트워크-및-온라인-분야에서의-활용"><span>2) 소셜 네트워크 및 온라인 분야에서의 활용</span></a></h3><p>그래프 알고리즘은 소셜 네트워크 분석에서 <strong>사용자 간의 관계</strong> 및 <strong>커뮤니티 구조</strong>를 파악하는 데 사용되기도 합니다. 예를 들어, BFS와 DFS를 이용하여 친구 추천 시스템이나 소셜 네트워크 내에서의 영향력 있는 사용자를 식별하기도 합니다. 또한 온라인 플랫폼에서 웹 페이지 랭킹, 키워드 클러스터링, 연결 네트워크 분석 등에도 그래프 알고리즘이 중요한 역할을 합니다.</p><h3 id="_3-인공지능-및-머신러닝에서의-활용" tabindex="-1"><a class="header-anchor" href="#_3-인공지능-및-머신러닝에서의-활용"><span>3) 인공지능 및 머신러닝에서의 활용</span></a></h3><p>그래프 알고리즘은 인공지능(AI)과 머신러닝(ML) 분야에서도 여러 문제를 해결하는 데 활용됩니다. 예를 들어, 인공 지능과 관련하여 경로 탐색, 퍼즐 해결, 이미지 프로세싱 및 의사 결정 과정에서 그래프 알고리즘이 활용되며, 머신러닝 모델에서 데이터의 복잡한 관계를 파악하고 분류하는 데 사용되기도 합니다. 특히 지식 그래프와 추천 시스템, 자연어 처리(NLP) 등의 복잡한 데이터 집합 간의 숨겨진 패턴과 연결성을 탐색하고, 더욱 정확한 예측 모델을 구축하는 데 활용됩니다.</p><hr><h2 id="마치며" tabindex="-1"><a class="header-anchor" href="#마치며"><span>마치며</span></a></h2><p>지금까지 그래프의 개념과 구현 방법, 그래프 탐색 알고리즘의 기초인 BFS, DFS의 작동 방식과 활용 방법을 살펴봤습니다. 그래프 알고리즘은 다양한 분야의 문제를 해결하는 데 활용되고 있으며, 특히 인공지능과 머신러닝 분야에서 많이 사용합니다. 해당 분야에 관심이 있다면 미리 기본적인 내용을 학습해 두는 것을 추천합니다.</p>',13);function K(k,P){const r=p("VPCard"),e=p("router-link"),m=p("SiteInfo"),o=p("FontIcon"),u=p("Tabs");return f(),v("div",null,[n("h1",_,[n("a",w,[n("span",null,b(k.$frontmatter.title)+" 관련",1)])]),a(r,g(h({title:"Java > Article(s)",desc:"Article(s)",link:"/programming/java/articles/README.md",logo:"/images/ico-wind.svg",background:"rgba(10,10,10,0.2)"})),null,16),n("nav",S,[n("ul",null,[n("li",null,[a(e,{to:"#그래프-알고리즘-개요"},{default:t(()=>[s("그래프 알고리즘 개요")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#_1-그래프의-기본-개념"},{default:t(()=>[s("1) 그래프의 기본 개념")]),_:1})]),n("li",null,[a(e,{to:"#_2-그래프-구현-방법"},{default:t(()=>[s("2) 그래프 구현 방법")]),_:1})])])]),n("li",null,[a(e,{to:"#그래프-알고리즘-종류"},{default:t(()=>[s("그래프 알고리즘 종류")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#_1-그래프-탐색-알고리즘"},{default:t(()=>[s("1) 그래프 탐색 알고리즘")]),_:1})]),n("li",null,[a(e,{to:"#_2-최단-경로-알고리즘"},{default:t(()=>[s("2) 최단 경로 알고리즘")]),_:1})]),n("li",null,[a(e,{to:"#_3-그-밖의-그래프-알고리즘"},{default:t(()=>[s("3) 그 밖의 그래프 알고리즘")]),_:1})])])]),n("li",null,[a(e,{to:"#너비-우선-탐색과-깊이-우선-탐색-비교"},{default:t(()=>[s("너비 우선 탐색과 깊이 우선 탐색 비교")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#_1-bfs-작동-방식"},{default:t(()=>[s("1) BFS 작동 방식")]),_:1})]),n("li",null,[a(e,{to:"#_2-dfs-작동-방식"},{default:t(()=>[s("2) DFS 작동 방식")]),_:1})]),n("li",null,[a(e,{to:"#_3-두-알고리즘의-비교-및-장단점"},{default:t(()=>[s("3) 두 알고리즘의 비교 및 장단점")]),_:1})])])]),n("li",null,[a(e,{to:"#그래프-탐색-알고리즘-활용-방법"},{default:t(()=>[s("그래프 탐색 알고리즘 활용 방법")]),_:1}),n("ul",null,[n("li",null,[a(e,{to:"#_1-컴퓨터-네트워킹에서의-활용"},{default:t(()=>[s("1) 컴퓨터 네트워킹에서의 활용")]),_:1})]),n("li",null,[a(e,{to:"#_2-소셜-네트워크-및-온라인-분야에서의-활용"},{default:t(()=>[s("2) 소셜 네트워크 및 온라인 분야에서의 활용")]),_:1})]),n("li",null,[a(e,{to:"#_3-인공지능-및-머신러닝에서의-활용"},{default:t(()=>[s("3) 인공지능 및 머신러닝에서의 활용")]),_:1})])])]),n("li",null,[a(e,{to:"#마치며"},{default:t(()=>[s("마치며")]),_:1})])])]),B,a(m,{name:"그래프 알고리즘 종류와 활용 방법 | 요즘IT",desc:"그래프 알고리즘(Graph Algorithms)은 네트워크 분석, 경로 찾기, 최적화 문제 등 다양한 문제를 해결하는 데 사용되는 중요한 알고리즘입니다. 이번 글에서는 그래프에 관한 기본 개념과 구현 방법을 살펴보고, 그래프 알고리즘 중 가장 많이 사용되는 너비 우선 탐색(BFS), 깊이 우선 탐색(DFS)의 작동 방식을 알아보겠습니다. 또한 어떤 분야에서 그래프 알고리즘을 활용할 수 있는지도 함께 정리해 보았습니다.",url:"https://yozm.wishket.com/magazine/detail/2411/",logo:"https://yozm.wishket.com/static/renewal/img/global/gnb_yozmit.svg",preview:"https://yozm.wishket.com/media/news/2411/1__%EA%B7%B8%EB%9E%98%ED%94%84_%EA%B8%B0%EB%B3%B8_%EA%B0%9C%EB%85%90.png"}),F,n("blockquote",null,[n("p",null,[s("."),a(o,{icon:"fa-brands fa-java"}),s("BFS.java")])]),a(u,{id:"89",data:[{id:'<FontIcon icon="fa-brands fa-java"/>BFS(1/3)'},{id:'<FontIcon icon="fa-brands fa-java"/>BFS(2/3)'},{id:'<FontIcon icon="fa-brands fa-java"/>BFS(3/3)'}],active:0},{title0:t(({value:c,isActive:l})=>[a(o,{icon:"fa-brands fa-java"}),s("BFS(1/3)")]),title1:t(({value:c,isActive:l})=>[a(o,{icon:"fa-brands fa-java"}),s("BFS(2/3)")]),title2:t(({value:c,isActive:l})=>[a(o,{icon:"fa-brands fa-java"}),s("BFS(3/3)")]),tab0:t(({value:c,isActive:l})=>[j,E]),tab1:t(({value:c,isActive:l})=>[x,A]),tab2:t(({value:c,isActive:l})=>[D,L]),_:1}),z,n("blockquote",null,[n("p",null,[s("."),a(o,{icon:"fa-brands fa-java"}),s("DFS.java")])]),a(u,{id:"133",data:[{id:'<FontIcon icon="fa-brands fa-java"/>DFS(1/3)'},{id:'<FontIcon icon="fa-brands fa-java"/>DFS(2/3)'},{id:'<FontIcon icon="fa-brands fa-java"/>DFS(3/3)'}],active:0},{title0:t(({value:c,isActive:l})=>[a(o,{icon:"fa-brands fa-java"}),s("DFS(1/3)")]),title1:t(({value:c,isActive:l})=>[a(o,{icon:"fa-brands fa-java"}),s("DFS(2/3)")]),title2:t(({value:c,isActive:l})=>[a(o,{icon:"fa-brands fa-java"}),s("DFS(3/3)")]),tab0:t(({value:c,isActive:l})=>[I,M]),tab1:t(({value:c,isActive:l})=>[C,V]),tab2:t(({value:c,isActive:l})=>[R]),_:1}),H,T,G])}const O=d(y,[["render",K],["__file","2411.html.vue"]]),Q=JSON.parse('{"path":"/yozm.wishket.com/2411.html","title":"그래프 알고리즘 종류와 활용 방법","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"그래프 알고리즘 종류와 활용 방법","description":"Article(s) > 그래프 알고리즘 종류와 활용 방법","icon":"fa-brands fa-java","category":["Java","Algorithms","Article(s)"],"tag":["blog","yozm.wishket.com","java","jdk","algorithms","algorithms-bfs"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > 그래프 알고리즘 종류와 활용 방법"},{"property":"og:description","content":"그래프 알고리즘 종류와 활용 방법"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/2411.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/yozm.wishket.com/2411.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"그래프 알고리즘 종류와 활용 방법"}],["meta",{"property":"og:description","content":"Article(s) > 그래프 알고리즘 종류와 활용 방법"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://yozm.wishket.com/media/news/2411/1__%EA%B7%B8%EB%9E%98%ED%94%84_%EA%B8%B0%EB%B3%B8_%EA%B0%9C%EB%85%90.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://yozm.wishket.com/media/news/2411/1__%EA%B7%B8%EB%9E%98%ED%94%84_%EA%B8%B0%EB%B3%B8_%EA%B0%9C%EB%85%90.png"}],["meta",{"name":"twitter:image:alt","content":"그래프 알고리즘 종류와 활용 방법"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"yozm.wishket.com"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"algorithms"}],["meta",{"property":"article:tag","content":"algorithms-bfs"}],["meta",{"property":"article:published_time","content":"2024-01-11T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"그래프 알고리즘 종류와 활용 방법\\",\\"image\\":[\\"https://yozm.wishket.com/media/news/2411/1__%EA%B7%B8%EB%9E%98%ED%94%84_%EA%B8%B0%EB%B3%B8_%EA%B0%9C%EB%85%90.png\\",\\"https://yozm.wishket.com/media/news/2411/2__%EA%B7%B8%EB%9E%98%ED%94%84_%EA%B5%AC%ED%98%84_%EB%B0%A9%EB%B2%95.png\\",\\"https://yozm.wishket.com/media/news/2411/3__BFS_%EC%9E%91%EB%8F%99_%EB%B0%A9%EC%8B%9D.png\\",\\"https://yozm.wishket.com/media/news/2411/7__DFS_%EC%9E%91%EB%8F%99_%EB%B0%A9%EC%8B%9D.png\\"],\\"datePublished\\":\\"2024-01-11T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"prev":"/programming/java/articles/README.md","date":"2024-01-11T00:00:00.000Z","isOriginal":false,"cover":"https://yozm.wishket.com/media/news/2411/1__%EA%B7%B8%EB%9E%98%ED%94%84_%EA%B8%B0%EB%B3%B8_%EA%B0%9C%EB%85%90.png"},"headers":[{"level":2,"title":"그래프 알고리즘 개요","slug":"그래프-알고리즘-개요","link":"#그래프-알고리즘-개요","children":[{"level":3,"title":"1) 그래프의 기본 개념","slug":"_1-그래프의-기본-개념","link":"#_1-그래프의-기본-개념","children":[]},{"level":3,"title":"2) 그래프 구현 방법","slug":"_2-그래프-구현-방법","link":"#_2-그래프-구현-방법","children":[]}]},{"level":2,"title":"그래프 알고리즘 종류","slug":"그래프-알고리즘-종류","link":"#그래프-알고리즘-종류","children":[{"level":3,"title":"1) 그래프 탐색 알고리즘","slug":"_1-그래프-탐색-알고리즘","link":"#_1-그래프-탐색-알고리즘","children":[]},{"level":3,"title":"2) 최단 경로 알고리즘","slug":"_2-최단-경로-알고리즘","link":"#_2-최단-경로-알고리즘","children":[]},{"level":3,"title":"3) 그 밖의 그래프 알고리즘","slug":"_3-그-밖의-그래프-알고리즘","link":"#_3-그-밖의-그래프-알고리즘","children":[]}]},{"level":2,"title":"너비 우선 탐색과 깊이 우선 탐색 비교","slug":"너비-우선-탐색과-깊이-우선-탐색-비교","link":"#너비-우선-탐색과-깊이-우선-탐색-비교","children":[{"level":3,"title":"1) BFS 작동 방식","slug":"_1-bfs-작동-방식","link":"#_1-bfs-작동-방식","children":[]},{"level":3,"title":"2) DFS 작동 방식","slug":"_2-dfs-작동-방식","link":"#_2-dfs-작동-방식","children":[]},{"level":3,"title":"3) 두 알고리즘의 비교 및 장단점","slug":"_3-두-알고리즘의-비교-및-장단점","link":"#_3-두-알고리즘의-비교-및-장단점","children":[]}]},{"level":2,"title":"그래프 탐색 알고리즘 활용 방법","slug":"그래프-탐색-알고리즘-활용-방법","link":"#그래프-탐색-알고리즘-활용-방법","children":[{"level":3,"title":"1) 컴퓨터 네트워킹에서의 활용","slug":"_1-컴퓨터-네트워킹에서의-활용","link":"#_1-컴퓨터-네트워킹에서의-활용","children":[]},{"level":3,"title":"2) 소셜 네트워크 및 온라인 분야에서의 활용","slug":"_2-소셜-네트워크-및-온라인-분야에서의-활용","link":"#_2-소셜-네트워크-및-온라인-분야에서의-활용","children":[]},{"level":3,"title":"3) 인공지능 및 머신러닝에서의 활용","slug":"_3-인공지능-및-머신러닝에서의-활용","link":"#_3-인공지능-및-머신러닝에서의-활용","children":[]}]},{"level":2,"title":"마치며","slug":"마치며","link":"#마치며","children":[]}],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.37,"words":1010},"filePathRelative":"yozm.wishket.com/2411.md","localizedDate":"2024년 1월 11일","excerpt":"\\n"}');export{O as comp,Q as data};
