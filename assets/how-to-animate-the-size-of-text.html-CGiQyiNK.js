import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as k,b as n,t as d,e as s,n as t,g as e,d as p,f as c,r as i,o as m}from"./app-BgNevrm5.js";const w={},v={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},h=n("nav",{class:"table-of-contents"},[n("ul")],-1),b=n("hr",null,null,-1),g=c(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>From iOS 16 and onwards, SwiftUI can animate text beautifully right out of the box – it takes no extra work from us. So, code like this smoothly animate some text between two different sizes, re-rendering the text automatically so it’s always crisp:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> fontSize <span class="token operator">=</span> <span class="token number">32.0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, World!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Georgia&quot;</span></span><span class="token punctuation">,</span> size<span class="token punctuation">:</span> fontSize<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span>response<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> dampingFraction<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> blendDuration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">repeatForever</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    fontSize <span class="token operator">=</span> <span class="token number">72</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-animate-the-size-of-text-1.zip",target:"_blank",rel:"noopener noreferrer"},z=c(`<p>If you need to target iOS 15 and below then SwiftUI doesn’t have a built-in way to animate text size, but we can create an animatable view modifier that makes the effect possible. This is <em>not</em> the same as using a simple <code>scaleEffect()</code> modifier – that will cause your text to become blurry when scaled up, whereas this custom animation will re-render your text correctly so it looks great at all sizes.</p><p>This takes several steps:</p><p>1, Creating an animatable view modifier that accepts a name and size, and uses the size property for its animatable data. 2, Wrapping that in a <code>View</code> extension to make it easier to use. 3, Trying it out in a SwiftUI <code>View</code>.</p><p>Here’s a complete example in code:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token comment">// A modifier that animates a font through various sizes.</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">AnimatableCustomFontModifier</span><span class="token punctuation">:</span> <span class="token class-name">ViewModifier</span><span class="token punctuation">,</span> <span class="token class-name">Animatable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line">    <span class="token keyword">var</span> size<span class="token punctuation">:</span> <span class="token class-name">Double</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> animatableData<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">get</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">set</span> <span class="token punctuation">{</span> size <span class="token operator">=</span> newValue <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">body</span><span class="token punctuation">(</span>content<span class="token punctuation">:</span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        content</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">custom</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> size<span class="token punctuation">:</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// To make that easier to use, I recommend wrapping</span></span>
<span class="line"><span class="token comment">// it in a \`View\` extension, like this:</span></span>
<span class="line"><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">animatableFont</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> size<span class="token punctuation">:</span> <span class="token class-name">Double</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">modifier</span><span class="token punctuation">(</span><span class="token class-name">AnimatableCustomFontModifier</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> name<span class="token punctuation">,</span> size<span class="token punctuation">:</span> size<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// An example View trying it out</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> fontSize <span class="token operator">=</span> <span class="token number">32.0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, World!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">animatableFont</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Georgia&quot;</span></span><span class="token punctuation">,</span> size<span class="token punctuation">:</span> fontSize<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span>response<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> dampingFraction<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> blendDuration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">repeatForever</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    fontSize <span class="token operator">=</span> <span class="token number">72</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-animate-the-size-of-text-2.zip",target:"_blank",rel:"noopener noreferrer"},_=c(`<p>That’s it! To try it out, make an <code>@State</code> property to store your font size, then pass that into <code>animatableFont()</code>.</p><p>If you wanted to use Apple’s system fonts, the best way to do that is with a separate modifier. This way you can be sure your UI stays updated if the font ever changes.</p><p>Here’s how that looks:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">AnimatableSystemFontModifier</span><span class="token punctuation">:</span> <span class="token class-name">ViewModifier</span><span class="token punctuation">,</span> <span class="token class-name">Animatable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> size<span class="token punctuation">:</span> <span class="token class-name">Double</span></span>
<span class="line">    <span class="token keyword">var</span> weight<span class="token punctuation">:</span> <span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token class-name">Weight</span></span>
<span class="line">    <span class="token keyword">var</span> design<span class="token punctuation">:</span> <span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token class-name">Design</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> animatableData<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">get</span> <span class="token punctuation">{</span> size <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">set</span> <span class="token punctuation">{</span> size <span class="token operator">=</span> newValue <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">body</span><span class="token punctuation">(</span>content<span class="token punctuation">:</span> <span class="token class-name">Content</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        content</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> size<span class="token punctuation">,</span> weight<span class="token punctuation">:</span> weight<span class="token punctuation">,</span> design<span class="token punctuation">:</span> design<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">animatableSystemFont</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> <span class="token class-name">Double</span><span class="token punctuation">,</span> weight<span class="token punctuation">:</span> <span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token class-name">Weight</span> <span class="token operator">=</span> <span class="token punctuation">.</span>regular<span class="token punctuation">,</span> design<span class="token punctuation">:</span> <span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token class-name">Design</span> <span class="token operator">=</span> <span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">modifier</span><span class="token punctuation">(</span><span class="token class-name">AnimatableSystemFontModifier</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> size<span class="token punctuation">,</span> weight<span class="token punctuation">:</span> weight<span class="token punctuation">,</span> design<span class="token punctuation">:</span> design<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> fontSize <span class="token operator">=</span> <span class="token number">32.0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, World!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">animatableSystemFont</span><span class="token punctuation">(</span>size<span class="token punctuation">:</span> fontSize<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span>onTapGesture <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">withAnimation</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token function">spring</span><span class="token punctuation">(</span>response<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> dampingFraction<span class="token punctuation">:</span> <span class="token number">0.5</span><span class="token punctuation">,</span> blendDuration<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">repeatForever</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    fontSize <span class="token operator">=</span> <span class="token number">72</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-animate-the-size-of-text-3.zip",target:"_blank",rel:"noopener noreferrer"},V={href:"https://developer.apple.com/documentation/swiftui/fruta_building_a_feature-rich_app_with_swiftui",target:"_blank",rel:"noopener noreferrer"},H={class:"hint-container details"},F=n("summary",null,"Similar solutions…",-1);function A(u,q){const a=i("VPCard"),o=i("FontIcon"),l=i("VidStack");return m(),k("div",null,[n("h1",v,[n("a",f,[n("span",null,d(u.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),h,b,s(a,t(e({title:"How to animate the size of text | SwiftUI by Example",desc:"How to animate the size of text",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-animate-the-size-of-text",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),g,n("blockquote",null,[n("p",null,[n("a",y,[s(o,{icon:"fas fa-file-zipper"}),p("Download this as an Xcode project")])])]),z,n("blockquote",null,[n("p",null,[n("a",x,[s(o,{icon:"fas fa-file-zipper"}),p("Download this as an Xcode project")])])]),s(l,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-animate-the-size-of-text-1~dark.mp4"}),_,n("blockquote",null,[n("p",null,[n("a",S,[s(o,{icon:"fas fa-file-zipper"}),p("Download this as an Xcode project")])])]),s(l,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-animate-the-size-of-text-2~dark.mp4"}),n("p",null,[p("I first saw this technique applied in "),n("a",V,[s(o,{icon:"fa-brands fa-apple"}),p("Apple sample code")]),p(".")]),n("details",H,[F,s(a,t(e({title:"How to animate changes in binding values | SwiftUI by Example",desc:"How to animate changes in binding values",link:"/hackingwithswift.com/swiftui/how-to-animate-changes-in-binding-values.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to animate SF Symbols | SwiftUI by Example",desc:"How to animate SF Symbols",link:"/hackingwithswift.com/swiftui/how-to-animate-sf-symbols.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to make a fixed size Spacer | SwiftUI by Example",desc:"How to make a fixed size Spacer",link:"/hackingwithswift.com/swiftui/how-to-make-a-fixed-size-spacer.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to automatically switch between HStack and VStack based on size class | SwiftUI by Example",desc:"How to automatically switch between HStack and VStack based on size class",link:"/hackingwithswift.com/swiftui/how-to-automatically-switch-between-hstack-and-vstack-based-on-size-class.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to create different layouts using size classes | SwiftUI by Example",desc:"How to create different layouts using size classes",link:"/hackingwithswift.com/swiftui/how-to-create-different-layouts-using-size-classes.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const T=r(w,[["render",A],["__file","how-to-animate-the-size-of-text.html.vue"]]),U=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-animate-the-size-of-text.html","title":"How to animate the size of text","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to animate the size of text","description":"Article(s) > How to animate the size of text","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to animate the size of text"},{"property":"og:description","content":"How to animate the size of text"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-animate-the-size-of-text.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-animate-the-size-of-text.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to animate the size of text"}],["meta",{"property":"og:description","content":"Article(s) > How to animate the size of text"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to animate the size of text\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.1,"words":929},"filePathRelative":"hackingwithswift.com/swiftui/how-to-animate-the-size-of-text.md","excerpt":"\\n"}');export{T as comp,U as data};
