import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as e,t as l,e as o,n as s,g as r,a as t,r as h,o as p}from"./app-BgNevrm5.js";const d={},w={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},g=e("nav",{class:"table-of-contents"},[e("ul")],-1),u=e("hr",null,null,-1),y=e("blockquote",null,[e("p",null,"Available from iOS 3.0")],-1),f=e("details",{class:"hint-container details"},[e("summary",null,"Similar solutions‚Ä¶"),t(`
/quick-start/swiftui/how-to-combine-shapes-to-create-new-shapes">How to combine shapes to create new shapes 
/example-code/uikit/how-to-draw-shapes-using-uibezierpath">How to draw shapes using UIBezierPath 
/quick-start/swiftui/how-to-fill-and-stroke-shapes-at-the-same-time">How to fill and stroke shapes at the same time 
/example-code/calayer/how-to-make-a-shape-draw-itself-using-strokeend">How to make a shape draw itself using strokeEnd 
/quick-start/swiftui/swiftuis-built-in-shapes">SwiftUI‚Äôs built-in shapes</a>
`)],-1);function k(i,C){const a=h("VPCard");return p(),c("div",null,[e("h1",w,[e("a",m,[e("span",null,l(i.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),o(a,s(r({title:"CALayer - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/calayer/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,u,o(a,s(r({title:"How to draw shapes using CAShapeLayer | CALayer - free Swift example code",desc:"How to draw shapes using CAShapeLayer",link:"https://hackingwithswift.com/example-code/calayer/how-to-draw-shapes-using-cashapelayer",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),y,t(" TODO: ÏûëÏÑ± "),t(" \nThere are lots of `CALayer` subclasses out there, but `CAShapeLayer` is one of my favorites: it provides hardware-accelerated drawing of all sorts of 2D shapes, and includes extra functionality such as fill and stroke colors, line caps, patterns and more.\n\nTo get you started, this uses `UIBezierPath` to create a rounded rectangle, which is then colored red using `CAShaperLayer`. Remember, `CALayer` sits underneath UIKit, so you need to use `CGColor` rather than `UIColor`.\n\n```swift\nlet layer = CAShapeLayer()\nlayer.path = UIBezierPath(roundedRect: CGRect(x: 64, y: 64, width: 160, height: 160), cornerRadius: 50).cgPath\nlayer.fillColor = UIColor.red.cgColor\nview.layer.addSublayer(layer)\n```\n\n"),f])}const _=n(d,[["render",k],["__file","how-to-draw-shapes-using-cashapelayer.html.vue"]]),A=JSON.parse('{"path":"/hackingwithswift.com/example-code/calayer/how-to-draw-shapes-using-cashapelayer.html","title":"How to draw shapes using CAShapeLayer","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to draw shapes using CAShapeLayer","description":"Article(s) > How to draw shapes using CAShapeLayer","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-3.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to draw shapes using CAShapeLayer"},{"property":"og:description","content":"How to draw shapes using CAShapeLayer"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/calayer/how-to-draw-shapes-using-cashapelayer.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/calayer/how-to-draw-shapes-using-cashapelayer.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to draw shapes using CAShapeLayer"}],["meta",{"property":"og:description","content":"Article(s) > How to draw shapes using CAShapeLayer"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-3.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to draw shapes using CAShapeLayer\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.14,"words":342},"filePathRelative":"hackingwithswift.com/example-code/calayer/how-to-draw-shapes-using-cashapelayer.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{_ as comp,A as data};
