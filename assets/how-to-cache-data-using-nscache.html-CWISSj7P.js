import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as t,t as l,e as o,n as c,g as n,a as e,r as h,o as m}from"./app-BgNevrm5.js";const p={},d={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},u={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},g=t("nav",{class:"table-of-contents"},[t("ul")],-1),w=t("hr",null,null,-1),f=t("blockquote",null,[t("p",null,"Available from iOS 4.0")],-1),y=t("details",{class:"hint-container details"},[t("summary",null,"Similar solutions‚Ä¶"),e(`
/quick-start/swiftui/all-swiftui-property-wrappers-explained-and-compared">All SwiftUI property wrappers explained and compared 
/quick-start/concurrency/how-to-create-and-use-an-actor-in-swift">How to create and use an actor in Swift 
/quick-start/swiftui/how-to-create-multi-column-lists-using-table">How to create multi-column lists using Table 
/quick-start/concurrency/how-to-handle-different-result-types-in-a-task-group">How to handle different result types in a task group 
/quick-start/concurrency/how-to-use-continuations-to-convert-completion-handlers-into-async-functions">How to use continuations to convert completion handlers into async functions</a>
`)],-1);function b(i,k){const a=h("VPCard");return m(),r("div",null,[t("h1",d,[t("a",u,[t("span",null,l(i.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),o(a,c(n({title:"System - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/system/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,w,o(a,c(n({title:"How to cache data using NSCache | System - free Swift example code",desc:"How to cache data using NSCache",link:"https://hackingwithswift.com/example-code/system/how-to-cache-data-using-nscache",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,e(" TODO: ÏûëÏÑ± "),e(` 
Here's an easy win for you that will make your apps immediately much better: \`NSCache\` is a specialized class that behaves similarly to a mutable dictionary with one major difference: iOS will automatically remove objects from the cache if the device is running low on memory.

Helpfully, if the system does encounter memory pressure \`NSCache\` will automatically start to remove items without you knowing about it, which means you won't get a memory warning unless even more RAM needs to be cleared. It will also remove items intelligently, trying to keep as much cached as possible.

Here's how to use it, imagining a fictional class called \`ExpensiveObjectClass\` that you want to compute as infrequently as you can:

\`\`\`swift
let cache = NSCache<NSString, ExpensiveObjectClass>()
let myObject: ExpensiveObjectClass

if let cachedVersion = cache.object(forKey: "CachedObject") {
    // use the cached version
    myObject = cachedVersion
} else {
    // create it from scratch then store in the cache
    myObject = ExpensiveObjectClass()
    cache.setObject(myObject, forKey: "CachedObject")
}
\`\`\`

`),y])}const v=s(p,[["render",b],["__file","how-to-cache-data-using-nscache.html.vue"]]),C=JSON.parse('{"path":"/hackingwithswift.com/example-code/system/how-to-cache-data-using-nscache.html","title":"How to cache data using NSCache","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to cache data using NSCache","description":"Article(s) > How to cache data using NSCache","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-4.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to cache data using NSCache"},{"property":"og:description","content":"How to cache data using NSCache"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/system/how-to-cache-data-using-nscache.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/system/how-to-cache-data-using-nscache.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to cache data using NSCache"}],["meta",{"property":"og:description","content":"Article(s) > How to cache data using NSCache"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-4.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2018-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to cache data using NSCache\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2018-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2018-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.39,"words":417},"filePathRelative":"hackingwithswift.com/example-code/system/how-to-cache-data-using-nscache.md","localizedDate":"2018ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{v as comp,C as data};
