import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as t,t as g,e as n,n as i,g as s,d as a,a as h,f as u,r as l,o as m}from"./app-BgNevrm5.js";const d={},f={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},k=t("nav",{class:"table-of-contents"},[t("ul")],-1),b=t("hr",null,null,-1),v=t("blockquote",null,[t("p",null,"Available from Swift 5.0")],-1),y={href:"https://github.com/apple/swift-evolution/blob/master/proposals/0225-binaryinteger-iseven-isodd-ismultiple.md",target:"_blank",rel:"noopener noreferrer"},_=t("code",null,"apple/swift-evolution",-1),C=t("code",null,"isMultiple(of:)",-1),S=t("code",null,"%",-1),A=u(`<p>For example:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">let</span> rowNumber <span class="token operator">=</span> <span class="token number">4</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> rowNumber<span class="token punctuation">.</span><span class="token function">isMultiple</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Even&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Odd&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Yes, we could write the same check using <code>if rowNumber % 2 == 0</code> but you have to admit thatâ€™s less clear â€“ having <code>isMultiple(of:)</code> as a method means it can be listed in code completion options in Xcode, which aids discoverability.</p>`,3),N={class:"hint-container details"},R=t("summary",null,"Other Changes in Swift 5.0",-1),V={href:"https://hackingwithswift.com/files/playgrounds/swift/playground-4-2-to-5-0.playground.zip",target:"_blank",rel:"noopener noreferrer"};function x(c,M){const e=l("VPCard"),o=l("FontIcon");return m(),p("div",null,[t("h1",f,[t("a",w,[t("span",null,g(c.$frontmatter.title)+" ê´€ë ¨",1)])]),n(e,i(s({title:"HACKING WITH SWIFT",desc:"What's new in Swift?",link:"/hackingwithswift.com/swift/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k,b,n(e,i(s({title:"Checking for integer multiples | Changes in Swift 5.0",desc:"Checking for integer multiples",link:"https://hackingwithswift.com/swift/5.0/integer-multiples",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,t("p",null,[t("a",y,[a("SE-0225 ("),n(o,{icon:"iconfont icon-github"}),_,a(")")]),a(" adds an "),C,a(" method to integers, allowing us to check whether one number is a multiple of another in a much clearer way than using the division remainder operation, "),S,a(".")]),A,t("details",N,[R,n(e,i(s({title:"Raw strings | Changes in Swift 5.0",desc:"Raw strings",link:"/hackingwithswift.com/swift/5.0/raw-strings.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(e,i(s({title:"A standard Result type | Changes in Swift 5.0",desc:"A standard Result type",link:"/hackingwithswift.com/swift/5.0/result.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(e,i(s({title:"Customizing string interpolation | Changes in Swift 5.0",desc:"Customizing string interpolation",link:"/hackingwithswift.com/swift/5.0/string-interpolation.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(e,i(s({title:"Dynamically callable types | Changes in Swift 5.0",desc:"Dynamically callable types",link:"/hackingwithswift.com/swift/5.0/dynamically-callable-types.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(e,i(s({title:"Handling future enum cases | Changes in Swift 5.0",desc:"Handling future enum cases",link:"/hackingwithswift.com/swift/5.0/handling-future-enum-cases.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(e,i(s({title:"Flattening nested optionals resulting from try? | Changes in Swift 5.0",desc:"Flattening nested optionals resulting from try?",link:"/hackingwithswift.com/swift/5.0/flattening-optionals.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),h(` 
\`\`\`component VPCard
{
  "title": "Checking for integer multiples | Changes in Swift 5.0",
  "desc": "Checking for integer multiples",
  "link": "/hackingwithswift.com/swift/5.0/integer-multiples.md",
  "logo": "https://hackingwithswift.com/favicon.svg",
  "background": "rgba(54,94,226,0.2)"
}
\`\`\`
`),n(e,i(s({title:"Transforming and unwrapping dictionary values with compactMapValues() | Changes in Swift 5.0",desc:"Transforming and unwrapping dictionary values with compactMapValues()",link:"/hackingwithswift.com/swift/5.0/compactmapvalues.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t("p",null,[t("a",V,[n(o,{icon:"fas fa-file-zipper"}),a("Download Swift 5.0 playground")])])])])}const T=r(d,[["render",x],["__file","integer-multiples.html.vue"]]),q=JSON.parse('{"path":"/hackingwithswift.com/swift/5.0/integer-multiples.html","title":"Checking for integer multiples","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"Checking for integer multiples","description":"Article(s) > Checking for integer multiples","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","swift","swift-5.0"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > Checking for integer multiples"},{"property":"og:description","content":"Checking for integer multiples"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.0/integer-multiples.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swift/5.0/integer-multiples.html"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"Checking for integer multiples"}],["meta",{"property":"og:description","content":"Article(s) > Checking for integer multiples"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.0"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Checking for integer multiples\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.56,"words":467},"filePathRelative":"hackingwithswift.com/swift/5.0/integer-multiples.md","excerpt":"\\n"}');export{T as comp,q as data};
