import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,t as k,e as s,n as t,g as e,d as i,f as o,r as c,o as m}from"./app-BgNevrm5.js";const d={},h={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},v=n("nav",{class:"table-of-contents"},[n("ul")],-1),g=n("hr",null,null,-1),f=o(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>New in iOS 17</strong></p><p>SwiftUI’s <code>PhaseAnimator</code> view and <code>phaseAnimator</code> modifier allow us to perform multi-step animation by cycling through animation phases of our choosing, either constantly or when triggered.</p><p>Creating these multi-phase animations takes three steps:</p><ol><li>Define the phases you’re going to work through. This can be any kind of sequence, but you might find it easiest to work with a <code>CaseIterable</code> enum.</li><li>Read one phase inside your phase animator, and adjust your views to match how you want that phase to look.</li><li>Optionally add a trigger to make the phase animator repeat its sequence from the beginning. Without this it will cycle constantly.</li></ol><p>For example, this next example creates a simple animation that makes some text start small and invisible, scale up to natural size and be fully opaque, then scale up to be very large and invisible. It uses an array of the numbers 0, 1, and 3 to represent the various scaling sizes we’ll be using (0%, 100%, and 300%), and it makes the text opaque when the size is 1:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, world!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">.</span><span class="token function">phaseAnimator</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> view<span class="token punctuation">,</span> phase <span class="token keyword">in</span></span>
<span class="line">        view</span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>phase<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span>phase <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),b={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-multi-step-animations-using-phase-animators-1.zip",target:"_blank",rel:"noopener noreferrer"},y=o(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-multi-step-animations-using-phase-animators-1~dark@2x.gif" alt="The text Hello World zooming up and fading out repeatedly." tabindex="0" loading="lazy"><figcaption>The text Hello World zooming up and fading out repeatedly.</figcaption></figure><p>Because we haven’t provided a trigger for the animation, it will run forever.</p><p>If you prefer, you can write that using a wrapping <code>PhaseAnimator</code> view, which has the advantage that multiple views can move between phases together:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">VStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token class-name">PhaseAnimator</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> value <span class="token keyword">in</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, world!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Goodbye, world!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">-</span> value<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span>value <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-multi-step-animations-using-phase-animators-2.zip",target:"_blank",rel:"noopener noreferrer"},_=o(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-multi-step-animations-using-phase-animators-2~dark@2x.gif" alt="The text Hello World zooming up and fading out repeatedly, while the text Goodbye World zooms out while fading out at the same time." tabindex="0" loading="lazy"><figcaption>The text Hello World zooming up and fading out repeatedly, while the text Goodbye World zooms out while fading out at the same time.</figcaption></figure><p>Like I said, you might prefer to use an enum with your various phases. This might have meaningful raw values attached, but it doesn’t need to. Here’s the same thing rewritten using an enum:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">enum</span> <span class="token class-name">AnimationPhase</span><span class="token punctuation">:</span> <span class="token class-name">Double</span><span class="token punctuation">,</span> <span class="token class-name">CaseIterable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> fadingIn <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token keyword">case</span> middle <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">case</span> zoomingOut <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, world!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">phaseAnimator</span><span class="token punctuation">(</span><span class="token class-name">AnimationPhase</span><span class="token punctuation">.</span>allCases<span class="token punctuation">)</span> <span class="token punctuation">{</span> view<span class="token punctuation">,</span> phase <span class="token keyword">in</span></span>
<span class="line">                view</span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>rawValue<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>rawValue <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),q={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-multi-step-animations-using-phase-animators-3.zip",target:"_blank",rel:"noopener noreferrer"},z=o(`<p>Rather than have the phase animators repeat endlessly, you can make it trigger the animation sequence on your command. To do this, attach a trigger value for SwiftUI to watch, such as a random <code>UUID</code> or an incrementing number. Whenever that value changes, SwiftUI will reset your animator and play it back in full.</p><p>In this next example, tapping the button triggers a three-step animation using enum cases. First, we define the various animation phases we want, then we move through them whenever a property changes:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">enum</span> <span class="token class-name">AnimationPhase</span><span class="token punctuation">:</span> <span class="token class-name">CaseIterable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> start<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> end</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> animationStep <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Tap Me!&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            animationStep <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">phaseAnimator</span><span class="token punctuation">(</span><span class="token class-name">AnimationPhase</span><span class="token punctuation">.</span>allCases<span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> animationStep<span class="token punctuation">)</span> <span class="token punctuation">{</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span></span>
<span class="line">            content</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> phase <span class="token operator">==</span> <span class="token punctuation">.</span>start <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>phase <span class="token operator">==</span> <span class="token punctuation">.</span>middle <span class="token operator">?</span> <span class="token number">3</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),H={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-multi-step-animations-using-phase-animators-4.zip",target:"_blank",rel:"noopener noreferrer"},T=o(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-multi-step-animations-using-phase-animators-3~dark@2x.gif" alt="A button that says Tap Me, which zooms up, becomes blurry, then resets every time it’s pressed." tabindex="0" loading="lazy"><figcaption>A button that says Tap Me, which zooms up, becomes blurry, then resets every time it’s pressed.</figcaption></figure><p>For even more control, you can specify exactly which animation to use for each phase. For example, this moves between quick <code>.bouncy</code> and a slow <code>.easeInOut</code> animations to get a more varied movement:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">enum</span> <span class="token class-name">AnimationPhase</span><span class="token punctuation">:</span> <span class="token class-name">CaseIterable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> start<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> end</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> animationStep <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Tap Me!&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            animationStep <span class="token operator">+=</span> <span class="token number">1</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">phaseAnimator</span><span class="token punctuation">(</span><span class="token class-name">AnimationPhase</span><span class="token punctuation">.</span>allCases<span class="token punctuation">,</span> trigger<span class="token punctuation">:</span> animationStep<span class="token punctuation">)</span> <span class="token punctuation">{</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span></span>
<span class="line">            content</span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">blur</span><span class="token punctuation">(</span>radius<span class="token punctuation">:</span> phase <span class="token operator">==</span> <span class="token punctuation">.</span>start <span class="token operator">?</span> <span class="token number">0</span> <span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>phase <span class="token operator">==</span> <span class="token punctuation">.</span>middle <span class="token operator">?</span> <span class="token number">3</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> animation<span class="token punctuation">:</span> <span class="token punctuation">{</span> phase <span class="token keyword">in</span></span>
<span class="line">            <span class="token keyword">switch</span> phase <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token punctuation">.</span>start<span class="token punctuation">,</span> <span class="token punctuation">.</span>end<span class="token punctuation">:</span> <span class="token punctuation">.</span>bouncy</span>
<span class="line">            <span class="token keyword">case</span> <span class="token punctuation">.</span>middle<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">easeInOut</span><span class="token punctuation">(</span>duration<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),I={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-multi-step-animations-using-phase-animators-5.zip",target:"_blank",rel:"noopener noreferrer"},A=o(`<figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-multi-step-animations-using-phase-animators-4~dark@2x.gif" alt="A button that says Tap Me, which zooms up, becomes blurry, then resets every time it’s pressed. The zoom up part of the animation runs slowly" tabindex="0" loading="lazy"><figcaption>A button that says Tap Me, which zooms up, becomes blurry, then resets every time it’s pressed. The zoom up part of the animation runs slowly</figcaption></figure><p>One approach I’ve found useful is to add extra computed properties to the animation phases to make the rest of the code easier to read, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">enum</span> <span class="token class-name">AnimationPhase</span><span class="token punctuation">:</span> <span class="token class-name">CaseIterable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> fadingIn<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> zoomingOut</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> scale<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">switch</span> <span class="token keyword">self</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token punctuation">.</span>fadingIn<span class="token punctuation">:</span> <span class="token number">0</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token punctuation">.</span>middle<span class="token punctuation">:</span> <span class="token number">1</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token punctuation">.</span>zoomingOut<span class="token punctuation">:</span> <span class="token number">3</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> opacity<span class="token punctuation">:</span> <span class="token class-name">Double</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">switch</span> <span class="token keyword">self</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token punctuation">.</span>fadingIn<span class="token punctuation">:</span> <span class="token number">0</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token punctuation">.</span>middle<span class="token punctuation">:</span> <span class="token number">1</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token punctuation">.</span>zoomingOut<span class="token punctuation">:</span> <span class="token number">0</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Hello, world!&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>largeTitle<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">phaseAnimator</span><span class="token punctuation">(</span><span class="token class-name">AnimationPhase</span><span class="token punctuation">.</span>allCases<span class="token punctuation">)</span> <span class="token punctuation">{</span> content<span class="token punctuation">,</span> phase <span class="token keyword">in</span></span>
<span class="line">                content</span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">scaleEffect</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>scale<span class="token punctuation">)</span></span>
<span class="line">                    <span class="token punctuation">.</span><span class="token function">opacity</span><span class="token punctuation">(</span>phase<span class="token punctuation">.</span>opacity<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),S={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-create-multi-step-animations-using-phase-animators-6.zip",target:"_blank",rel:"noopener noreferrer"},V=n("figure",null,[n("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-multi-step-animations-using-phase-animators-5~dark@2x.gif",alt:"The text Hello World zooming up and fading out repeatedly.",tabindex:"0",loading:"lazy"}),n("figcaption",null,"The text Hello World zooming up and fading out repeatedly.")],-1),j={class:"hint-container details"},E=n("summary",null,"Similar solutions…",-1);function C(l,P){const a=c("VPCard"),p=c("FontIcon");return m(),r("div",null,[n("h1",h,[n("a",w,[n("span",null,k(l.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),v,g,s(a,t(e({title:"How to create multi-step animations using phase animators | SwiftUI by Example",desc:"How to create multi-step animations using phase animators",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-create-multi-step-animations-using-phase-animators",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f,n("blockquote",null,[n("p",null,[n("a",b,[s(p,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),y,n("blockquote",null,[n("p",null,[n("a",x,[s(p,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),_,n("blockquote",null,[n("p",null,[n("a",q,[s(p,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),z,n("blockquote",null,[n("p",null,[n("a",H,[s(p,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),T,n("blockquote",null,[n("p",null,[n("a",I,[s(p,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),A,n("blockquote",null,[n("p",null,[n("a",S,[s(p,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),V,n("details",j,[E,s(a,t(e({title:"How to override animations with transactions | SwiftUI by Example",desc:"How to override animations with transactions",link:"/hackingwithswift.com/swiftui/how-to-override-animations-with-transactions.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to apply multiple animations to a view | SwiftUI by Example",desc:"How to apply multiple animations to a view",link:"/hackingwithswift.com/swiftui/how-to-apply-multiple-animations-to-a-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to create basic animations | SwiftUI by Example",desc:"How to create basic animations",link:"/hackingwithswift.com/swiftui/how-to-create-basic-animations.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to synchronize animations from one view to another with matchedGeometryEffect() | SwiftUI by Example",desc:"How to synchronize animations from one view to another with matchedGeometryEffect()",link:"/hackingwithswift.com/swiftui/how-to-synchronize-animations-from-one-view-to-another-with-matchedgeometryeffect.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to reduce animations when requested | SwiftUI by Example",desc:"How to reduce animations when requested",link:"/hackingwithswift.com/swiftui/how-to-reduce-animations-when-requested.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const O=u(d,[["render",C],["__file","how-to-create-multi-step-animations-using-phase-animators.html.vue"]]),W=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-create-multi-step-animations-using-phase-animators.html","title":"How to create multi-step animations using phase animators","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to create multi-step animations using phase animators","description":"Article(s) > How to create multi-step animations using phase animators","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to create multi-step animations using phase animators"},{"property":"og:description","content":"How to create multi-step animations using phase animators"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-multi-step-animations-using-phase-animators.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-create-multi-step-animations-using-phase-animators.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to create multi-step animations using phase animators"}],["meta",{"property":"og:description","content":"Article(s) > How to create multi-step animations using phase animators"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-multi-step-animations-using-phase-animators-1~dark@2x.gif"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to create multi-step animations using phase animators\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-multi-step-animations-using-phase-animators-1~dark@2x.gif\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-multi-step-animations-using-phase-animators-2~dark@2x.gif\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-multi-step-animations-using-phase-animators-3~dark@2x.gif\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-multi-step-animations-using-phase-animators-4~dark@2x.gif\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-create-multi-step-animations-using-phase-animators-5~dark@2x.gif\\"],\\"dateModified\\":null,\\"author\\":[]}"]],"next":"/hackingwithswift.com/swiftui/how-to-create-and-compose-custom-views.md"},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":4.4,"words":1320},"filePathRelative":"hackingwithswift.com/swiftui/how-to-create-multi-step-animations-using-phase-animators.md","excerpt":"\\n"}');export{O as comp,W as data};
