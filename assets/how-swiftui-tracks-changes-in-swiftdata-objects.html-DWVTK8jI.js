import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as t,t as r,e as a,n as o,g as i,f as h,r as l,o as w}from"./app-BgNevrm5.js";const p={},f={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},d={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},g=t("nav",{class:"table-of-contents"},[t("ul")],-1),m=t("hr",null,null,-1),u=h('<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI and SwiftData are built with tight coordination, which allows SwiftUI to update its views only when your SwiftData object changes a value that actually matters ‚Äì any property that is actually used by the view will cause an update, but changing other values won&#39;t.</p><p>Internally this is all powered by Swift&#39;s observation system: when SwiftUI renders a view it makes a list of all the properties that are read from <code>Observable</code> objects, then watch those properties ‚Äì and only those ‚Äì for changes. When any <em>do</em> change, that view gets re-evaluated and the whole process repeats.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>This whole process works equally well with computed properties ‚Äì as long as calling a computed property refers to a stored property on your object, SwiftUI will take note that it was accessed when your view was rendered.</p></div><p>Because SwiftData&#39;s objects are built on top of the Swift&#39;s observation system, all our objects automatically inherit this same power: views that use one of your model objects won&#39;t update until a property they directly rely on has changed. So, if your view refers to a user&#39;s name, it won&#39;t refresh if that&#39;s user&#39;s age changes ‚Äì it&#39;s a big performance win.</p><div class="hint-container important"><p class="hint-container-title">Important</p><p>If you have a SwiftUI view that depends on one or more properties from a SwiftData object, changing that property will cause the view to be invalidated and re-rendered even if it&#39;s currently positioned off-screen.</p></div>',6);function b(s,y){const e=l("VPCard");return w(),c("div",null,[t("h1",f,[t("a",d,[t("span",null,r(s.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),a(e,o(i({title:"SwiftData by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftdata/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,m,a(e,o(i({title:"How SwiftUI tracks changes in SwiftData objects | SwiftData by Example",desc:"How SwiftUI tracks changes in SwiftData objects",link:"https://hackingwithswift.com/quick-start/swiftdata/how-swiftui-tracks-changes-in-swiftdata-objects",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),u])}const v=n(p,[["render",b],["__file","how-swiftui-tracks-changes-in-swiftdata-objects.html.vue"]]),j=JSON.parse('{"path":"/hackingwithswift.com/swiftdata/how-swiftui-tracks-changes-in-swiftdata-objects.html","title":"How SwiftUI tracks changes in SwiftData objects","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How SwiftUI tracks changes in SwiftData objects","description":"Article(s) > How SwiftUI tracks changes in SwiftData objects","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftdata","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How SwiftUI tracks changes in SwiftData objects"},{"property":"og:description","content":"How SwiftUI tracks changes in SwiftData objects"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/how-swiftui-tracks-changes-in-swiftdata-objects.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/how-swiftui-tracks-changes-in-swiftdata-objects.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How SwiftUI tracks changes in SwiftData objects"}],["meta",{"property":"og:description","content":"Article(s) > How SwiftUI tracks changes in SwiftData objects"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftdata"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2023-09-30T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How SwiftUI tracks changes in SwiftData objects\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-30T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2023-09-30T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.29,"words":387},"filePathRelative":"hackingwithswift.com/swiftdata/how-swiftui-tracks-changes-in-swiftdata-objects.md","localizedDate":"2023ÎÖÑ 9Ïõî 30Ïùº","excerpt":"\\n"}');export{v as comp,j as data};
