import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as p,b as t,t as c,e as s,n,g as a,f as l,r,o as u}from"./app-BgNevrm5.js";const d={},w={id:"frontmatter-title-관련",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-관련"},y=t("nav",{class:"table-of-contents"},[t("ul")],-1),h=t("hr",null,null,-1),f=l(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>When building apps it’s critical to make sure your layouts work great with all ranges of Dynamic Type. This is partly because SwiftUI natively supports it, partly because many people use <em>smaller</em> font sizes because they want a higher information density, but mostly because many people with accessibility needs rely on it.</p><p>Fortunately, all of SwiftUI’s components natively adapt to Dynamic Type sizes, and it’s even easy to preview your designs at various sizes by using the <code>\\.sizeCategory</code> environment value in your preview</p><p>For example, if you wanted to see how a view looks with extra small text, you would add <code>.environment(\\.sizeCategory, .extraSmall)</code> to your content view preview, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView_Previews</span><span class="token punctuation">:</span> <span class="token class-name">PreviewProvider</span> <span class="token punctuation">{</span></span>
<span class="line">   <span class="token keyword">static</span> <span class="token keyword">var</span> previews<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token class-name">Group</span> <span class="token punctuation">{</span></span>
<span class="line">         <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token punctuation">.</span>sizeCategory<span class="token punctuation">,</span> <span class="token punctuation">.</span>extraSmall<span class="token punctuation">)</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">   <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-preview-your-layout-at-different-dynamic-type-sizes-1~dark@2x.png" alt="The Xcode Preview showing some very small text." tabindex="0" loading="lazy"><figcaption>The Xcode Preview showing some very small text.</figcaption></figure><p>You can also send back a group of previews, all using different size categories. This allows you to see the same design at various font sizes side by side.</p><p>So, this code shows the design at extra small size, regular size, and the largest possible size:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView_Previews</span><span class="token punctuation">:</span> <span class="token class-name">PreviewProvider</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">static</span> <span class="token keyword">var</span> previews<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token punctuation">.</span>sizeCategory<span class="token punctuation">,</span> <span class="token punctuation">.</span>extraSmall<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token class-name">ContentView</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token punctuation">.</span>sizeCategory<span class="token punctuation">,</span> <span class="token punctuation">.</span>accessibilityExtraExtraExtraLarge<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-preview-your-layout-at-different-dynamic-type-sizes-2~dark@2x.png" alt="Xcode showing previews with small, regular, and large text sizes." tabindex="0" loading="lazy"><figcaption>Xcode showing previews with small, regular, and large text sizes.</figcaption></figure><p>If your design works great across all three of those, you’re good to go.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>If your preview is zoomed right in, you should either scroll around or zoom out to the other previews.</p></div>`,12),g={class:"hint-container details"},v=t("summary",null,"Similar solutions…",-1);function k(i,b){const e=r("VPCard");return u(),p("div",null,[t("h1",w,[t("a",m,[t("span",null,c(i.$frontmatter.title)+" 관련",1)])]),s(e,n(a({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),y,h,s(e,n(a({title:"How to preview your layout at different Dynamic Type sizes | SwiftUI by Example",desc:"How to preview your layout at different Dynamic Type sizes",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-preview-your-layout-at-different-dynamic-type-sizes",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f,t("details",g,[v,s(e,n(a({title:"How to specify the Dynamic Type sizes a view supports | SwiftUI by Example",desc:"How to specify the Dynamic Type sizes a view supports",link:"/hackingwithswift.com/swiftui/how-to-specify-the-dynamic-type-sizes-a-view-supports.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(e,n(a({title:"How to preview your layout in different devices | SwiftUI by Example",desc:"How to preview your layout in different devices",link:"/hackingwithswift.com/swiftui/how-to-preview-your-layout-in-different-devices.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(e,n(a({title:"How to preview your layout in light and dark mode | SwiftUI by Example",desc:"How to preview your layout in light and dark mode",link:"/hackingwithswift.com/swiftui/how-to-preview-your-layout-in-light-and-dark-mode.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(e,n(a({title:"How to preview your layout in a navigation view | SwiftUI by Example",desc:"How to preview your layout in a navigation view",link:"/hackingwithswift.com/swiftui/how-to-preview-your-layout-in-a-navigation-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(e,n(a({title:"How to provide relative sizes using GeometryReader | SwiftUI by Example",desc:"How to provide relative sizes using GeometryReader",link:"/hackingwithswift.com/swiftui/how-to-provide-relative-sizes-using-geometryreader.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const _=o(d,[["render",k],["__file","how-to-preview-your-layout-at-different-dynamic-type-sizes.html.vue"]]),T=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-preview-your-layout-at-different-dynamic-type-sizes.html","title":"How to preview your layout at different Dynamic Type sizes","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to preview your layout at different Dynamic Type sizes","description":"Article(s) > How to preview your layout at different Dynamic Type sizes","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to preview your layout at different Dynamic Type sizes"},{"property":"og:description","content":"How to preview your layout at different Dynamic Type sizes"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-preview-your-layout-at-different-dynamic-type-sizes.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-preview-your-layout-at-different-dynamic-type-sizes.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to preview your layout at different Dynamic Type sizes"}],["meta",{"property":"og:description","content":"Article(s) > How to preview your layout at different Dynamic Type sizes"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-preview-your-layout-at-different-dynamic-type-sizes-1~dark@2x.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to preview your layout at different Dynamic Type sizes\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-preview-your-layout-at-different-dynamic-type-sizes-1~dark@2x.png\\",\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-preview-your-layout-at-different-dynamic-type-sizes-2~dark@2x.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.19,"words":656},"filePathRelative":"hackingwithswift.com/swiftui/how-to-preview-your-layout-at-different-dynamic-type-sizes.md","excerpt":"\\n"}');export{_ as comp,T as data};
