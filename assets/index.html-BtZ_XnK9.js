import{_ as c}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as r,t as l,e,n as t,g as a,r as s,o as h}from"./app-BgNevrm5.js";const d={},m={id:"frontmatter-title-á„€á…ªá†«á„…á…§á†«",tabindex:"-1"},p={class:"header-anchor",href:"#frontmatter-title-á„€á…ªá†«á„…á…§á†«"},g=r("blockquote",null,[r("p",null,"Found 6 articles in the Swift Knowledge Base for this category.")],-1);function f(i,u){const o=s("VPCard");return h(),n("div",null,[r("h1",m,[r("a",p,[r("span",null,l(i.$frontmatter.title)+" ê´€ë ¨",1)])]),e(o,t(a({title:"UIColor - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials â€“ learn Swift, iOS, and Xcode",link:"https://hackingwithswift.com/example-code/uicolor",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,e(o,t(a({title:"How to convert a hex color to a UIColor",desc:"Here's a simple extension to <code>UIColor</code> that lets you create colors from hex strings. The new method is a failable initializer, which means it returns nil if you don't specify a color in the correct format. It should be a # symbol, followed by red, green, blue and alpha in hex format, for a total of nine characters. For example, #ffe700ff is gold....",link:"/hackingwithswift.com/example-code/uicolor/how-to-convert-a-hex-color-to-a-uicolor.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),e(o,t(a({title:"How to convert a HTML name string into a UIColor",desc:"HTML color names let you use familiar titles like 'steel blue' and 'mint cream' rather than hex values, but sadly these standardized names aren't available in iOS â€“ or at least not by default. Fortunately, it's easy to add an extension to <code>UIColor</code> that maps these names to hexadecimal color values, then add another extension to convert hex colors to <code>UIColors</code>. Here's the code:...",link:"/hackingwithswift.com/example-code/uicolor/how-to-convert-a-html-name-string-into-a-uicolor.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),e(o,t(a({title:"How to create custom colors using UIColor RGB and hues",desc:"Although there are quite a few built-in UIColors, you'll want to create your own very frequently. This can be done in a number of ways, but the most common is specifying individual values for red, green, blue and alpha, like this:...",link:"/hackingwithswift.com/example-code/uicolor/how-to-create-custom-colors-using-uicolor-rgb-and-hues.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),e(o,t(a({title:"How to read the red, green, blue, and alpha color components from a UIColor",desc:"Creating a <code>UIColor</code> from red, green, blue, and alpha (RGBA) is easy enough:...",link:"/hackingwithswift.com/example-code/uicolor/how-to-read-the-red-green-blue-and-alpha-color-components-from-a-uicolor.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),e(o,t(a({title:"How to use an image for your background color with UIColor(patternImage:)",desc:"Nearly all subclasses of <code>UIView</code> can have their background color adjusted, but often youâ€™ll find you want to use an image rather than a flat color....",link:"/hackingwithswift.com/example-code/uicolor/how-to-use-an-image-for-your-background-color-with-uicolorpatternimage.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),e(o,t(a({title:"How to use semantic colors to help your iOS app adapt to dark mode",desc:"When specifying colors for objects in your views, itâ€™s often easier to use the built-in semantic colors of <code>UIColor</code> rather than specifying our own custom colors that might not look good in both light and dark mode....",link:"/hackingwithswift.com/example-code/uicolor/how-to-use-semantic-colors-to-help-your-ios-app-adapt-to-dark-mode.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16)])}const b=c(d,[["render",f],["__file","index.html.vue"]]),y=JSON.parse('{"path":"/hackingwithswift.com/example-code/uicolor/","title":"UIColor - free Swift example code","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"UIColor - free Swift example code","description":"Article(s) > UIColor - free Swift example code","icon":"fa-brands fa-swift","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > UIColor - free Swift example code"},{"property":"og:description","content":"UIColor - free Swift example code"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uicolor/"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uicolor/"}],["meta",{"property":"og:site_name","content":"ðŸ“šBookshelf"}],["meta",{"property":"og:title","content":"UIColor - free Swift example code"}],["meta",{"property":"og:description","content":"Article(s) > UIColor - free Swift example code"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"UIColor - free Swift example code\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.02,"words":605},"filePathRelative":"hackingwithswift.com/example-code/uicolor/README.md","excerpt":"\\n"}');export{b as comp,y as data};
