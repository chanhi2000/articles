import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,b as n,t as u,e as t,n as e,g as a,d,f as h,r as o,o as w}from"./app-BgNevrm5.js";const g={},k={id:"frontmatter-title-관련",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-관련"},f=n("nav",{class:"table-of-contents"},[n("ul")],-1),b=n("hr",null,null,-1),v=h(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>SwiftUI provides a <code>scenePhase</code> environment key that is automatically updated as your app moves between the foreground, background, and inactive states. You can watch for these in your <code>App</code> struct itself, or in any SwiftUI view.</p><p>First, add a property to track the key:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token punctuation">.</span>scenePhase<span class="token punctuation">)</span> <span class="token keyword">var</span> scenePhase</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>And now either add any logic you want to your body, or use <code>onChange()</code> to observe changes directly.</p><p>As an example, we could write a view that monitors <code>scenePhase</code> and prints out some text into Xcode&#39;s debug console whenever the phase changes:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token punctuation">.</span>scenePhase<span class="token punctuation">)</span> <span class="token keyword">var</span> scenePhase</span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span> </span>
<span class="line">        <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Example Text&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">onChange</span><span class="token punctuation">(</span>of<span class="token punctuation">:</span> scenePhase<span class="token punctuation">)</span> <span class="token punctuation">{</span> newPhase <span class="token keyword">in</span></span>
<span class="line">                <span class="token keyword">if</span> newPhase <span class="token operator">==</span> <span class="token punctuation">.</span>inactive <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Inactive&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> newPhase <span class="token operator">==</span> <span class="token punctuation">.</span>active <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Active&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> newPhase <span class="token operator">==</span> <span class="token punctuation">.</span>background <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Background&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut-3.zip",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,"As you can see, there are three states:",-1),x=n("ol",null,[n("li",null,"The Active state is used when your app is in the foreground and interactive for the user, meaning that they are using it right now."),n("li",null,"The Background state is used when your app isn't currently visible, so you should cut back the amount of work you do."),n("li",null,"The Inactive state is used when your app is visible, but not directly interactive to the user. For example, if you enter multi-tasking mode while running the app – you can see your app's window alongside others, but you're not directly using it.")],-1),P={class:"hint-container details"},H=n("summary",null,"Similar solutions…",-1);function S(i,E){const s=o("VPCard"),c=o("FontIcon"),r=o("VidStack");return w(),l("div",null,[n("h1",k,[n("a",m,[n("span",null,u(i.$frontmatter.title)+" 관련",1)])]),t(s,e(a({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,b,t(s,e(a({title:"How to detect when your app moves to the background or foreground with scenePhase | SwiftUI by Example",desc:"How to detect when your app moves to the background or foreground with scenePhase",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-detect-when-your-app-moves-to-the-background-or-foreground-with-scenephase",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),v,n("blockquote",null,[n("p",null,[n("a",y,[t(c,{icon:"fas fa-file-zipper"}),d("Download this as an Xcode project")])])]),t(r,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-detect-when-your-app-moves-to-the-background-or-foreground-with-scenephase-1~dark.mp4 "}),_,x,n("details",P,[H,t(s,e(a({title:"How to provide visual structure using foreground styles | SwiftUI by Example",desc:"How to provide visual structure using foreground styles",link:"/hackingwithswift.com/swiftui/how-to-provide-visual-structure-using-foreground-styles.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(s,e(a({title:"How to customize the background color of navigation bars, tab bars, and toolbars | SwiftUI by Example",desc:"How to customize the background color of navigation bars, tab bars, and toolbars",link:"/hackingwithswift.com/swiftui/how-to-customize-the-background-color-of-navigation-bars-tab-bars-and-toolbars.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(s,e(a({title:"How to change the background color of List, TextEditor, and more | SwiftUI by Example",desc:"How to change the background color of List, TextEditor, and more",link:"/hackingwithswift.com/swiftui/how-to-change-the-background-color-of-list-texteditor-and-more.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(s,e(a({title:"How to set the background color of list rows using listRowBackground() | SwiftUI by Example",desc:"How to set the background color of list rows using listRowBackground()",link:"/hackingwithswift.com/swiftui/how-to-set-the-background-color-of-list-rows-using-listrowbackground.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),t(s,e(a({title:"How to run code when your app launches | SwiftUI by Example",desc:"How to run code when your app launches",link:"/hackingwithswift.com/swiftui/how-to-run-code-when-your-app-launches.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const A=p(g,[["render",S],["__file","how-to-detect-when-your-app-moves-to-the-background-or-foreground-with-scenephase.html.vue"]]),T=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-detect-when-your-app-moves-to-the-background-or-foreground-with-scenephase.html","title":"How to detect when your app moves to the background or foreground with scenePhase","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to detect when your app moves to the background or foreground with scenePhase","description":"Article(s) > How to detect when your app moves to the background or foreground with scenePhase","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to detect when your app moves to the background or foreground with scenePhase"},{"property":"og:description","content":"How to detect when your app moves to the background or foreground with scenePhase"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-detect-when-your-app-moves-to-the-background-or-foreground-with-scenephase.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-detect-when-your-app-moves-to-the-background-or-foreground-with-scenephase.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to detect when your app moves to the background or foreground with scenePhase"}],["meta",{"property":"og:description","content":"Article(s) > How to detect when your app moves to the background or foreground with scenePhase"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to detect when your app moves to the background or foreground with scenePhase\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.37,"words":712},"filePathRelative":"hackingwithswift.com/swiftui/how-to-detect-when-your-app-moves-to-the-background-or-foreground-with-scenephase.md","excerpt":"\\n"}');export{A as comp,T as data};
