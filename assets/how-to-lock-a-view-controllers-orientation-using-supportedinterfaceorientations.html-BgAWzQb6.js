import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,b as t,t as l,e as i,n,g as r,a as e,r as p,o as u}from"./app-BgNevrm5.js";const d={},h={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},m=t("nav",{class:"table-of-contents"},[t("ul")],-1),f=t("hr",null,null,-1),g=t("blockquote",null,[t("p",null,"Available from iOS 7.0")],-1),k=t("details",{class:"hint-container details"},[t("summary",null,"Similar solutions‚Ä¶"),e(`
/example-code/uikit/how-to-read-the-interface-orientation-portrait-or-landscape">How to read the interface orientation: portrait or landscape? 
/quick-start/swiftui/swiftui-tips-and-tricks">SwiftUI tips and tricks 
/example-code/xcode/how-to-lock-interface-builder-controls-to-stop-accidental-changes">How to lock Interface Builder controls to stop accidental changes 
/example-code/uikit/how-to-use-view-controller-containment">How to use view controller containment 
/example-code/uikit/how-to-find-the-view-controller-responsible-for-a-view">How to find the view controller responsible for a view</a>
`)],-1);function v(a,y){const o=p("VPCard");return u(),c("div",null,[t("h1",h,[t("a",w,[t("span",null,l(a.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),i(o,n(r({title:"UIKit - free Swift example code",desc:"Learn Swift coding for iOS with these free tutorials ‚Äì learn Swift, iOS, and Xcode",link:"/hackingwithswift.com/example-code/uikit/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),m,f,i(o,n(r({title:"How to lock a view controller‚Äôs orientation using supportedInterfaceOrientations | UIKit - free Swift example code",desc:"How to lock a view controller‚Äôs orientation using supportedInterfaceOrientations",link:"https://hackingwithswift.com/example-code/uikit/how-to-lock-a-view-controllers-orientation-using-supportedinterfaceorientations",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,e(" TODO: ÏûëÏÑ± "),e(`
At the project level you can configure which orientations your whole app should support, but sometimes you want individual view controllers to support a subset of those. For example, you might want most of your app to work in any orientation, but one part to work specifically in portrait.

To configure this, you need to override the \`supportedInterfaceOrientations\` property in your \`UIViewController\` subclass, returning whichever orientations you want. Probably the most common use for this is to support all orientations for iPads, but \`.allButUpsideDown\` on iPhone. 

Here‚Äôs some example code doing just that:

\`\`\`swift
override var supportedInterfaceOrientations: UIInterfaceOrientationMask {
    if UIDevice.current.userInterfaceIdiom == .phone {
        return .allButUpsideDown
    } else {
        return .all
    }
}
\`\`\`

`),k])}const x=s(d,[["render",v],["__file","how-to-lock-a-view-controllers-orientation-using-supportedinterfaceorientations.html.vue"]]),I=JSON.parse('{"path":"/hackingwithswift.com/example-code/uikit/how-to-lock-a-view-controllers-orientation-using-supportedinterfaceorientations.html","title":"How to lock a view controller‚Äôs orientation using supportedInterfaceOrientations","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to lock a view controller‚Äôs orientation using supportedInterfaceOrientations","description":"Article(s) > How to lock a view controller‚Äôs orientation using supportedInterfaceOrientations","category":["Swift","iOS","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swift-5.10","ios","ios-7.0","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to lock a view controller‚Äôs orientation using supportedInterfaceOrientations"},{"property":"og:description","content":"How to lock a view controller‚Äôs orientation using supportedInterfaceOrientations"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uikit/how-to-lock-a-view-controllers-orientation-using-supportedinterfaceorientations.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/example-code/uikit/how-to-lock-a-view-controllers-orientation-using-supportedinterfaceorientations.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to lock a view controller‚Äôs orientation using supportedInterfaceOrientations"}],["meta",{"property":"og:description","content":"Article(s) > How to lock a view controller‚Äôs orientation using supportedInterfaceOrientations"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swift-5.10"}],["meta",{"property":"article:tag","content":"ios"}],["meta",{"property":"article:tag","content":"ios-7.0"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2019-03-28T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to lock a view controller‚Äôs orientation using supportedInterfaceOrientations\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2019-03-28T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2019-03-28T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":1.28,"words":383},"filePathRelative":"hackingwithswift.com/example-code/uikit/how-to-lock-a-view-controllers-orientation-using-supportedinterfaceorientations.md","localizedDate":"2019ÎÖÑ 3Ïõî 28Ïùº","excerpt":"\\n"}');export{x as comp,I as data};
