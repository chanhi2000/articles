import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as u,b as n,t as r,e as s,n as t,g as e,d as p,f as k,r as o,o as d}from"./app-BgNevrm5.js";const h={},m={id:"frontmatter-title-관련",tabindex:"-1"},w={class:"header-anchor",href:"#frontmatter-title-관련"},f=n("nav",{class:"table-of-contents"},[n("ul")],-1),g=n("hr",null,null,-1),b=k(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>If you have existing paths made using <code>UIBezierPath</code> or <code>CGPath</code> it’s trivial to convert them for use in SwiftUI because the <code>Path</code> struct has an initializer directly from <code>CGPath</code>.</p><div class="hint-container note"><p class="hint-container-title">Note</p><p><code>UIBezierPath</code> is not available in macOS, so if you’re trying to keep your SwiftUI code cross platform you should migrate to <code>CGPath</code> instead.</p></div><p>As an example, here’s a <code>UIBezierPath</code> extension I made to store the logo for an app I built, called Unwrap:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">extension</span> <span class="token class-name">UIBezierPath</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">/// The Unwrap logo as a Bezier path.</span></span>
<span class="line">    <span class="token keyword">static</span> <span class="token keyword">var</span> logo<span class="token punctuation">:</span> <span class="token class-name">UIBezierPath</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token class-name">UIBezierPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        path<span class="token punctuation">.</span><span class="token function">move</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.534</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.5816</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        path<span class="token punctuation">.</span><span class="token function">addCurve</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.1877</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.088</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controlPoint1<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.534</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.5816</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controlPoint2<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.2529</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.4205</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        path<span class="token punctuation">.</span><span class="token function">addCurve</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.9728</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.8259</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controlPoint1<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.4922</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.4949</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controlPoint2<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">1.0968</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.4148</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        path<span class="token punctuation">.</span><span class="token function">addCurve</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.0397</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.5431</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controlPoint1<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.7118</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.5248</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controlPoint2<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.3329</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.7442</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        path<span class="token punctuation">.</span><span class="token function">addCurve</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.6211</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.0279</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controlPoint1<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.508</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">1.1956</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controlPoint2<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">1.3042</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.5345</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        path<span class="token punctuation">.</span><span class="token function">addCurve</span><span class="token punctuation">(</span>to<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.6904</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.3615</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controlPoint1<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.7282</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.2481</span><span class="token punctuation">)</span><span class="token punctuation">,</span> controlPoint2<span class="token punctuation">:</span> <span class="token class-name">CGPoint</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token number">0.6904</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">0.3615</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">return</span> path</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That uses control points that are normalized to the range of 0 through 1, so that I can render it inside any kind of container and just scale it up to fit the available space.</p><p>In SwiftUI that would mean creating a transform that scales the Bezier path up by the minimum of either the width or the height, then applying that to a path, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ScaledBezier</span><span class="token punctuation">:</span> <span class="token class-name">Shape</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">let</span> bezierPath<span class="token punctuation">:</span> <span class="token class-name">UIBezierPath</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">path</span><span class="token punctuation">(</span><span class="token keyword">in</span> rect<span class="token punctuation">:</span> <span class="token class-name">CGRect</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Path</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token class-name">Path</span><span class="token punctuation">(</span>bezierPath<span class="token punctuation">.</span>cgPath<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Figure out how much bigger we need to make our path in order for it to fill the available space without clipping.</span></span>
<span class="line">        <span class="token keyword">let</span> multiplier <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>rect<span class="token punctuation">.</span>width<span class="token punctuation">,</span> rect<span class="token punctuation">.</span>height<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Create an affine transform that uses the multiplier for both dimensions equally.</span></span>
<span class="line">        <span class="token keyword">let</span> transform <span class="token operator">=</span> <span class="token class-name">CGAffineTransform</span><span class="token punctuation">(</span>scaleX<span class="token punctuation">:</span> multiplier<span class="token punctuation">,</span> y<span class="token punctuation">:</span> multiplier<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Apply that scale and send back the result.</span></span>
<span class="line">        <span class="token keyword">return</span> path<span class="token punctuation">.</span><span class="token function">applying</span><span class="token punctuation">(</span>transform<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Show our ScaledBezier shape in a view</span></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">ScaledBezier</span><span class="token punctuation">(</span>bezierPath<span class="token punctuation">:</span> <span class="token punctuation">.</span>logo<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span>lineWidth<span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">.</span><span class="token function">frame</span><span class="token punctuation">(</span>width<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span> height<span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),v={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-use-uibezierpath-and-cgpath-in-swiftui-1.zip",target:"_blank",rel:"noopener noreferrer"},y=n("figure",null,[n("img",{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-use-uibezierpath-and-cgpath-in-swiftui-1~dark@2x.png",alt:"An abstract Swift logo drawn using a single line.",tabindex:"0",loading:"lazy"}),n("figcaption",null,"An abstract Swift logo drawn using a single line.")],-1),P=n("p",null,[p("If you’re starting with a "),n("code",null,"CGPath"),p(" rather than a "),n("code",null,"UIBezierPath"),p(", things are even easier because you can write "),n("code",null,"let path = Path(yourCGPath)"),p(" to convert the path directly.")],-1),I={class:"hint-container details"},U=n("summary",null,"Similar solutions…",-1);function x(i,C){const a=o("VPCard"),c=o("FontIcon");return d(),u("div",null,[n("h1",m,[n("a",w,[n("span",null,r(i.$frontmatter.title)+" 관련",1)])]),s(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),f,g,s(a,t(e({title:"How to use UIBezierPath and CGPath in SwiftUI | SwiftUI by Example",desc:"How to use UIBezierPath and CGPath in SwiftUI",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-use-uibezierpath-and-cgpath-in-swiftui",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),b,n("blockquote",null,[n("p",null,[n("a",v,[s(c,{icon:"fas fa-file-zipper"}),p("Download this as an Xcode project")])])]),y,P,n("details",I,[U,s(a,t(e({title:"SwiftUI tips and tricks | SwiftUI by Example",desc:"SwiftUI tips and tricks",link:"/hackingwithswift.com/swiftui/swiftui-tips-and-tricks.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"All SwiftUI property wrappers explained and compared | SwiftUI by Example",desc:"All SwiftUI property wrappers explained and compared",link:"/hackingwithswift.com/swiftui/all-swiftui-property-wrappers-explained-and-compared.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"How to use Instruments to profile your SwiftUI code and identify slow layouts | SwiftUI by Example",desc:"How to use Instruments to profile your SwiftUI code and identify slow layouts",link:"/hackingwithswift.com/swiftui/how-to-use-instruments-to-profile-your-swiftui-code-and-identify-slow-layouts.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Building a menu using List | SwiftUI by Example",desc:"Building a menu using List",link:"/hackingwithswift.com/swiftui/building-a-menu-using-list.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),s(a,t(e({title:"Answering the big question: should you learn SwiftUI, UIKit, or both? | SwiftUI by Example",desc:"Answering the big question: should you learn SwiftUI, UIKit, or both?",link:"/hackingwithswift.com/swiftui/answering-the-big-question-should-you-learn-swiftui-uikit-or-both.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const _=l(h,[["render",x],["__file","how-to-use-uibezierpath-and-cgpath-in-swiftui.html.vue"]]),G=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-use-uibezierpath-and-cgpath-in-swiftui.html","title":"How to use UIBezierPath and CGPath in SwiftUI","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to use UIBezierPath and CGPath in SwiftUI","description":"Article(s) > How to use UIBezierPath and CGPath in SwiftUI","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to use UIBezierPath and CGPath in SwiftUI"},{"property":"og:description","content":"How to use UIBezierPath and CGPath in SwiftUI"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-use-uibezierpath-and-cgpath-in-swiftui.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-use-uibezierpath-and-cgpath-in-swiftui.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to use UIBezierPath and CGPath in SwiftUI"}],["meta",{"property":"og:description","content":"Article(s) > How to use UIBezierPath and CGPath in SwiftUI"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-use-uibezierpath-and-cgpath-in-swiftui-1~dark@2x.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to use UIBezierPath and CGPath in SwiftUI\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-use-uibezierpath-and-cgpath-in-swiftui-1~dark@2x.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2.65,"words":796},"filePathRelative":"hackingwithswift.com/swiftui/how-to-use-uibezierpath-and-cgpath-in-swiftui.md","excerpt":"\\n"}');export{_ as comp,G as data};
