import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as s,t as k,e as n,n as t,g as e,d as i,f as c,r as p,o as m}from"./app-BgNevrm5.js";const h={},v={id:"frontmatter-title-관련",tabindex:"-1"},f={class:"header-anchor",href:"#frontmatter-title-관련"},w=s("nav",{class:"table-of-contents"},[s("ul")],-1),b=s("hr",null,null,-1),y=c(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>Updated in iOS 15</strong></p><p>SwiftUI&#39;s <code>TextField</code> will show the keyboard automatically when activated, but before iOS 15 it was tricky to <em>hide</em> the keyboard when you&#39;re done – particularly if you&#39;re using the <code>keyboardType()</code> modifier with something like <code>.numberPad</code>, <code>.decimalPad</code>, or <code>.phonePad</code>.</p><p>If you&#39;re supporting only iOS 15 and later, you can activate and dismiss the keyboard for a text field by focusing and unfocusing it. In its simplest form, this is done using the <code>@FocusState</code> property wrapper and the <code>focusable()</code> modifier – the first stores a Boolean that tracks whether the second is currently focused.</p><p>So, we could write a simple view that hides the keyboard when a button is tapped:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line">    <span class="token attribute atrule">@FocusState</span> <span class="token keyword">private</span> <span class="token keyword">var</span> nameIsFocused<span class="token punctuation">:</span> <span class="token class-name">Bool</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Enter your name&quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $name<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">focused</span><span class="token punctuation">(</span>$nameIsFocused<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Submit&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                nameIsFocused <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),g={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-dismiss-the-keyboard-for-a-textfield-1.zip",target:"_blank",rel:"noopener noreferrer"},x=c(`<p>For more advanced uses, you can use <code>@FocusState</code> to track an optional enum case that determines which form field is currently focused. For example, we might show three text fields asking the user for various pieces of information, then submit the form once the final piece has arrived:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">enum</span> <span class="token class-name">Field</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">case</span> firstName</span>
<span class="line">        <span class="token keyword">case</span> lastName</span>
<span class="line">        <span class="token keyword">case</span> emailAddress</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> firstName <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> lastName <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> emailAddress <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line">    <span class="token attribute atrule">@FocusState</span> <span class="token keyword">private</span> <span class="token keyword">var</span> focusedField<span class="token punctuation">:</span> <span class="token class-name">Field</span><span class="token operator">?</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Enter your first name&quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $firstName<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">focused</span><span class="token punctuation">(</span>$focusedField<span class="token punctuation">,</span> equals<span class="token punctuation">:</span> <span class="token punctuation">.</span>firstName<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">textContentType</span><span class="token punctuation">(</span><span class="token punctuation">.</span>givenName<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">submitLabel</span><span class="token punctuation">(</span><span class="token punctuation">.</span>next<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Enter your last name&quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $lastName<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">focused</span><span class="token punctuation">(</span>$focusedField<span class="token punctuation">,</span> equals<span class="token punctuation">:</span> <span class="token punctuation">.</span>lastName<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">textContentType</span><span class="token punctuation">(</span><span class="token punctuation">.</span>familyName<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">submitLabel</span><span class="token punctuation">(</span><span class="token punctuation">.</span>next<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Enter your email address&quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $emailAddress<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">focused</span><span class="token punctuation">(</span>$focusedField<span class="token punctuation">,</span> equals<span class="token punctuation">:</span> <span class="token punctuation">.</span>emailAddress<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">textContentType</span><span class="token punctuation">(</span><span class="token punctuation">.</span>emailAddress<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">submitLabel</span><span class="token punctuation">(</span><span class="token punctuation">.</span>join<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span>onSubmit <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">switch</span> focusedField <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">case</span> <span class="token punctuation">.</span>firstName<span class="token punctuation">:</span></span>
<span class="line">                focusedField <span class="token operator">=</span> <span class="token punctuation">.</span>lastName</span>
<span class="line">            <span class="token keyword">case</span> <span class="token punctuation">.</span>lastName<span class="token punctuation">:</span></span>
<span class="line">                focusedField <span class="token operator">=</span> <span class="token punctuation">.</span>emailAddress</span>
<span class="line">            <span class="token keyword">default</span><span class="token punctuation">:</span></span>
<span class="line">                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Creating account…&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),F={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-dismiss-the-keyboard-for-a-textfield-2.zip",target:"_blank",rel:"noopener noreferrer"},S=c(`<div class="hint-container important"><p class="hint-container-title">Important</p><p>You should not attempt to use the same focus binding for two different form fields.</p></div><p>If you have to support iOS 14 and 13, things are trickier. In fact, I want to make one thing clear: <em>there is no built-in way of doing this with SwiftUI in iOS 13 and 14</em> – there&#39;s no simple modifier we can attach, so if you were struggling to solve this it&#39;s not because you weren&#39;t trying hard enough.</p><p>To force SwiftUI to hide your keyboard, you need to use this code:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">UIApplication</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">sendAction</span><span class="token punctuation">(</span><span class="token other-directive property">#selector</span><span class="token punctuation">(</span><span class="token class-name">UIResponder</span><span class="token punctuation">.</span>resignFirstResponder<span class="token punctuation">)</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Yes, that&#39;s very long, but it asks UIKit to search through what&#39;s called the <em>responder chain</em> – the collection of controls that are currently responding to user input – and find one that is capable of resigning its first responder status. That&#39;s a fancy way of saying “ask whatever has control to stop using the keyboard”, which in our case means the keyboard will be dismissed when a text field is active.</p><p>Because that code isn&#39;t particularly easy to read, you should consider wrapping it in an extension such as this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token directive property"><span class="token directive-name">#if</span> canImport<span class="token punctuation">(</span>UIKit<span class="token punctuation">)</span></span></span>
<span class="line"><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">hideKeyboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">UIApplication</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">sendAction</span><span class="token punctuation">(</span><span class="token other-directive property">#selector</span><span class="token punctuation">(</span><span class="token class-name">UIResponder</span><span class="token punctuation">.</span>resignFirstResponder<span class="token punctuation">)</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token directive property"><span class="token directive-name">#endif</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can now write <code>hideKeyboard()</code> from inside any SwiftUI view.</p><p>How you use that depends on your code, but here&#39;s a simple example that shows a decimal pad text field with a button to dismiss it:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> tipAmount <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&quot;&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">TextField</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Tip Amount &quot;</span></span><span class="token punctuation">,</span> text<span class="token punctuation">:</span> $tipAmount<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">textFieldStyle</span><span class="token punctuation">(</span><span class="token punctuation">.</span>roundedBorder<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">keyboardType</span><span class="token punctuation">(</span><span class="token punctuation">.</span>decimalPad<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Submit&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Tip: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">tipAmount</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">hideKeyboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token directive property"><span class="token directive-name">#if</span> canImport<span class="token punctuation">(</span>UIKit<span class="token punctuation">)</span></span></span>
<span class="line"><span class="token keyword">extension</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">func</span> <span class="token function-definition function">hideKeyboard</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">UIApplication</span><span class="token punctuation">.</span>shared<span class="token punctuation">.</span><span class="token function">sendAction</span><span class="token punctuation">(</span><span class="token other-directive property">#selector</span><span class="token punctuation">(</span><span class="token class-name">UIResponder</span><span class="token punctuation">.</span>resignFirstResponder<span class="token punctuation">)</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> from<span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">,</span> <span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token nil constant">nil</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token directive property"><span class="token directive-name">#endif</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),_=s("div",{class:"hint-container important"},[s("p",{class:"hint-container-title"},"Important"),s("p",null,[i("If you're using Xcode 12 you need to use "),s("code",null,"RoundedBorderTextFieldStyle()"),i(" rather than "),s("code",null,".roundedBorder"),i(".")])],-1),q={class:"hint-container details"},I=s("summary",null,"Similar solutions…",-1);function T(u,A){const a=p("VPCard"),l=p("FontIcon"),o=p("VidStack");return m(),d("div",null,[s("h1",v,[s("a",f,[s("span",null,k(u.$frontmatter.title)+" 관련",1)])]),n(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),w,b,n(a,t(e({title:"How to dismiss the keyboard for a TextField | SwiftUI by Example",desc:"How to dismiss the keyboard for a TextField",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-dismiss-the-keyboard-for-a-textfield",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),y,s("blockquote",null,[s("p",null,[s("a",g,[n(l,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),n(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-dismiss-the-keyboard-for-a-textfield-1~dark.mp4 "}),x,s("blockquote",null,[s("p",null,[s("a",F,[n(l,{icon:"fas fa-file-zipper"}),i("Download this as an Xcode project")])])]),n(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-dismiss-the-keyboard-for-a-textfield-2~dark.mp4"}),S,n(o,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-dismiss-the-keyboard-for-a-textfield-3~dark.mp4 "}),_,s("details",q,[I,n(a,t(e({title:"How to dismiss the keyboard when the user scrolls | SwiftUI by Example",desc:"How to dismiss the keyboard when the user scrolls",link:"/hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-when-the-user-scrolls.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to make a view dismiss itself | SwiftUI by Example",desc:"How to make a view dismiss itself",link:"/hackingwithswift.com/swiftui/how-to-make-a-view-dismiss-itself.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to add a toolbar to the keyboard | SwiftUI by Example",desc:"How to add a toolbar to the keyboard",link:"/hackingwithswift.com/swiftui/how-to-add-a-toolbar-to-the-keyboard.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to make a TextField expand vertically as the user types | SwiftUI by Example",desc:"How to make a TextField expand vertically as the user types",link:"/hackingwithswift.com/swiftui/how-to-make-a-textfield-expand-vertically-as-the-user-types.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to add keyboard shortcuts using keyboardShortcut() | SwiftUI by Example",desc:"How to add keyboard shortcuts using keyboardShortcut()",link:"/hackingwithswift.com/swiftui/how-to-add-keyboard-shortcuts-using-keyboardshortcut.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const V=r(h,[["render",T],["__file","how-to-dismiss-the-keyboard-for-a-textfield.html.vue"]]),N=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-for-a-textfield.html","title":"How to dismiss the keyboard for a TextField","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to dismiss the keyboard for a TextField","description":"Article(s) > How to dismiss the keyboard for a TextField","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to dismiss the keyboard for a TextField"},{"property":"og:description","content":"How to dismiss the keyboard for a TextField"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-for-a-textfield.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-for-a-textfield.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to dismiss the keyboard for a TextField"}],["meta",{"property":"og:description","content":"Article(s) > How to dismiss the keyboard for a TextField"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to dismiss the keyboard for a TextField\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.5,"words":1050},"filePathRelative":"hackingwithswift.com/swiftui/how-to-dismiss-the-keyboard-for-a-textfield.md","excerpt":"\\n"}');export{V as comp,N as data};
