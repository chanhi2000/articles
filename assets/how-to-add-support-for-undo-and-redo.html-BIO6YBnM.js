import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as n,t as p,e,n as t,g as o,f as c,r as d,o as l}from"./app-BgNevrm5.js";const u={},h={id:"frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´",tabindex:"-1"},m={class:"header-anchor",href:"#frontmatter-title-·ÑÄ·Ö™·Ü´·ÑÖ·Öß·Ü´"},g=n("nav",{class:"table-of-contents"},[n("ul")],-1),f=n("hr",null,null,-1),k=c(`<blockquote><p>Updated for Xcode 15</p></blockquote><p>It is startlingly easy to add undo and redo support to SwiftData, and really it takes just two steps: enabling undo, then calling undo either through the SwiftUI environment or through your model context‚Äôs own undo manager.</p><p>First, adjust the way you create your model container so that you enable undo. If you‚Äôre using SwiftUI, this probably means changing your <code>modelContainer()</code> modifier to something like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token punctuation">.</span><span class="token function">modelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">Store</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">]</span><span class="token punctuation">,</span> isUndoEnabled<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Once you have your undo manager in place, you can call <code>undo()</code> or <code>redo()</code> on it and SwiftData will automatically undo the last set of changes. For example, if you were using SwiftUI you‚Äôd first request the environment‚Äôs undo manager, like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token attribute atrule">@Environment</span><span class="token punctuation">(</span><span class="token punctuation">\\</span><span class="token punctuation">.</span>undoManager<span class="token punctuation">)</span> <span class="token keyword">var</span> undoManager</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>And then trigger an undo action like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line">undoManager<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">undo</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>If you‚Äôre creating your model container manually, you need to create the undo manager manually too:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line">container <span class="token operator">=</span> <span class="token keyword">try</span> <span class="token class-name">ModelContainer</span><span class="token punctuation">(</span><span class="token keyword">for</span><span class="token punctuation">:</span> <span class="token class-name">Store</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">,</span> <span class="token class-name">Book</span><span class="token punctuation">.</span><span class="token keyword">self</span><span class="token punctuation">)</span></span>
<span class="line">container<span class="token punctuation">.</span>mainContext<span class="token punctuation">.</span>undoManager <span class="token operator">=</span> <span class="token class-name">UndoManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>And then you should use <code>modelContext.undoManager?.undo()</code> to perform an undo.</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Calling <code>undo()</code> or <code>redo()</code> undoes or redoes the last set of changes you made, but what ‚Äúlast set of changes‚Äù means is a bit fuzzy. What I can say for sure is that it <em>doesn‚Äôt</em> mean individual changes (if you make several changes at once, they will all be undone), and it also doesn‚Äôt mean all the changes made since a save last happened (if you make a change, call <code>save()</code>, then make another change, both will be undone). Instead, it seems to be runloop-based: All changes made in the current runloop are grouped together into a single undo/redo batch, even if you attempt to start a fresh transaction inside the runloop.</p></div><p>You can also call the undo manager directly on any model context, although this is likely to cause problems if you have other undoable operations on your view.</p><p>You can also redo actions, like so:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line">undoManager<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">redo</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="hint-container important"><p class="hint-container-title">Important</p><p>I‚Äôve found that undo works perfectly every time, correctly undoing property changes or removing objects and relations that were inserted. However, I‚Äôve found <em>redo</em> more flaky: it seems happy to redo simple property changes (changing someone‚Äôs name, for example), but struggles when redoing changes that involved objects with relations being deleted ‚Äì I‚Äôve had it crash several times. Tread carefully!</p></div><p>When undo/redo support is working correctly, you should automatically get three-finger swipe support working too: three-finger swipe left for undo, or right for redo.</p><p>As well as calling <code>undo()</code> and <code>redo()</code>, you can also check your undo manager&#39;s <code>canUndo</code> and <code>canRedo</code> property, to determine whether the actions are possible in the first place.</p>`,18);function w(s,y){const a=d("VPCard");return l(),r("div",null,[n("h1",h,[n("a",m,[n("span",null,p(s.$frontmatter.title)+" Í¥ÄÎ†®",1)])]),e(a,t(o({title:"SwiftData by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftdata/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),g,f,e(a,t(o({title:"How to add support for undo and redo | SwiftData by Example",desc:"How to add support for undo and redo",link:"https://hackingwithswift.com/quick-start/swiftdata/how-to-add-support-for-undo-and-redo",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),k])}const _=i(u,[["render",w],["__file","how-to-add-support-for-undo-and-redo.html.vue"]]),x=JSON.parse('{"path":"/hackingwithswift.com/swiftdata/how-to-add-support-for-undo-and-redo.html","title":"How to add support for undo and redo","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to add support for undo and redo","description":"Article(s) > How to add support for undo and redo","category":["Swift","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftdata","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to add support for undo and redo"},{"property":"og:description","content":"How to add support for undo and redo"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/how-to-add-support-for-undo-and-redo.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftdata/how-to-add-support-for-undo-and-redo.html"}],["meta",{"property":"og:site_name","content":"üìöBookshelf"}],["meta",{"property":"og:title","content":"How to add support for undo and redo"}],["meta",{"property":"og:description","content":"Article(s) > How to add support for undo and redo"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftdata"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["meta",{"property":"article:published_time","content":"2023-10-12T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to add support for undo and redo\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-10-12T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[]}"]],"date":"2023-10-12T00:00:00.000Z","isOriginal":false},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":2,"words":599},"filePathRelative":"hackingwithswift.com/swiftdata/how-to-add-support-for-undo-and-redo.md","localizedDate":"2023ÎÖÑ 10Ïõî 12Ïùº","excerpt":"\\n"}');export{_ as comp,x as data};
