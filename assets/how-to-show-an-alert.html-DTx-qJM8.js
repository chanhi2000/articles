import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,b as s,t as k,e as n,n as t,g as e,d as p,f as c,r as l,o as h}from"./app-BgNevrm5.js";const w={},m={id:"frontmatter-title-관련",tabindex:"-1"},g={class:"header-anchor",href:"#frontmatter-title-관련"},v=s("nav",{class:"table-of-contents"},[s("ul")],-1),b=s("hr",null,null,-1),f=c(`<blockquote><p>Updated for Xcode 15</p></blockquote><p><strong>Updated in iOS 15</strong></p><p>SwiftUI lets us show alerts to the user with its <code>alert()</code> modifier, but how that works depends on whether you’re targeting iOS 15 and later or whether you need to support iOS 13 and 14 too. I’ll show you both approaches here, but the newer iOS 15 approach is preferable because it builds on standard SwiftUI buttons.</p><p>Let’s look at the iOS 15 approach first. To show an alert, create some Boolean state that determines whether the alert should be visible, then attach that to an <code>alert()</code> modifier along with all the buttons you want to show in the alert. All buttons dismiss the alert when tapped, so you can provide an empty action for simple dismissal.</p><p>For example, this shows an alert with a single “OK” button:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> showingAlert <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Show Alert&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            showingAlert <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Important message&quot;</span></span><span class="token punctuation">,</span> isPresented<span class="token punctuation">:</span> $showingAlert<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;OK&quot;</span></span><span class="token punctuation">,</span> role<span class="token punctuation">:</span> <span class="token punctuation">.</span>cancel<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),y={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-show-an-alert-1.zip",target:"_blank",rel:"noopener noreferrer"},S=c(`<div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Presenting an alert like this will automatically set <code>showingAlert</code> back to false when the button is tapped.</p></div><p>You can provide as many buttons as you need, and if you provide no buttons then you’ll automatically be given a default “OK” to dismiss the alert. As these are standard SwiftUI buttons, you can assign other roles such as <code>.destructive</code> to have the system style them appropriately.</p><figure><img src="https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-show-an-alert-3~dark@2x.png" alt="An alert titled “Important message” with choices “First”, “Second”, and “Third” in red, as well as “Cancel” in bold blue." tabindex="0" loading="lazy"><figcaption>An alert titled “Important message” with choices “First”, “Second”, and “Third” in red, as well as “Cancel” in bold blue.</figcaption></figure><p>If you need to support iOS 14 and 13, you should instead use the dedicated <code>Alert</code> struct, which looks like this:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token class-name">Alert</span><span class="token punctuation">(</span></span>
<span class="line">    title<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Important message&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    message<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Wear sunscreen&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> </span>
<span class="line">    dismissButton<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Got it!&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>That defines a title and message, like you’d see in a <code>UIAlertController</code>, then adds a dismiss button with a default style and the text “Got it!”.</p><p>To <em>show</em> that alert the first approach is to define some sort of bindable condition that determines whether the alert should be visible or not. You then attach that to your main view, which presents the alert as soon as its condition becomes true.</p><p>For example, this code creates a <code>showingAlert</code> Boolean that tracks whether the sunscreen message should be shown or not, sets that Boolean to true when a button is tapped, then creates and attaches an alert view using that Boolean so it appears when the button is tapped:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> showingAlert <span class="token operator">=</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Show Alert&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            showingAlert <span class="token operator">=</span> <span class="token boolean">true</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>isPresented<span class="token punctuation">:</span> $showingAlert<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Alert</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Important message&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Wear sunscreen&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> dismissButton<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">default</span><span class="token punctuation">(</span><span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Got it!&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),_={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-show-an-alert-2.zip",target:"_blank",rel:"noopener noreferrer"},q=c(`<p>The second approach to creating alerts is to bind to some optional state that conforms to <code>Identifiable</code>, which will cause the alert to be shown whenever the object’s value changes.</p><p>There are two advantages to this method:</p><ol><li>You can attach any object you like at runtime, so your alert can show any number of different pieces of data.</li><li>SwiftUI automatically unwraps the optional when it has value, so you can be sure it exists by the time you want to show your alert – no need to check and unwrap the value yourself.</li></ol><p>For example, this shows one alert with two different values depending on which TV show was chosen:</p><div class="language-swift line-numbers-mode" data-highlighter="prismjs" data-ext="swift" data-title="swift"><pre><code><span class="line"><span class="token keyword">struct</span> <span class="token class-name">TVShow</span><span class="token punctuation">:</span> <span class="token class-name">Identifiable</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> id<span class="token punctuation">:</span> <span class="token class-name">String</span> <span class="token punctuation">{</span> name <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">let</span> name<span class="token punctuation">:</span> <span class="token class-name">String</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">struct</span> <span class="token class-name">ContentView</span><span class="token punctuation">:</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token attribute atrule">@State</span> <span class="token keyword">private</span> <span class="token keyword">var</span> selectedShow<span class="token punctuation">:</span> <span class="token class-name">TVShow</span><span class="token operator">?</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">var</span> body<span class="token punctuation">:</span> <span class="token keyword">some</span> <span class="token class-name">View</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token class-name">VStack</span><span class="token punctuation">(</span>spacing<span class="token punctuation">:</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;What is your favorite TV show?&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token punctuation">.</span>headline<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Select Ted Lasso&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                selectedShow <span class="token operator">=</span> <span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Ted Lasso&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">            <span class="token class-name">Button</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Select Bridgerton&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                selectedShow <span class="token operator">=</span> <span class="token class-name">TVShow</span><span class="token punctuation">(</span>name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;Bridgerton&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> $selectedShow<span class="token punctuation">)</span> <span class="token punctuation">{</span> show <span class="token keyword">in</span></span>
<span class="line">            <span class="token class-name">Alert</span><span class="token punctuation">(</span>title<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span>show<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token punctuation">:</span> <span class="token class-name">Text</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;Great choice!&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span> dismissButton<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),x={href:"https://hackingwithswift.com/files/projects/swiftui/how-to-show-an-alert-3.zip",target:"_blank",rel:"noopener noreferrer"},T={class:"hint-container details"},A=s("summary",null,"Similar solutions…",-1);function I(r,V){const a=l("VPCard"),o=l("FontIcon"),i=l("VidStack");return h(),d("div",null,[s("h1",m,[s("a",g,[s("span",null,k(r.$frontmatter.title)+" 관련",1)])]),n(a,t(e({title:"SwiftUI by Example",desc:"Back to Home",link:"/hackingwithswift.com/swiftui/README.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(174,10,10,0.2)"})),null,16),v,b,n(a,t(e({title:"How to show an alert | SwiftUI by Example",desc:"How to show an alert",link:"https://hackingwithswift.com/quick-start/swiftui/how-to-show-an-alert",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),f,s("blockquote",null,[s("p",null,[s("a",y,[n(o,{icon:"fas fa-file-zipper"}),p("Download this as an Xcode project")])])]),n(i,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-show-an-alert-1~dark.mp4"}),S,s("blockquote",null,[s("p",null,[s("a",_,[n(o,{icon:"fas fa-file-zipper"}),p("Download this as an Xcode project")])])]),n(i,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-show-an-alert-4~dark.mp4"}),q,s("blockquote",null,[s("p",null,[s("a",x,[n(o,{icon:"fas fa-file-zipper"}),p("Download this as an Xcode project")])])]),n(i,{src:"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-show-an-alert-5~dark.mp4"}),s("details",T,[A,n(a,t(e({title:"Presenting an alert | SwiftUI by Example",desc:"Presenting an alert",link:"/hackingwithswift.com/swiftui/presenting-an-alert.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to add actions to alert buttons | SwiftUI by Example",desc:"How to add actions to alert buttons",link:"/hackingwithswift.com/swiftui/how-to-add-actions-to-alert-buttons.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to add a TextField to an alert | SwiftUI by Example",desc:"How to add a TextField to an alert",link:"/hackingwithswift.com/swiftui/how-to-add-a-textfield-to-an-alert.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to show multiple alerts in a single view | SwiftUI by Example",desc:"How to show multiple alerts in a single view",link:"/hackingwithswift.com/swiftui/how-to-show-multiple-alerts-in-a-single-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16),n(a,t(e({title:"How to show a Map view | SwiftUI by Example",desc:"How to show a Map view",link:"/hackingwithswift.com/swiftui/how-to-show-a-map-view.md",logo:"https://hackingwithswift.com/favicon.svg",background:"rgba(54,94,226,0.2)"})),null,16)])])}const U=u(w,[["render",I],["__file","how-to-show-an-alert.html.vue"]]),j=JSON.parse('{"path":"/hackingwithswift.com/swiftui/how-to-show-an-alert.html","title":"How to show an alert","lang":"ko-KR","frontmatter":{"lang":"ko-KR","title":"How to show an alert","description":"Article(s) > How to show an alert","category":["Swift","SwiftUI","Article(s)"],"tag":["blog","hackingwithswift.com","crashcourse","swift","swiftui","xcode","appstore"],"head":[[{"meta":null},{"property":"og:title","content":"Article(s) > How to show an alert"},{"property":"og:description","content":"How to show an alert"},{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-show-an-alert.html"}],["meta",{"property":"og:url","content":"https://chanhi2000.github.io/bookshelf/hackingwithswift.com/swiftui/how-to-show-an-alert.html"}],["meta",{"property":"og:site_name","content":"📚Bookshelf"}],["meta",{"property":"og:title","content":"How to show an alert"}],["meta",{"property":"og:description","content":"Article(s) > How to show an alert"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-show-an-alert-3~dark@2x.png"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"article:tag","content":"blog"}],["meta",{"property":"article:tag","content":"hackingwithswift.com"}],["meta",{"property":"article:tag","content":"crashcourse"}],["meta",{"property":"article:tag","content":"swift"}],["meta",{"property":"article:tag","content":"swiftui"}],["meta",{"property":"article:tag","content":"xcode"}],["meta",{"property":"article:tag","content":"appstore"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to show an alert\\",\\"image\\":[\\"https://hackingwithswift.com/img/books/quick-start/swiftui/how-to-show-an-alert-3~dark@2x.png\\"],\\"dateModified\\":null,\\"author\\":[]}"]]},"headers":[],"git":{"contributors":[{"name":"chanhi2000","email":"chanhi2000@gmail.com","commits":2}]},"readingTime":{"minutes":3.44,"words":1032},"filePathRelative":"hackingwithswift.com/swiftui/how-to-show-an-alert.md","excerpt":"\\n"}');export{U as comp,j as data};
